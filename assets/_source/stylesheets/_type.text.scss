

// --------------------------------------------------------------------------
//   TEXT TYPOGRAPHY
// --------------------------------------------------------------------------


// Common theme…

@mixin textTemplate(
	$mixinSize: text,
	$mixinColor: palette(text),
	$mixinFont: $font-text-book,
	$mixinLetterSpacing: 0,
	$mixinLineHeight: $base-line-height-unit
) {

	// standards
	color: $mixinColor;
	font-family: $mixinFont;
	letter-spacing: $mixinLetterSpacing;
	line-height: $mixinLineHeight;

	// sizes
	font-size: fontsize($mixinSize, sm);
	@include media-breakpoint-up(sm) { font-size: fontsize($mixinSize, rg); }
	@include media-breakpoint-up(lg) { font-size: fontsize($mixinSize, lg); }

	// children
	> li,
	> li a,
	> a {
		color: currentColor;
		font-family: inherit;
		font-size: inherit;
		margin: 0;
	}
}


// Text components by size…

@mixin textRg() {
	@include textTemplate(
    );
}

@mixin textSm() {
	@include textTemplate(
		$mixinSize: text--sm,
		$mixinLetterSpacing: 0.02em,
        $mixinLineHeight: 1.6
	);
}

@mixin textLg() {
	@include textTemplate(
		$mixinSize: text--lg,
        $mixinLetterSpacing: 0.005em,
        $mixinLineHeight: 1.4
	);
}



// Component: Text
// Initiate mixins in classes.
// --------------------------------------------------------------------------

.c-text--sm       { @include textSm(); }
.c-text           { @include textRg(); }
.c-text--medium   { @include textRg(); color: palette(medium) !important; }
.c-text--intro    { @include textRg(); color: palette(medium); margin-bottom: space(0.5); }
.c-text--lg       { @include textLg(); margin-bottom: 0; > strong { font-family: $font-text-extrabold; text-transform: initial; } }


.c-text--meta {
	@include textSm();
	color: palette(medium) !important;
	// text-align: center;

	> a {
		border-color: transparent !important;

		@include on-event() {
			border-color: palette(medium) !important;
		}
	}

	@include media-breakpoint-up(sm) {
		margin: auto;
		// width: 70%;
	}
}

.c-cite {
    @include textRg();
    display: block;
    font-family: $font-text-semibold;
    font-style: normal;
    letter-spacing: 0.12em;
    margin-top: space(0.5);
    text-transform: uppercase;

    a {
        letter-spacing: inherit;
    }
}


// Fast project hacks
// --------------------------------------------------------------------------

.c-text--lg > strong {
    display: inline;
    font-family: $font-text-bold;
    text-transform: initial;
}

a > strong {
    display: block;
}



// Component: Text blocks
// --------------------------------------------------------------------------

.c-text-block { > * { @include textRg(); } }

.c-text-block--footer {
	@include listClean();
	margin: 0;

	&::before {
		background-color: rgba( palette(background), 0.2);
		content: " ";
		display: block;
		height: 1px;
		margin: space(1) 0 space(1.15);
		width: 2.5%;
	}

	> * {
		@include textRg();
		margin-bottom: 0;
	}
}




// Component: list
// --------------------------------------------------------------------------

//list cell of fixed width, like a tabbed info element
.c-list--itemTag {
	@include textSm();
	display: inline-block;
	width: space(0.75);
}

.c-list--meta {
	@include textSm();
	@include listClean();
	color: palette(medium);
	margin-bottom: space(1.25);
}

.c-list--meta-title {
	color: palette(text) !important;
	margin: space(1.25) 0 space(0.625) !important;

	&:first-child {
		margin-top: 0 !important;
	}
}



// Utility: HTML elements
// --------------------------------------------------------------------------

// h1, h2, h3, h4, h5, h6,
// blockquote, figure
// li
ul, ol, dl,
p, address,
table, time,
fieldset, figcaption,
pre, a {
	@include textRg();
}

em,
.u-textEm {
	@include typeReset();
	font-family: $font-text-bold-i;
}

b,
strong,
.u-textBold {
	@include typeReset();
	font-family: $font-text-bold;
}

blockquote,
.Blockquote {
	// is this req'd?
	// @include typeReset();
	color: palette(medium);
	font-family: $font-text-book;
	font-size: fontsize(text, xs);
	margin-bottom: $paragraphSpace;

	@include media-breakpoint-up(sm) {
		font-size: fontsize(text, sm);
		//margin-bottom: space(1);
	}
}

// .Lede {
// 	@include textRg();
// 	color: color(text, brand) !important;
// 	font-family: $font-text-regular;
// 	font-size: fontsize(headline, xs);
// 	line-height: 1.45;
// 	// margin-bottom: space(1);
//
// 	@include media-breakpoint-up(sm) {
// 		font-family: $font-text-bold;
// 		font-size: fontsize(headline, base);
// 		line-height: $base-line-height-unit;
// 	}
// }
