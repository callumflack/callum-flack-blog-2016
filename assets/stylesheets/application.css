@charset "UTF-8";
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Correct the line-height for all headings in Chrome mobile, Firefox,
 * iOS Safari, Microsoft Edge and IE.
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.15; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Prevent margin and border from affecting element width.
 * https://goo.gl/pYtbK7
 *
 */
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0; }

button {
  background: transparent;
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

iframe {
  border: 0; }

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0; }

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */
[tabindex="-1"]:focus {
  outline: none !important; }

.mist .header {
  background-color: #dcfac0; }

.mist .content {
  background-color: #00968b; }

.mist .footer {
  background-color: #85c79c; }

.spring .header {
  background-color: #f4fac7; }

.spring .content {
  background-color: #c2454e; }

.spring .footer {
  background-color: #ffb158; }

@font-face {
  font-family: "thin";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/thin.eot");
  src: url("/assets/fonts/thin.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/thin.woff") format("woff"), url("/assets/fonts/thin.ttf") format("truetype"), url("/assets/fonts/thin.svg#thin") format("svg"); }

@font-face {
  font-family: "light";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/light.eot");
  src: url("/assets/fonts/light.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/light.woff") format("woff"), url("/assets/fonts/light.ttf") format("truetype"), url("/assets/fonts/light.svg#light") format("svg"); }

@font-face {
  font-family: "blond";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/blond.eot");
  src: url("/assets/fonts/blond.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/blond.woff") format("woff"), url("/assets/fonts/blond.ttf") format("truetype"), url("/assets/fonts/blond.svg#blond") format("svg"); }

@font-face {
  font-family: "normal";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/normal.eot");
  src: url("/assets/fonts/normal.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/normal.woff") format("woff"), url("/assets/fonts/normal.ttf") format("truetype"), url("/assets/fonts/normal.svg#normal") format("svg"); }

@font-face {
  font-family: "medium";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/medium.eot");
  src: url("/assets/fonts/medium.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/medium.woff") format("woff"), url("/assets/fonts/medium.ttf") format("truetype"), url("/assets/fonts/medium.svg#medium") format("svg"); }

@font-face {
  font-family: "bold";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/bold.eot");
  src: url("/assets/fonts/bold.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/bold.woff") format("woff"), url("/assets/fonts/bold.ttf") format("truetype"), url("/assets/fonts/bold.svg#bold") format("svg"); }

@font-face {
  font-family: "black";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/black.eot");
  src: url("/assets/fonts/black.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/black.woff") format("woff"), url("/assets/fonts/black.ttf") format("truetype"), url("/assets/fonts/black.svg#black") format("svg"); }

/** @define Button */
/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */
/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */
.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 1px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  cursor: pointer;
  display: inline-block;
  font: inherit;
  /* 3 */
  margin: 0;
  padding: 0.4em 0.75em;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* 4 */ }

/**
 * Remove excess padding and border in Firefox 4+
 */
.Button::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

/**
 * UI states
 */
.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none; }

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: var(--Button-disabled-opacity); }

/** @define FlexEmbed */
/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */
.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative; }

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */
.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%; }

/**
 * Modifier: 3:1 aspect ratio
 */
.FlexEmbed-ratio--3by1 {
  padding-bottom: -webkit-calc(100% / 3);
  padding-bottom: calc(100% / 3); }

/**
 * Modifier: 2:1 aspect ratio
 */
.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%; }

/**
 * Modifier: 16:9 aspect ratio
 */
.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%; }

/**
 * Modifier: 4:3 aspect ratio
 */
.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%; }

/**
 * Fit the content to the aspect ratio
 */
.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

/** @define Grid */
/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */
/* Grid container
   ========================================================================== */
/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.Grid {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* 1 */
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */ }

/**
 * Modifier: center align all grid cells
 */
.Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

/**
 * Modifier: right align all grid cells
 */
.Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

/**
 * Modifier: middle-align grid cells
 */
.Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  -ms-grid-row-align: center;
  align-items: center; }

/**
 * Modifier: bottom-align grid cells
 */
.Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  -ms-grid-row-align: flex-end;
  align-items: flex-end; }

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  /* 1 */ }

/**
 * Modifier: all cells match height of tallest cell in a row
 */
.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

/**
 * Modifier: gutters
 */
.Grid--withGutter {
  margin: 0 -webkit-calc(-0.5 * 17.4px);
  margin: 0 calc(-0.5 * 17.4px); }

.Grid--withGutter > .Grid-cell {
  padding: 0 -webkit-calc(0.5 * 17.4px);
  padding: 0 calc(0.5 * 17.4px); }

/* Grid cell
   ========================================================================== */
/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */
.Grid-cell {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  /* 1 */
  min-width: 0;
  /* 2 */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */
.Grid-cell--center {
  margin: 0 auto; }

.xs-Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.xs-Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

.xs-Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  -ms-grid-row-align: center;
  align-items: center; }

.xs-Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  -ms-grid-row-align: flex-end;
  align-items: flex-end; }

.xs-Grid-cell--center {
  margin: 0 auto; }

@media (min-width: 544px) {
  .sm-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .sm-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .sm-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .sm-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .sm-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 768px) {
  .md-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .md-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .md-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .md-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .md-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 992px) {
  .lg-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .lg-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .lg-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .lg-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .lg-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1200px) {
  .xl-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .xl-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .xl-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .xl-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .xl-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1700px) {
  .su-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .su-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .su-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .su-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .su-Grid-cell--center {
    margin: 0 auto; } }

.Grid--withGutter {
  margin: 0 -15.46667px; }
  @media (min-width: 992px) {
    .Grid--withGutter {
      margin: 0 -46.4px; } }

.Grid--withGutter > .Grid-cell {
  padding: 0 15.46667px; }
  @media (min-width: 992px) {
    .Grid--withGutter > .Grid-cell {
      padding: 0 46.4px; } }

.Grid--withGutterSm {
  margin: 0 -5.15556px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm {
      margin: 0 -15.46667px; } }

.Grid--withGutterSm > .Grid-cell {
  padding: 0 5.15556px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm > .Grid-cell {
      padding: 0 15.46667px; } }

/**
  * Simple page-level setup from InuitCSS.
  *
  * 1. Set the default `font-size` and `line-height` for the entire project,
  *    sourced from our default variables. The `font-size` is calculated to exist
  *    in ems, the `line-height` is calculated to exist unitlessly.
  * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
  *    navigating between pages that do/do not have enough content to produce
  *    scrollbars naturally.
  * 3. Ensure the page always fills at least the entire height of the viewport.
  */
html {
  background-color: #fdfdfd;
  min-height: 100%;
  /* 3 */
  overflow-y: scroll;
  /* 2 */ }

a {
  color: currentColor;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    color: currentColor; }

img {
  max-width: 100%;
  font-style: italic;
  vertical-align: middle; }

.gm-style img,
img[width],
img[height] {
  max-width: none; }

/* uncss:ignore */
h1, h2, h3, h4, h5, h6,
blockquote,
ul, ol, li, dl, dd
p, address,
table, time,
form, fieldset, legend,
figure, figcaption,
table, th, td, caption
pre, small,
em, b {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal; }

html {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "normal", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-size: 100%;
  line-height: 1.45;
  text-align: left;
  text-rendering: geometricPrecision;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

/* uncss:ignore */
ul, ol, li, dl,
blockquote, p, address,
table, time,
fieldset,
pre {
  margin-bottom: 29px; }

.o-posAbsoluteCenter {
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFixedCenter {
  left: 50%;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFullScreen {
  bottom: 0;
  left: 0;
  margin: auto;
  position: fixed;
  right: 0;
  top: 0; }

.o-posAbsoluteCenterAlt {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0; }

.o-posFullScreen,
.o-posFixedCenter {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.o-container {
  height: inherit;
  margin: 0 auto;
  max-width: 800px;
  padding: 0 34.8px;
  position: relative; }
  .o-container:before, .o-container:after {
    content: " ";
    display: table; }
  .o-container:after {
    clear: both; }
  .o-container p:last-child,
  .o-container p:last-child a,
  .o-container li:last-child,
  .o-container li:last-child a,
  .o-container ol:last-child,
  .o-container ol:last-child a {
    margin-bottom: 0; }
  @media (min-width: 544px) {
    .o-container {
      padding: 0 46.4px; } }
  @media (min-width: 992px) {
    .o-container {
      padding: 0; } }
  .o-container--md {
    height: inherit;
    margin: 0 auto;
    padding: 0 34.8px;
    position: relative; }
    .o-container--md:before, .o-container--md:after {
      content: " ";
      display: table; }
    .o-container--md:after {
      clear: both; }
    .o-container--md p:last-child,
    .o-container--md p:last-child a,
    .o-container--md li:last-child,
    .o-container--md li:last-child a,
    .o-container--md ol:last-child,
    .o-container--md ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--md {
        padding: 0 46.4px; } }
    @media (min-width: 992px) {
      .o-container--md {
        padding: 0; } }
  .o-container--lg {
    height: inherit;
    margin: 0 auto;
    max-width: 960px;
    padding: 0 34.8px;
    position: relative; }
    .o-container--lg:before, .o-container--lg:after {
      content: " ";
      display: table; }
    .o-container--lg:after {
      clear: both; }
    .o-container--lg p:last-child,
    .o-container--lg p:last-child a,
    .o-container--lg li:last-child,
    .o-container--lg li:last-child a,
    .o-container--lg ol:last-child,
    .o-container--lg ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--lg {
        padding: 0 46.4px; } }
    @media (min-width: 992px) {
      .o-container--lg {
        padding: 0; } }
  .o-container--xl {
    height: inherit;
    margin: 0 auto;
    max-width: 1100px;
    padding: 0 34.8px;
    position: relative; }
    .o-container--xl:before, .o-container--xl:after {
      content: " ";
      display: table; }
    .o-container--xl:after {
      clear: both; }
    .o-container--xl p:last-child,
    .o-container--xl p:last-child a,
    .o-container--xl li:last-child,
    .o-container--xl li:last-child a,
    .o-container--xl ol:last-child,
    .o-container--xl ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--xl {
        padding: 0 46.4px; } }
    @media (min-width: 992px) {
      .o-container--xl {
        padding: 0; } }
  @media (min-width: 544px) {
    .o-container--hero {
      padding: 0 92.8px; } }
  @media (min-width: 992px) {
    .o-container--hero {
      padding: 0 46.4px; } }
  .o-container--super {
    max-width: 100%;
    padding: 0 34.8px; }
    @media (min-width: 544px) {
      .o-container--super {
        padding: 0 92.8px; } }

[data-modal-toggle],
[data-toggle-fold],
[data-dismiss] {
  cursor: pointer; }

ul {
  list-style-type: square;
  margin-left: 34.8px;
  padding-left: 0; }

ol {
  list-style-type: decimal; }

li {
  margin-bottom: 0; }
  li > ul,
  li > ol {
    margin-bottom: 0; }

.o-list {
  margin-left: 34.8px;
  padding-left: 0; }

.o-listClean {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }

.o-listInline {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }
  .o-listInline li,
  .o-listInline div {
    display: inline-block; }
    .o-listInline li:not(:last-child),
    .o-listInline div:not(:last-child) {
      margin-right: 5.8px; }

a {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out; }
  a:hover, a:active, a:focus {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out; }

.o-linkBuried {
  display: block;
  width: 100%;
  margin-bottom: 11.6px; }
  .o-linkBuried:hover .o-linkBuriedTarget, .o-linkBuried:active .o-linkBuriedTarget, .o-linkBuried:focus .o-linkBuriedTarget {
    background-color: #00abff; }

.o-linkBuriedTarget {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  color: #151515; }

.o-coverImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none; }

.o-coverImage--dark {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%; }
  .o-coverImage--dark:before {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#00abff), to(rgba(0, 171, 255, 0.2)));
    background-image: -webkit-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
    background-image: -o-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
    background-image: linear-gradient(to bottom, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
    background-blend-mode: multiply;
    content: " ";
    opacity: 1; }

@media (max-width: 767px) {
  .o-coverImage--blends {
    background-position-x: 0; } }

.o-containImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none;
  background-size: contain; }

.o-fitImageCover {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%; }

.FlexEmbed-fitImage {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%; }

.FlexEmbed-content--dark:before {
  background-image: -webkit-gradient(linear, left top, left bottom, from(#00abff), to(rgba(0, 171, 255, 0.2)));
  background-image: -webkit-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
  background-image: -o-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
  background-image: linear-gradient(to bottom, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
  background-blend-mode: multiply;
  content: " ";
  opacity: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.c-text--sm {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 13px; }
  @media (min-width: 544px) {
    .c-text--sm {
      font-size: 15px; } }
  @media (min-width: 992px) {
    .c-text--sm {
      font-size: 16px; } }
  .c-text--sm > li,
  .c-text--sm > li a,
  .c-text--sm > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px; }
  @media (min-width: 544px) {
    .c-text {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .c-text {
      font-size: 24px; } }
  .c-text > li,
  .c-text > li a,
  .c-text > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--medium {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px;
  color: gray; }
  @media (min-width: 544px) {
    .c-text--medium {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .c-text--medium {
      font-size: 24px; } }
  .c-text--medium > li,
  .c-text--medium > li a,
  .c-text--medium > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--intro {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px;
  color: gray;
  margin-bottom: 11.6px; }
  @media (min-width: 544px) {
    .c-text--intro {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .c-text--intro {
      font-size: 24px; } }
  .c-text--intro > li,
  .c-text--intro > li a,
  .c-text--intro > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--lg {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  margin-bottom: 0; }
  @media (min-width: 544px) {
    .c-text--lg {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-text--lg {
      font-size: 36px; } }
  .c-text--lg > li,
  .c-text--lg > li a,
  .c-text--lg > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-text--lg > strong {
    font-family: "extrabold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    text-transform: initial; }

.c-text--meta {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 13px;
  color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      font-size: 15px; } }
  @media (min-width: 992px) {
    .c-text--meta {
      font-size: 16px; } }
  .c-text--meta > li,
  .c-text--meta > li a,
  .c-text--meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-text--meta > a {
    border-color: transparent !important; }
    .c-text--meta > a:hover, .c-text--meta > a:active, .c-text--meta > a:focus {
      border-color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      margin: auto; } }

.c-cite {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px;
  display: block;
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-style: normal;
  letter-spacing: 0.12em;
  margin-top: 11.6px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-cite {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .c-cite {
      font-size: 24px; } }
  .c-cite > li,
  .c-cite > li a,
  .c-cite > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-cite a {
    letter-spacing: inherit; }

.c-text--lg > strong {
  display: inline;
  font-family: "bold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: initial; }

a > strong {
  display: block; }

.c-text-block > * {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px; }
  @media (min-width: 544px) {
    .c-text-block > * {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .c-text-block > * {
      font-size: 24px; } }
  .c-text-block > * > li,
  .c-text-block > * > li a,
  .c-text-block > * > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text-block--footer {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  margin: 0; }
  .c-text-block--footer::before {
    background-color: rgba(253, 253, 253, 0.2);
    content: " ";
    display: block;
    height: 1px;
    margin: 23.2px 0 26.68px;
    width: 2.5%; }
  .c-text-block--footer > * {
    color: #151515;
    font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0;
    line-height: 1.45;
    font-size: 17px;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-text-block--footer > * {
        font-size: 21px; } }
    @media (min-width: 992px) {
      .c-text-block--footer > * {
        font-size: 24px; } }
    .c-text-block--footer > * > li,
    .c-text-block--footer > * > li a,
    .c-text-block--footer > * > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }

.c-list--itemTag {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 13px;
  display: inline-block;
  width: 17.4px; }
  @media (min-width: 544px) {
    .c-list--itemTag {
      font-size: 15px; } }
  @media (min-width: 992px) {
    .c-list--itemTag {
      font-size: 16px; } }
  .c-list--itemTag > li,
  .c-list--itemTag > li a,
  .c-list--itemTag > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-list--meta {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 13px;
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  color: gray;
  margin-bottom: 29px; }
  @media (min-width: 544px) {
    .c-list--meta {
      font-size: 15px; } }
  @media (min-width: 992px) {
    .c-list--meta {
      font-size: 16px; } }
  .c-list--meta > li,
  .c-list--meta > li a,
  .c-list--meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-list--meta-title {
  color: #151515 !important;
  margin: 29px 0 14.5px !important; }
  .c-list--meta-title:first-child {
    margin-top: 0 !important; }

ul, ol, dl,
p, address,
table, time,
fieldset, figcaption,
pre, a {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px; }
  @media (min-width: 544px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 21px; } }
  @media (min-width: 992px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 24px; } }
  ul > li,
  ul > li a,
  ul > a, ol > li,
  ol > li a,
  ol > a, dl > li,
  dl > li a,
  dl > a,
  p > li,
  p > li a,
  p > a, address > li,
  address > li a,
  address > a,
  table > li,
  table > li a,
  table > a, time > li,
  time > li a,
  time > a,
  fieldset > li,
  fieldset > li a,
  fieldset > a, figcaption > li,
  figcaption > li a,
  figcaption > a,
  pre > li,
  pre > li a,
  pre > a, a > li,
  a > li a,
  a > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

em,
.u-textEm {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  font-family: "bold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

b,
strong,
.u-textBold {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  font-family: "bold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

blockquote,
.Blockquote {
  color: gray;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  margin-bottom: 29px; }
  @media (min-width: 544px) {
    blockquote,
    .Blockquote {
      font-size: 17px; } }

.c-display {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: -0.005em;
  line-height: 1.1;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-size: 40px; }
  @media (min-width: 992px) {
    .c-display {
      font-size: 60px; } }
  .c-display > li,
  .c-display > li a,
  .c-display > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .Footer .c-display {
    margin-bottom: 29px; }

.c-headline {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: -0.015em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left; }
  @media (min-width: 544px) {
    .c-headline {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-headline {
      font-size: 36px; } }
  .c-headline > li,
  .c-headline > li a,
  .c-headline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--sm {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left; }
  @media (min-width: 544px) {
    .c-headline--sm {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-headline--sm {
      font-size: 36px; } }
  .c-headline--sm > li,
  .c-headline--sm > li a,
  .c-headline--sm > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--smSemi {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 544px) {
    .c-headline--smSemi {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-headline--smSemi {
      font-size: 36px; } }
  .c-headline--smSemi > li,
  .c-headline--smSemi > li a,
  .c-headline--smSemi > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--xs {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-size: 18px; }
  @media (min-width: 992px) {
    .c-headline--xs {
      font-size: 27px; } }
  .c-headline--xs > li,
  .c-headline--xs > li a,
  .c-headline--xs > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--xsSemi {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-size: 18px;
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 992px) {
    .c-headline--xsSemi {
      font-size: 27px; } }
  .c-headline--xsSemi > li,
  .c-headline--xsSemi > li a,
  .c-headline--xsSemi > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline em {
  font-family: inherit;
  font-style: normal;
  font-weight: normal; }

@media (max-width: 1199px) {
  span.u-lg-lineBreak {
    display: table !important;
    margin: auto; } }

@media (max-width: 767px) {
  span.u-sm-lineBreak {
    display: table !important;
    margin: auto; } }

.u-textWtLt {
  font-family: "light", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtRg {
  font-family: "normal", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtMd {
  font-family: "medium", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtSemi {
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

h2 + h3 {
  margin-top: 4.64px; }

h3 + p {
  margin-top: 9.28px; }

html {
  background-color: #fff59f; }

.c-content {
  background-color: #fdfdfd;
  padding: 12vh 0; }

.c-header {
  padding: 6vh 0;
  position: relative; }

.c-header-text {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 18px;
  position: relative; }
  @media (min-width: 544px) {
    .c-header-text {
      font-size: 22px; } }
  @media (min-width: 992px) {
    .c-header-text {
      font-size: 25px; } }
  .c-header-text > li,
  .c-header-text > li a,
  .c-header-text > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-header-text:before {
    content: '*';
    font-family: "light", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    font-size: 190%;
    position: absolute;
    left: -6.5%;
    top: -6.25%; }
    @media (min-width: 544px) {
      .c-header-text:before {
        left: -3.75%;
        top: -13%; } }
    @media (min-width: 992px) {
      .c-header-text:before {
        left: -4.5%;
        top: -15%; } }
  .c-header-text a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(21, 21, 21, 0)), color-stop(50%, rgba(21, 21, 21, 0.7)));
    background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
    background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
    background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
    background-repeat: repeat-x;
    background-size: 1px 1px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none; }
    .c-header-text a:hover, .c-header-text a:active, .c-header-text a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }

.Post + .Post {
  margin-top: 12vh; }

.Post-content a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(21, 21, 21, 0)), color-stop(50%, rgba(21, 21, 21, 0.7)));
  background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
  background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
  background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .Post-content a:hover, .Post-content a:active, .Post-content a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.Post-content figure {
  margin: 36.25px 0 43.5px; }
  @media (min-width: 544px) {
    .Post-content figure {
      margin: 36.25px; } }
  @media (min-width: 768px) {
    .Post-content figure {
      margin: 50.75px; } }

.Post-content blockquote p {
  background-color: rgba(243, 242, 241, 0.7);
  color: rgba(21, 21, 21, 0.7);
  letter-spacing: 0.0025em;
  line-height: 1.6;
  padding: 13.92px 17.4px 11.6px;
  font-size: 16px; }
  @media (min-width: 544px) {
    .Post-content blockquote p {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .Post-content blockquote p {
      font-size: 24px; } }

.Post-date {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 17px;
  color: #b3b3b3;
  float: left;
  margin-right: 6.96px; }
  @media (min-width: 544px) {
    .Post-date {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .Post-date {
      font-size: 24px; } }
  .Post-date > li,
  .Post-date > li a,
  .Post-date > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.Post-image {
  text-align: center; }
  .Post-image img {
    border: 1px solid #dbdbdb;
    width: 100%; }

.Post-meta {
  color: #b3b3b3;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.45;
  font-size: 13px;
  border-top: 1px solid #dbdbdb;
  margin-top: 31.9px;
  padding-top: 11.6px; }
  @media (min-width: 544px) {
    .Post-meta {
      font-size: 15px; } }
  @media (min-width: 992px) {
    .Post-meta {
      font-size: 16px; } }
  .Post-meta > li,
  .Post-meta > li a,
  .Post-meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .Post-meta span {
    display: inline-block;
    font-size: 75%;
    margin: 0 5.8px;
    -webkit-transform: translateY(-3px);
    -ms-transform: translateY(-3px);
    transform: translateY(-3px); }

.Post-tags {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 13px;
  color: #b3b3b3;
  display: inline-block; }
  @media (min-width: 544px) {
    .Post-tags {
      font-size: 15px; } }
  @media (min-width: 992px) {
    .Post-tags {
      font-size: 16px; } }
  .Post-tags > li,
  .Post-tags > li a,
  .Post-tags > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .Post-tags > a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(179, 179, 179, 0)), color-stop(50%, #b3b3b3));
    background-image: -webkit-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
    background-image: -o-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
    background-image: linear-gradient(to bottom, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
    background-repeat: repeat-x;
    background-size: 1px 1px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none; }
    .Post-tags > a:hover, .Post-tags > a:active, .Post-tags > a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }

.t-button {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  padding: 0 17.4px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  line-height: 55px;
  padding-bottom: 3px; }
  .t-button[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .t-button {
      font-size: 36px; } }
  .t-button > li,
  .t-button > li a,
  .t-button > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: #00abff;
    border-color: #00abff;
    color: #FFF; }

.t-button--brand {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  padding: 0 17.4px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  line-height: 55px;
  padding-bottom: 3px;
  background-color: #00abff;
  border-color: #00abff; }
  .t-button--brand[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--brand:hover, .t-button--brand:active, .t-button--brand:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--brand {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .t-button--brand {
      font-size: 36px; } }
  .t-button--brand > li,
  .t-button--brand > li a,
  .t-button--brand > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .t-button--brand:hover, .t-button--brand:active, .t-button--brand:focus {
    background-color: #00abff;
    border-color: #00abff;
    color: #FFF; }

.t-button--rev {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  padding: 0 17.4px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  line-height: 55px;
  padding-bottom: 3px;
  background-color: transparent;
  border-color: currentColor;
  border-width: 1px; }
  .t-button--rev[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--rev {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .t-button--rev {
      font-size: 36px; } }
  .t-button--rev > li,
  .t-button--rev > li a,
  .t-button--rev > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: #00abff;
    border-color: #00abff;
    color: #FFF; }

.t-button--full {
  text-align: center;
  width: 100%; }

.t-buttonClose {
  color: #00abff;
  position: fixed;
  right: 11.6px;
  top: 11.6px;
  z-index: 1000;
  right: 23.2px;
  top: 31px; }
  .t-buttonClose:hover, .t-buttonClose:active, .t-buttonClose:focus {
    outline: none; }

input:hover, input:active, input:focus,
textarea:hover,
textarea:active,
textarea:focus,
select:hover,
select:active,
select:focus,
label:hover,
label:active,
label:focus {
  outline: 0; }

input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
  background: transparent;
  border: 0;
  display: inline-block;
  resize: none;
  width: 100%;
  -webkit-appearance: none;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  border-bottom: 1px solid rgba(0, 171, 255, 0.4);
  line-height: 55px;
  padding: 0 0 3px 0;
  -webkit-transition: all 500ms ease-out;
  -o-transition: all 500ms ease-out;
  transition: all 500ms ease-out; }
  @media (min-width: 544px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      font-size: 32px; } }
  @media (min-width: 992px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      font-size: 36px; } }
  input[type="text"] > li,
  input[type="text"] > li a,
  input[type="text"] > a,
  input[type="email"] > li,
  input[type="email"] > li a,
  input[type="email"] > a,
  input[type="tel"] > li,
  input[type="tel"] > li a,
  input[type="tel"] > a,
  textarea > li,
  textarea > li a,
  textarea > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      border: 1px solid rgba(0, 171, 255, 0.4);
      border-radius: 3px;
      padding-left: 11.6px; } }
  input[type="text"]:-webkit-autofill,
  input[type="email"]:-webkit-autofill,
  input[type="tel"]:-webkit-autofill,
  textarea:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 6.25rem #f7f7f7 inset;
    -webkit-text-fill-color: #00abff;
    background-clip: padding-box; }
  input[type="text"]::-webkit-input-placeholder,
  input[type="email"]::-webkit-input-placeholder,
  input[type="tel"]::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: #00abff; }
  input[type="text"]:-moz-placeholder,
  input[type="email"]:-moz-placeholder,
  input[type="tel"]:-moz-placeholder,
  textarea:-moz-placeholder {
    color: #00abff; }
  input[type="text"]::-moz-placeholder,
  input[type="email"]::-moz-placeholder,
  input[type="tel"]::-moz-placeholder,
  textarea::-moz-placeholder {
    color: #00abff; }
  input[type="text"]:-ms-input-placeholder,
  input[type="email"]:-ms-input-placeholder,
  input[type="tel"]:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: #00abff; }

/* uncss:ignore */

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGxpY2F0aW9uLmNzcyIsIl92ZW5kb3Iubm9ybWFsaXplLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYmFzZS5zY3NzIiwiX3Rvb2xzLmZ1bmN0aW9ucy5zY3NzIiwiX3Rvb2xzLnNldHRpbmdzLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYy1idXR0b24uc2NzcyIsIl92ZW5kb3Iuc3VpdGNzcy5jLWZsZXhlbWJlZC5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zY3NzIiwiX3Rvb2xzLm1peGlucy5icmVha3BvaW50cy5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zZXR0aW5ncy5zY3NzIiwiX2Jhc2UucGFnZS5zY3NzIiwiX2Jhc2UubGluay5zY3NzIiwiX3Rvb2xzLm1peGlucy5zY3NzIiwiX2Jhc2UuaW1hZ2Uuc2NzcyIsIl9iYXNlLnR5cGUuc2NzcyIsIl9vYmplY3QucG9zaXRpb24uc2NzcyIsIl9vYmplY3QuY29udGFpbmVyLnNjc3MiLCJfb2JqZWN0LmN1cnNvci5zY3NzIiwiX29iamVjdC5saXN0LnNjc3MiLCJfb2JqZWN0Lmxpbmsuc2NzcyIsIl9vYmplY3QuY292ZXJpbWFnZS5zY3NzIiwiX29iamVjdC5maXRpbWFnZS5zY3NzIiwiX3R5cGUudGV4dC5zY3NzIiwiX3R5cGUuaGVhZGxpbmUuc2NzcyIsIl90eXBlLmhlbHBlcnMuc2NzcyIsIl9sYXlvdXQuYm9keS5zY3NzIiwiX2xheW91dC5oZWFkZXIuc2NzcyIsIl9sYXlvdXQucG9zdC5zY3NzIiwiX2NvbXBvbmVudC5idXR0b24uc2NzcyIsIl9jb21wb25lbnQuZm9ybS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQ1FqQiw0RUFBNEU7QUFFNUU7OztHQUdHO0FBRUg7RUFDRSx3QkFBd0I7RUFBRSxPQUFPO0VBQ2pDLDJCQUEyQjtFQUFFLE9BQU87RUFDcEMsK0JBQStCO0VBQUUsT0FBTyxFQUN6Qzs7QUFFRDs7R0FFRztBQUVIO0VBQ0Us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ZnFLbUI7RWVwS25CLGdCZDBKd0IsRWN6SnhCOztBQUVEO0VBQ0MseUJBQXlCLEVBQ3pCOztBQUVEO0VBQ0MsaUJBQWlCLEVBTWpCO0VBUEQ7O0lBS0UsaUJBQWlCLEVBQ2pCOztBQVlGO0VBSkMsb0JmK0ltQjtFZTlJbkIsZ0Jkb0l3QixFY2pJSTs7QUFZN0I7RUFMQyxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGdCQUFnQixFQUdzQjs7QUFtQnZDO0VBeEJDLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsZ0JBQWdCLEVBc0J3QjtFQVR4Qzs7SUFFQyxzQkFBc0IsRUFJdEI7SUFORDs7TUFJRSxvQmZpSGlCLEVlaEhqQjs7QUN2REg7RVBtSEMsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNSb0RxQjtFUXBEckIsOEJSb0RxQjtFUXBEckIsMkJSb0RxQjtFUW5EckIsNkNSeUR3QjtFUXpEeEIsd0NSeUR3QjtFUXpEeEIscUNSeUR3QixFZXRLeEI7RUFSRDtJUG1IQyxpQ0FGYztJQUVkLDRCQUZjO0lBRWQseUJBRmM7SUFHZCxtQ1JvRHFCO0lRcERyQiw4QlJvRHFCO0lRcERyQiwyQlJvRHFCO0lRbkRyQiw2Q1J5RHdCO0lRekR4Qix3Q1J5RHdCO0lRekR4QixxQ1J5RHdCLEVRbEd0Qjs7QU8zQ0g7RUFWQyxlQUFlO0VBQ2YsWUFBWTtFQVdaLHNCaEJvSW1CLEVnQm5JbkI7RUFUQztJQUNDLDBCZkFrQyxFZUNsQzs7QUFXSDtFUDJFQyxpQ0FGYztFQUVkLDRCQUZjO0VBRWQseUJBRmM7RUFHZCxtQ1JvRHFCO0VRcERyQiw4QlJvRHFCO0VRcERyQiwyQlJvRHFCO0VRbkRyQiw2Q1J5RHdCO0VRekR4Qix3Q1J5RHdCO0VRekR4QixxQ1J5RHdCO0VlcEl4QixlZjVCb0MsRWU2QnBDOztBQ1BEO0VSK0VDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DUm9EcUI7RVFwRHJCLDhCUm9EcUI7RVFwRHJCLDJCUm9EcUI7RVFuRHJCLDZDUnlEd0I7RVF6RHhCLHdDUnlEd0I7RVF6RHhC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QyxnQmxCcUZxQjtFdUI3RGxCLGV4QjZHUTtFd0I1R1IsWUFBWTtFQUNaLHFCeEI4SGdCLEV3QjdIbkI7RW5CRkM7SW1CSEY7TUxyQm9DLGdCbEJxRmQsRXVCM0RyQixFQUFBO0VuQkZDO0ltQkhGO01McEJvQyxnQmxCcUZkLEV1QjVEckIsRUFBQTtFTHRCRTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWOztBS2lCRjtFQUNJLG1CQUFtQixFQWF0QjtFQWREO0lBSVEsMEJ4Qm9HSTtJd0JuR0osWUFBWSxFQUNmOztBQVVMO0VMbkRDLGVuQjJJVztFbUIxSVgsaUpsQjZMa0o7RWtCNUxsSix3QktxRDZCO0VMcEQ3QixrQmxCOEJvQztFa0IzQnBDLGdCbEIyRXFCO0V1QnhCbEIsOEJ4QmtGUTtFd0JoRlgsbUJBQTJCO0VBQzNCLG9CeEJrR21CLEV3QjFGbkI7RW5CckNDO0ltQm9CRjtNTDVDb0MsZ0JsQjJFZCxFdUJkckIsRUFBQTtFbkJyQ0M7SW1Cb0JGO01MM0NvQyxnQmxCMkVSLEV1QmYzQixFQUFBO0VMekRFOzs7SUFHRCxvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7RUtpQ0Y7SUFZUSxzQkFBc0I7SUFDdEIsZUFBZTtJQUNmLGdCeEI2Rlk7SXdCNUZaLG9DQUFxQjtJQUFyQixnQ0FBcUI7SUFBckIsNEJBQXFCLEVBQ3hCOztBQUdMO0VMdEVDLGVsQktvQztFa0JKcEMsaUpsQjZMa0o7RWtCNUxsSix1QkE4QjRCO0VBN0I1QixpQkE4QjRCO0VBM0I1QixnQmxCMkVxQjtFdUJUckIsZXhCbUVXO0V3QmxFUixzQkFBc0IsRUFNekI7RW5CaERDO0ltQnVDRjtNTC9Eb0MsZ0JsQjJFZCxFdUJIckIsRUFBQTtFbkJoREM7SW1CdUNGO01MOURvQyxnQmxCMkVSLEV1QkozQixFQUFBO0VMcEVFOzs7SUFHRCxvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixVQUFVLEVBQ1Y7RUtvREY7SVJORSxxSUF0QjZCO0lBc0I3Qix3RkF0QjZCO0lBc0I3QixtRkF0QjZCO0lBc0I3QixzRkF0QjZCO0lBdUI3Qiw0QkFBNEI7SUFDNUIseUJBQXlCO0lBQ3pCLDRCQUE0QjtJQUM1QixvQkFqQnlCO0lBa0J6QixrQkFBa0I7SUFDbEIsc0JBQXNCLEVRUW5CO0lBUkw7TVJJRSx1QkF4QnNCO01BeUJ0QixlQXZCMEI7TUF3QjFCLHNCQUFzQixFUFRyQjs7QWdCZkg7RWhCc0RDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DUm9EcUI7RVFwRHJCLDhCUm9EcUI7RVFwRHJCLDJCUm9EcUI7RVFuRHJCLDZDUnlEd0I7RVF6RHhCLHdDUnlEd0I7RVF6RHhCLHFDUnlEd0I7RXdCOUt4QixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixrQnpCb0ttQjtFU3JLaEIscUJBQXFCO0VBQ3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RVVLcEIsZWxCS29DO0VrQkpwQyxpSmxCNkxrSjtFa0I1TGxKLHdCQXNDbUM7RUFyQ25DLGlCQXNDNEI7RUFuQzVCLGdCbEIrRjJCO0V3QjFFeEIsa0J4Qm9Id0I7RXdCbkh4QixvQkFBb0IsRUEwQnZCO0VBRkQ7SUEzQ0Usc0J6QmtJVTtJeUJqSVYsMEJ6QmlJVTtJeUJoSVYsb0JBQW9CO0lBQ3BCLGFBQWEsRUFDYjtFQXVDRjtJQXBDRSwrQkFBK0I7SUFDL0IseUJBQXlCLEVoQmtEeEI7RUpwQ0Q7SW9CcUJGO01ON0NvQyxnQmxCK0ZSLEV3QmhEM0IsRUFBQTtFcEJ2QkM7SW9CcUJGO01ONUNvQyxnQmxCK0ZSLEV3QmpEM0IsRUFBQTtFTjNDRTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VNa0NGO0lBZlEsMEJ4QmxCNkI7SXdCbUI3QixzQnhCbkI2QjtJd0JvQjdCLFl4QnRDNkIsRVFrRWxDOztBZ0JYSDtFaEJrREMsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNSb0RxQjtFUXBEckIsOEJSb0RxQjtFUXBEckIsMkJSb0RxQjtFUW5EckIsNkNSeUR3QjtFUXpEeEIsd0NSeUR3QjtFUXpEeEIscUNSeUR3QjtFd0I5S3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLGtCekJvS21CO0VTcktoQixxQkFBcUI7RUFDeEIsbUJBQW1CO0VBQ25CLG9CQUFvQjtFVUtwQixlbEJLb0M7RWtCSnBDLGlKbEI2TGtKO0VrQjVMbEosd0JBc0NtQztFQXJDbkMsaUJBc0M0QjtFQW5DNUIsZ0JsQitGMkI7RXdCMUV4QixrQnhCb0h3QjtFd0JuSHhCLG9CQUFvQjtFQThCdkIsMEJ4QnZDb0M7RXdCd0NwQyxzQnhCeENvQyxFd0J5Q3BDO0VBSkQ7SUEvQ0Usc0J6QmtJVTtJeUJqSVYsMEJ6QmlJVTtJeUJoSVYsb0JBQW9CO0lBQ3BCLGFBQWEsRUFDYjtFQTJDRjtJQXhDRSwrQkFBK0I7SUFDL0IseUJBQXlCLEVoQmtEeEI7RUpwQ0Q7SW9CeUJGO01OakRvQyxnQmxCK0ZSLEV3QjFDM0IsRUFBQTtFcEI3QkM7SW9CeUJGO01OaERvQyxnQmxCK0ZSLEV3QjNDM0IsRUFBQTtFTmpERTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VNc0NGO0lBbkJRLDBCeEJsQjZCO0l3Qm1CN0Isc0J4Qm5CNkI7SXdCb0I3QixZeEJ0QzZCLEVRa0VsQzs7QWdCTEg7RWhCNENDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DUm9EcUI7RVFwRHJCLDhCUm9EcUI7RVFwRHJCLDJCUm9EcUI7RVFuRHJCLDZDUnlEd0I7RVF6RHhCLHdDUnlEd0I7RVF6RHhCLHFDUnlEd0I7RXdCOUt4QixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixrQnpCb0ttQjtFU3JLaEIscUJBQXFCO0VBQ3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RVVLcEIsZWxCS29DO0VrQkpwQyxpSmxCNkxrSjtFa0I1TGxKLHdCQXNDbUM7RUFyQ25DLGlCQXNDNEI7RUFuQzVCLGdCbEIrRjJCO0V3QjFFeEIsa0J4Qm9Id0I7RXdCbkh4QixvQkFBb0I7RUFvQ3ZCLDhCQUE4QjtFQUM5QiwyQkFBMkI7RUFDM0Isa0JBQWtCLEVBQ2xCO0VBTEQ7SUFyREUsc0J6QmtJVTtJeUJqSVYsMEJ6QmlJVTtJeUJoSVYsb0JBQW9CO0lBQ3BCLGFBQWEsRUFDYjtFQWlERjtJQTlDRSwrQkFBK0I7SUFDL0IseUJBQXlCLEVoQmtEeEI7RUpwQ0Q7SW9CK0JGO01OdkRvQyxnQmxCK0ZSLEV3Qm5DM0IsRUFBQTtFcEJwQ0M7SW9CK0JGO01OdERvQyxnQmxCK0ZSLEV3QnBDM0IsRUFBQTtFTnhERTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VNNENGO0lBekJRLDBCeEJsQjZCO0l3Qm1CN0Isc0J4Qm5CNkI7SXdCb0I3QixZeEJ0QzZCLEVRa0VsQzs7QWdCRUg7RUFFQyxtQkFBbUI7RUFDbkIsWUFBWSxFQUNaOztBQW1IRDtFQUNDLGV4QjFLb0M7RXdCMktwQyxnQkFBZ0I7RUFDaEIsY3pCakNtQjtFeUJrQ25CLFl6QmxDbUI7RXlCbUNuQixjeEJka0I7RXdCcUJqQixjekIxQ2tCO0V5QjJDbEIsVUFBVSxFQUVYO0VBZkQ7SUFRRSxjQUFjLEVoQmpJYjs7QWlCOUVIOzs7Ozs7Ozs7O0VBS0UsV0FBVyxFakJ5RVY7O0FpQmxFSDs7OztFQUlDLHdCQUF3QjtFQUNyQixVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLGFBQWE7RUFDYixZQUFZO0VBQ1oseUJBQXlCO0VQVjVCLGVsQktvQztFa0JKcEMsaUpsQjZMa0o7RWtCNUxsSix3QkFzQ21DO0VBckNuQyxpQkFzQzRCO0VBbkM1QixnQmxCK0YyQjtFeUJ2RnhCLGdEekJLaUM7RXlCSmpDLGtCekJnSXdCO0V5Qi9IM0IsbUJBQW1CO0VBQ25CLHVDekJvSndCO0V5QnBKeEIsa0N6Qm9Kd0I7RXlCcEp4QiwrQnpCb0p3QixFeUJ2SHhCO0VyQmZDO0lxQjlCRjs7OztNUE1vQyxnQmxCK0ZSLEV5QnhEM0IsRUFBQTtFckJmQztJcUI5QkY7Ozs7TVBPb0MsZ0JsQitGUixFeUJ6RDNCLEVBQUE7RVBuQ0U7Ozs7Ozs7Ozs7OztJQUdELG9CQUFvQjtJQUNwQixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLFVBQVUsRUFDVjtFZDBCQTtJcUIzQ0Y7Ozs7TUFtQlEseUN6QkQ2QjtNeUJFN0IsbUJBQW1CO01BQ3RCLHFCMUJ3SWUsRTBCaEhuQixFQUFBO0VBN0NEOzs7O0lBa0NFLGdEQUF1RDtJQUN2RCxpQ3pCakJtQztJeUJrQm5DLDZCQUE2QixFQUM3QjtFQXJDRjs7OztJQXlDZ0MsZXpCdkJLLEV5QnVCd0I7RUF6QzdEOzs7O0lBMENnQyxlekJ4QkssRXlCd0J3QjtFQTFDN0Q7Ozs7SUEyQ2dDLGV6QnpCSyxFeUJ5QndCO0VBM0M3RDs7OztJQTRDZ0MsZXpCMUJLLEV5QjBCd0I7O0FBZ0Y3RCxrQkFBa0IiLCJmaWxlIjoiYXBwbGljYXRpb24uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGxpbmUtaGVpZ2h0IGZvciBhbGwgaGVhZGluZ3MgaW4gQ2hyb21lIG1vYmlsZSwgRmlyZWZveCxcbiAqIGlPUyBTYWZhcmksIE1pY3Jvc29mdCBFZGdlIGFuZCBJRS5cbiAqL1xuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQSB0aGluIGxheWVyIG9uIHRvcCBvZiBub3JtYWxpemUuY3NzIHRoYXQgcHJvdmlkZXMgYSBzdGFydGluZyBwb2ludCBtb3JlXG4gKiBzdWl0YWJsZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy5cbiAqL1xuLyoqXG4gKiBQcmV2ZW50IG1hcmdpbiBhbmQgYm9yZGVyIGZyb20gYWZmZWN0aW5nIGVsZW1lbnQgd2lkdGguXG4gKiBodHRwczovL2dvby5nbC9wWXRiSzdcbiAqXG4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBSZW1vdmVzIHRoZSBkZWZhdWx0IHNwYWNpbmcgYW5kIGJvcmRlciBmb3IgYXBwcm9wcmlhdGUgZWxlbWVudHMuXG4gKi9cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxuZmlndXJlLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDsgfVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogV29yayBhcm91bmQgYSBGaXJlZm94L0lFIGJ1ZyB3aGVyZSB0aGUgdHJhbnNwYXJlbnQgYGJ1dHRvbmAgYmFja2dyb3VuZFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxuICovXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5pZnJhbWUge1xuICBib3JkZXI6IDA7IH1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFN1cHByZXNzIHRoZSBmb2N1cyBvdXRsaW5lIG9uIGVsZW1lbnRzIHRoYXQgY2Fubm90IGJlIGFjY2Vzc2VkIHZpYSBrZXlib2FyZC5cbiAqIFRoaXMgcHJldmVudHMgYW4gdW53YW50ZWQgZm9jdXMgb3V0bGluZSBmcm9tIGFwcGVhcmluZyBhcm91bmQgZWxlbWVudHMgdGhhdFxuICogbWlnaHQgc3RpbGwgcmVzcG9uZCB0byBwb2ludGVyIGV2ZW50cy5cbiAqL1xuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cblxuLm1pc3QgLmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkY2ZhYzA7IH1cblxuLm1pc3QgLmNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA5NjhiOyB9XG5cbi5taXN0IC5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODVjNzljOyB9XG5cbi5zcHJpbmcgLmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGZhYzc7IH1cblxuLnNwcmluZyAuY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMjQ1NGU7IH1cblxuLnNwcmluZyAuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYjE1ODsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwidGhpblwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL3RoaW4uZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLnN2ZyN0aGluXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwibGlnaHRcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbGlnaHQuZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9saWdodC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvbGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL2xpZ2h0LnN2ZyNsaWdodFwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCI7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL2Jsb25kLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL2Jsb25kLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvYmxvbmQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL2Jsb25kLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ibG9uZC5zdmcjYmxvbmRcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJub3JtYWxcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbm9ybWFsLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL25vcm1hbC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL25vcm1hbC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvbm9ybWFsLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ub3JtYWwuc3ZnI25vcm1hbFwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIm1lZGl1bVwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9tZWRpdW0uZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbWVkaXVtLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvbWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9tZWRpdW0udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL21lZGl1bS5zdmcjbWVkaXVtXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiYm9sZFwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL2JvbGQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLnN2ZyNib2xkXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiYmxhY2tcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvYmxhY2suZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvYmxhY2suZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ibGFjay53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvYmxhY2sudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL2JsYWNrLnN2ZyNibGFja1wiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuLyoqIEBkZWZpbmUgQnV0dG9uICovXG4vKipcbiAqIFRoZSBidXR0b24gY2xhc3NlcyBhcmUgYmVzdCBhcHBsaWVkIHRvIGxpbmtzIGFuZCBidXR0b25zLlxuICogVGhlc2UgY29tcG9uZW50cyBjYW4gYmUgdXNlZCBpbiBmb3JtcywgYXMgY2FsbHMgdG8gYWN0aW9uLCBvciBhcyBwYXJ0IG9mIHRoZVxuICogZ2VuZXJhbCBVSSBvZiB0aGUgc2l0ZS9hcHAuXG4gKi9cbi8qKlxuICogMS4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAyLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDMuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIFByZXZlbnQgYnV0dG9uIHRleHQgZnJvbSBiZWluZyBzZWxlY3RhYmxlLlxuICovXG4uQnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogY3VycmVudGNvbG9yO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMyAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuNGVtIDAuNzVlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC8qIDQgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBleGNlc3MgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCtcbiAqL1xuLkJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuLkJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQ7XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjsgfVxuXG4vKipcbiAqIFVJIHN0YXRlc1xuICovXG4uQnV0dG9uOmhvdmVyLFxuLkJ1dHRvbjpmb2N1cyxcbi5CdXR0b246YWN0aXZlIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBvcGFjaXR5OiB2YXIoLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eSk7IH1cblxuLyoqIEBkZWZpbmUgRmxleEVtYmVkICovXG4vKipcbiAqIEZsZXhpYmxlIG1lZGlhIGVtYmVkc1xuICpcbiAqIEZvciB1c2Ugd2l0aCBtZWRpYSBlbWJlZHMg4oCTIHN1Y2ggYXMgdmlkZW9zLCBzbGlkZXNob3dzLCBvciBldmVuIGltYWdlcyDigJNcbiAqIHRoYXQgbmVlZCB0byByZXRhaW4gYSBzcGVjaWZpYyBhc3BlY3QgcmF0aW8gYnV0IGFkYXB0IHRvIHRoZSB3aWR0aCBvZiB0aGVpclxuICogY29udGFpbmluZyBlbGVtZW50LlxuICpcbiAqIEJhc2VkIG9uOiBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9jcmVhdGluZy1pbnRyaW5zaWMtcmF0aW9zLWZvci12aWRlb1xuICovXG4uRmxleEVtYmVkIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4vKipcbiAqIFRoZSBhc3BlY3QtcmF0aW8gaGFjayBpcyBhcHBsaWVkIHRvIGFuIGVtcHR5IGVsZW1lbnQgYmVjYXVzZSBpdCBhbGxvd3NcbiAqIHRoZSBjb21wb25lbnQgdG8gcmVzcGVjdCBgbWF4LWhlaWdodGAuIERlZmF1bHQgYXNwZWN0IHJhdGlvIGlzIDE6MS5cbiAqL1xuLkZsZXhFbWJlZC1yYXRpbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogMzoxIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS0zYnkxIHtcbiAgcGFkZGluZy1ib3R0b206IGNhbGMoMTAwJSAvIDMpOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IDI6MSBhc3BlY3QgcmF0aW9cbiAqL1xuLkZsZXhFbWJlZC1yYXRpby0tMmJ5MSB7XG4gIHBhZGRpbmctYm90dG9tOiA1MCU7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogMTY6OSBhc3BlY3QgcmF0aW9cbiAqL1xuLkZsZXhFbWJlZC1yYXRpby0tMTZieTkge1xuICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IDQ6MyBhc3BlY3QgcmF0aW9cbiAqL1xuLkZsZXhFbWJlZC1yYXRpby0tNGJ5MyB7XG4gIHBhZGRpbmctYm90dG9tOiA3NSU7IH1cblxuLyoqXG4gKiBGaXQgdGhlIGNvbnRlbnQgdG8gdGhlIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLWNvbnRlbnQge1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi8qKiBAZGVmaW5lIEdyaWQgKi9cbi8qKlxuICogQ29yZSBncmlkIGNvbXBvbmVudFxuICpcbiAqIERPIE5PVCBhcHBseSBkaW1lbnNpb24gb3Igb2Zmc2V0IHV0aWxpdGllcyB0byB0aGUgYEdyaWRgIGVsZW1lbnQuIEFsbCBjZWxsXG4gKiB3aWR0aHMgYW5kIG9mZnNldHMgc2hvdWxkIGJlIGFwcGxpZWQgdG8gY2hpbGQgZ3JpZCBjZWxscy5cbiAqL1xuLyogR3JpZCBjb250YWluZXJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFsbCBjb250ZW50IG11c3QgYmUgY29udGFpbmVkIHdpdGhpbiBjaGlsZCBgR3JpZC1jZWxsYCBlbGVtZW50cy5cbiAqXG4gKiAxLiBBY2NvdW50IGZvciBicm93c2VyIGRlZmF1bHRzIG9mIGVsZW1lbnRzIHRoYXQgbWlnaHQgYmUgdGhlIHJvb3Qgbm9kZSBvZlxuICogICAgdGhlIGNvbXBvbmVudC5cbiAqL1xuLkdyaWQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAvKiAxICovXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIG1hcmdpbjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBNb2RpZmllcjogY2VudGVyIGFsaWduIGFsbCBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IHJpZ2h0IGFsaWduIGFsbCBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBtaWRkbGUtYWxpZ24gZ3JpZCBjZWxsc1xuICovXG4uR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGJvdHRvbS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBhbGxvdyBjZWxscyB0byBlcXVhbCBkaXN0cmlidXRlIHdpZHRoXG4gKlxuICogMS4gUHJvdmlkZSBhbGwgdmFsdWVzIHRvIGF2b2lkIElFMTAgYnVnIHdpdGggc2hvcnRoYW5kIGZsZXhcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsQzdcbiAqXG4gKiAgICBVc2UgYDAlYCB0byBhdm9pZCBidWcgaW4gSUUxMC8xMSB3aXRoIHVuaXRsZXNzIGZsZXggYmFzaXNcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsV3hcbiAqL1xuLkdyaWQtLWZpdCA+IC5HcmlkLWNlbGwge1xuICBmbGV4OiAxIDEgMCU7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBhbGwgY2VsbHMgbWF0Y2ggaGVpZ2h0IG9mIHRhbGxlc3QgY2VsbCBpbiBhIHJvd1xuICovXG4uR3JpZC0tZXF1YWxIZWlnaHQgPiAuR3JpZC1jZWxsIHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBndXR0ZXJzXG4gKi9cbi5HcmlkLS13aXRoR3V0dGVyIHtcbiAgbWFyZ2luOiAwIGNhbGMoLTAuNSAqIDE3LjRweCk7IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqIDE3LjRweCk7IH1cblxuLyogR3JpZCBjZWxsXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBObyBleHBsaWNpdCB3aWR0aCBieSBkZWZhdWx0LiBSZWx5IG9uIGNvbWJpbmluZyBgR3JpZC1jZWxsYCB3aXRoIGEgZGltZW5zaW9uXG4gKiB1dGlsaXR5IG9yIGEgY29tcG9uZW50IGNsYXNzIHRoYXQgZXh0ZW5kcyAnR3JpZCcuXG4gKlxuICogMS4gU2V0IGZsZXggaXRlbXMgdG8gZnVsbCB3aWR0aCBieSBkZWZhdWx0XG4gKiAyLiBGaXggaXNzdWUgd2hlcmUgZWxlbWVudHMgd2l0aCBvdmVyZmxvdyBleHRlbmQgcGFzdCB0aGVcbiAqICAgIGBHcmlkLWNlbGxgIGNvbnRhaW5lciAtIGh0dHBzOi8vZ2l0LmlvL3Z3NW9GXG4gKi9cbi5HcmlkLWNlbGwge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICBmbGV4LWJhc2lzOiAxMDAlO1xuICAvKiAxICovXG4gIG1pbi13aWR0aDogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGhvcml6b250YWxseSBjZW50ZXIgb25lIHVuaXRcbiAqIFNldCBhIHNwZWNpZmljIHVuaXQgdG8gYmUgaG9yaXpvbnRhbGx5IGNlbnRlcmVkLiBEb2Vzbid0IGFmZmVjdFxuICogYW55IG90aGVyIHVuaXRzLiBDYW4gc3RpbGwgY29udGFpbiBhIGNoaWxkIGBHcmlkYCBvYmplY3QuXG4gKi9cbi5HcmlkLWNlbGwtLWNlbnRlciB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi54cy1HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi54cy1HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4ueHMtR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi54cy1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuXG4ueHMtR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnNtLUdyaWQtLWFsaWduQ2VudGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuc20tR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAuc20tR3JpZC0tYWxpZ25NaWRkbGUge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnNtLUdyaWQtLWFsaWduQm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLnNtLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWQtR3JpZC0tYWxpZ25DZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5tZC1HcmlkLS1hbGlnblJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC5tZC1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubWQtR3JpZC0tYWxpZ25Cb3R0b20ge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAubWQtR3JpZC1jZWxsLS1jZW50ZXIge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5sZy1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmxnLUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLmxnLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5sZy1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5sZy1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC54bC1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnhsLUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnhsLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC54bC1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC54bC1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTcwMHB4KSB7XG4gIC5zdS1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnN1LUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnN1LUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5zdS1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5zdS1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlciB7XG4gIG1hcmdpbjogMCAtMTUuNDY2NjdweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlciB7XG4gICAgICBtYXJnaW46IDAgLTQ2LjRweDsgfSB9XG5cbi5HcmlkLS13aXRoR3V0dGVyID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgMTUuNDY2NjdweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlciA+IC5HcmlkLWNlbGwge1xuICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtIHtcbiAgbWFyZ2luOiAwIC01LjE1NTU2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXJTbSB7XG4gICAgICBtYXJnaW46IDAgLTE1LjQ2NjY3cHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgNS4xNTU1NnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5HcmlkLS13aXRoR3V0dGVyU20gPiAuR3JpZC1jZWxsIHtcbiAgICAgIHBhZGRpbmc6IDAgMTUuNDY2NjdweDsgfSB9XG5cbi8qKlxuICAqIFNpbXBsZSBwYWdlLWxldmVsIHNldHVwIGZyb20gSW51aXRDU1MuXG4gICpcbiAgKiAxLiBTZXQgdGhlIGRlZmF1bHQgYGZvbnQtc2l6ZWAgYW5kIGBsaW5lLWhlaWdodGAgZm9yIHRoZSBlbnRpcmUgcHJvamVjdCxcbiAgKiAgICBzb3VyY2VkIGZyb20gb3VyIGRlZmF1bHQgdmFyaWFibGVzLiBUaGUgYGZvbnQtc2l6ZWAgaXMgY2FsY3VsYXRlZCB0byBleGlzdFxuICAqICAgIGluIGVtcywgdGhlIGBsaW5lLWhlaWdodGAgaXMgY2FsY3VsYXRlZCB0byBleGlzdCB1bml0bGVzc2x5LlxuICAqIDIuIEZvcmNlIHNjcm9sbGJhcnMgdG8gYWx3YXlzIGJlIHZpc2libGUgdG8gcHJldmVudCBhd2t3YXJkIOKAmGp1bXBz4oCZIHdoZW5cbiAgKiAgICBuYXZpZ2F0aW5nIGJldHdlZW4gcGFnZXMgdGhhdCBkby9kbyBub3QgaGF2ZSBlbm91Z2ggY29udGVudCB0byBwcm9kdWNlXG4gICogICAgc2Nyb2xsYmFycyBuYXR1cmFsbHkuXG4gICogMy4gRW5zdXJlIHRoZSBwYWdlIGFsd2F5cyBmaWxscyBhdCBsZWFzdCB0aGUgZW50aXJlIGhlaWdodCBvZiB0aGUgdmlld3BvcnQuXG4gICovXG5odG1sIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRmZDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLyogMyAqL1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIC8qIDIgKi8gfVxuXG5hIHtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIGE6aG92ZXIsIGE6YWN0aXZlLCBhOmZvY3VzIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yOyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5nbS1zdHlsZSBpbWcsXG5pbWdbd2lkdGhdLFxuaW1nW2hlaWdodF0ge1xuICBtYXgtd2lkdGg6IG5vbmU7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuYmxvY2txdW90ZSxcbnVsLCBvbCwgbGksIGRsLCBkZFxucCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbixcbnRhYmxlLCB0aCwgdGQsIGNhcHRpb25cbnByZSwgc21hbGwsXG5lbSwgYiB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuaHRtbCB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJub3JtYWxcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB0ZXh0LXJlbmRlcmluZzogZ2VvbWV0cmljUHJlY2lzaW9uO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuXG4vKiB1bmNzczppZ25vcmUgKi9cbnVsLCBvbCwgbGksIGRsLFxuYmxvY2txdW90ZSwgcCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZmllbGRzZXQsXG5wcmUge1xuICBtYXJnaW4tYm90dG9tOiAyOXB4OyB9XG5cbi5vLXBvc0Fic29sdXRlQ2VudGVyIHtcbiAgbGVmdDogNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuXG4uby1wb3NGaXhlZENlbnRlciB7XG4gIGxlZnQ6IDUwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cblxuLm8tcG9zRnVsbFNjcmVlbiB7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7IH1cblxuLm8tcG9zQWJzb2x1dGVDZW50ZXJBbHQge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwOyB9XG5cbi5vLXBvc0Z1bGxTY3JlZW4sXG4uby1wb3NGaXhlZENlbnRlciB7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4uby1jb250YWluZXIge1xuICBoZWlnaHQ6IGluaGVyaXQ7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDgwMHB4O1xuICBwYWRkaW5nOiAwIDM0LjhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5vLWNvbnRhaW5lcjpiZWZvcmUsIC5vLWNvbnRhaW5lcjphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLm8tY29udGFpbmVyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICAuby1jb250YWluZXIgcDpsYXN0LWNoaWxkLFxuICAuby1jb250YWluZXIgcDpsYXN0LWNoaWxkIGEsXG4gIC5vLWNvbnRhaW5lciBsaTpsYXN0LWNoaWxkLFxuICAuby1jb250YWluZXIgbGk6bGFzdC1jaGlsZCBhLFxuICAuby1jb250YWluZXIgb2w6bGFzdC1jaGlsZCxcbiAgLm8tY29udGFpbmVyIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuby1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuby1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMDsgfSB9XG4gIC5vLWNvbnRhaW5lci0tbWQge1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAwIDM0LjhweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuby1jb250YWluZXItLW1kOmJlZm9yZSwgLm8tY29udGFpbmVyLS1tZDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLm8tY29udGFpbmVyLS1tZDphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5vLWNvbnRhaW5lci0tbWQgcDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgcDpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS1tZCBsaTpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgbGk6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgb2w6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLW1kIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLW1kIHtcbiAgICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1tZCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuby1jb250YWluZXItLWxnIHtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiA5NjBweDtcbiAgICBwYWRkaW5nOiAwIDM0LjhweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuby1jb250YWluZXItLWxnOmJlZm9yZSwgLm8tY29udGFpbmVyLS1sZzphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLm8tY29udGFpbmVyLS1sZzphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5vLWNvbnRhaW5lci0tbGcgcDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbGcgcDpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS1sZyBsaTpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbGcgbGk6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0tbGcgb2w6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLWxnIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLWxnIHtcbiAgICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1sZyB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuby1jb250YWluZXItLXhsIHtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMTAwcHg7XG4gICAgcGFkZGluZzogMCAzNC44cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLm8tY29udGFpbmVyLS14bDpiZWZvcmUsIC5vLWNvbnRhaW5lci0teGw6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAgIC5vLWNvbnRhaW5lci0teGw6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuby1jb250YWluZXItLXhsIHA6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXhsIHA6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0teGwgbGk6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXhsIGxpOmxhc3QtY2hpbGQgYSxcbiAgICAuby1jb250YWluZXItLXhsIG9sOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS14bCBvbDpsYXN0LWNoaWxkIGEge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8tY29udGFpbmVyLS14bCB7XG4gICAgICAgIHBhZGRpbmc6IDAgNDYuNHB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAgIC5vLWNvbnRhaW5lci0teGwge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLm8tY29udGFpbmVyLS1oZXJvIHtcbiAgICAgIHBhZGRpbmc6IDAgOTIuOHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLm8tY29udGFpbmVyLS1oZXJvIHtcbiAgICAgIHBhZGRpbmc6IDAgNDYuNHB4OyB9IH1cbiAgLm8tY29udGFpbmVyLS1zdXBlciB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMzQuOHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLXN1cGVyIHtcbiAgICAgICAgcGFkZGluZzogMCA5Mi44cHg7IH0gfVxuXG5bZGF0YS1tb2RhbC10b2dnbGVdLFxuW2RhdGEtdG9nZ2xlLWZvbGRdLFxuW2RhdGEtZGlzbWlzc10ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IHNxdWFyZTtcbiAgbWFyZ2luLWxlZnQ6IDM0LjhweDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbm9sIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsOyB9XG5cbmxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBsaSA+IHVsLFxuICBsaSA+IG9sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5vLWxpc3Qge1xuICBtYXJnaW4tbGVmdDogMzQuOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxuLm8tbGlzdENsZWFuIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbi5vLWxpc3RJbmxpbmUge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgLm8tbGlzdElubGluZSBsaSxcbiAgLm8tbGlzdElubGluZSBkaXYge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5vLWxpc3RJbmxpbmUgbGk6bm90KDpsYXN0LWNoaWxkKSxcbiAgICAuby1saXN0SW5saW5lIGRpdjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNS44cHg7IH1cblxuYSB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSwgYTpmb2N1cyB7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgfVxuXG4uby1saW5rQnVyaWVkIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMS42cHg7IH1cbiAgLm8tbGlua0J1cmllZDpob3ZlciAuby1saW5rQnVyaWVkVGFyZ2V0LCAuby1saW5rQnVyaWVkOmFjdGl2ZSAuby1saW5rQnVyaWVkVGFyZ2V0LCAuby1saW5rQnVyaWVkOmZvY3VzIC5vLWxpbmtCdXJpZWRUYXJnZXQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGFiZmY7IH1cblxuLm8tbGlua0J1cmllZFRhcmdldCB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgY29sb3I6ICMxNTE1MTU7IH1cblxuLm8tY292ZXJJbWFnZSB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBjb250ZW50OiBub25lOyB9XG5cbi5vLWNvdmVySW1hZ2UtLWRhcmsge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTsgfVxuICAuby1jb3ZlckltYWdlLS1kYXJrOmJlZm9yZSB7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzAwYWJmZiAwJSwgcmdiYSgwLCAxNzEsIDI1NSwgMC4yKSAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIG9wYWNpdHk6IDE7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5vLWNvdmVySW1hZ2UtLWJsZW5kcyB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAwOyB9IH1cblxuLm8tY29udGFpbkltYWdlIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbnRlbnQ6IG5vbmU7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsgfVxuXG4uby1maXRJbWFnZUNvdmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLkZsZXhFbWJlZC1maXRJbWFnZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5GbGV4RW1iZWQtY29udGVudC0tZGFyazpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjMDBhYmZmIDAlLCByZ2JhKDAsIDE3MSwgMjU1LCAwLjIpIDEwMCUpO1xuICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICBjb250ZW50OiBcIiBcIjtcbiAgb3BhY2l0eTogMTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7IH1cblxuLmMtdGV4dC0tc20ge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtc2l6ZTogMTNweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDE1cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICAuYy10ZXh0LS1zbSA+IGxpLFxuICAuYy10ZXh0LS1zbSA+IGxpIGEsXG4gIC5jLXRleHQtLXNtID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAxN3B4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dCB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuICAuYy10ZXh0ID4gbGksXG4gIC5jLXRleHQgPiBsaSBhLFxuICAuYy10ZXh0ID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLW1lZGl1bSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE3cHg7XG4gIGNvbG9yOiBncmF5OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLW1lZGl1bSB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy10ZXh0LS1tZWRpdW0ge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgLmMtdGV4dC0tbWVkaXVtID4gbGksXG4gIC5jLXRleHQtLW1lZGl1bSA+IGxpIGEsXG4gIC5jLXRleHQtLW1lZGl1bSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LS1pbnRybyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE3cHg7XG4gIGNvbG9yOiBncmF5O1xuICBtYXJnaW4tYm90dG9tOiAxMS42cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC0taW50cm8ge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dC0taW50cm8ge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgLmMtdGV4dC0taW50cm8gPiBsaSxcbiAgLmMtdGV4dC0taW50cm8gPiBsaSBhLFxuICAuYy10ZXh0LS1pbnRybyA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LS1sZyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGZvbnQtc2l6ZTogMjdweDtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1sZyB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy10ZXh0LS1sZyB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAuYy10ZXh0LS1sZyA+IGxpLFxuICAuYy10ZXh0LS1sZyA+IGxpIGEsXG4gIC5jLXRleHQtLWxnID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLXRleHQtLWxnID4gc3Ryb25nIHtcbiAgICBmb250LWZhbWlseTogXCJleHRyYWJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7IH1cblxuLmMtdGV4dC0tbWV0YSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dC0tbWV0YSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICAuYy10ZXh0LS1tZXRhID4gbGksXG4gIC5jLXRleHQtLW1ldGEgPiBsaSBhLFxuICAuYy10ZXh0LS1tZXRhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLXRleHQtLW1ldGEgPiBhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7IH1cbiAgICAuYy10ZXh0LS1tZXRhID4gYTpob3ZlciwgLmMtdGV4dC0tbWV0YSA+IGE6YWN0aXZlLCAuYy10ZXh0LS1tZXRhID4gYTpmb2N1cyB7XG4gICAgICBib3JkZXItY29sb3I6IGdyYXkgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1tZXRhIHtcbiAgICAgIG1hcmdpbjogYXV0bzsgfSB9XG5cbi5jLWNpdGUge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFwic2VtaWJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMTJlbTtcbiAgbWFyZ2luLXRvcDogMTEuNnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWNpdGUge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtY2l0ZSB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuICAuYy1jaXRlID4gbGksXG4gIC5jLWNpdGUgPiBsaSBhLFxuICAuYy1jaXRlID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLWNpdGUgYSB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7IH1cblxuLmMtdGV4dC0tbGcgPiBzdHJvbmcge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIGZvbnQtZmFtaWx5OiBcImJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsOyB9XG5cbmEgPiBzdHJvbmcge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4uYy10ZXh0LWJsb2NrID4gKiB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE3cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC1ibG9jayA+ICoge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dC1ibG9jayA+ICoge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgLmMtdGV4dC1ibG9jayA+ICogPiBsaSxcbiAgLmMtdGV4dC1ibG9jayA+ICogPiBsaSBhLFxuICAuYy10ZXh0LWJsb2NrID4gKiA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LWJsb2NrLS1mb290ZXIge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIG1hcmdpbjogMDsgfVxuICAuYy10ZXh0LWJsb2NrLS1mb290ZXI6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTMsIDI1MywgMjUzLCAwLjIpO1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMXB4O1xuICAgIG1hcmdpbjogMjMuMnB4IDAgMjYuNjhweDtcbiAgICB3aWR0aDogMi41JTsgfVxuICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICBjb2xvcjogIzE1MTUxNTtcbiAgICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBsaW5lLWhlaWdodDogMS40NTtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqID4gbGksXG4gICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiA+IGxpIGEsXG4gICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiA+IGEge1xuICAgICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLWl0ZW1UYWcge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTcuNHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWxpc3QtLWl0ZW1UYWcge1xuICAgICAgZm9udC1zaXplOiAxNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtbGlzdC0taXRlbVRhZyB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICAuYy1saXN0LS1pdGVtVGFnID4gbGksXG4gIC5jLWxpc3QtLWl0ZW1UYWcgPiBsaSBhLFxuICAuYy1saXN0LS1pdGVtVGFnID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLW1ldGEge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBjb2xvcjogZ3JheTtcbiAgbWFyZ2luLWJvdHRvbTogMjlweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1saXN0LS1tZXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLWxpc3QtLW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cbiAgLmMtbGlzdC0tbWV0YSA+IGxpLFxuICAuYy1saXN0LS1tZXRhID4gbGkgYSxcbiAgLmMtbGlzdC0tbWV0YSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1saXN0LS1tZXRhLXRpdGxlIHtcbiAgY29sb3I6ICMxNTE1MTUgIWltcG9ydGFudDtcbiAgbWFyZ2luOiAyOXB4IDAgMTQuNXB4ICFpbXBvcnRhbnQ7IH1cbiAgLmMtbGlzdC0tbWV0YS10aXRsZTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbnVsLCBvbCwgZGwsXG5wLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCwgZmlnY2FwdGlvbixcbnByZSwgYSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE3cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgdWwsIG9sLCBkbCxcbiAgICBwLCBhZGRyZXNzLFxuICAgIHRhYmxlLCB0aW1lLFxuICAgIGZpZWxkc2V0LCBmaWdjYXB0aW9uLFxuICAgIHByZSwgYSB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICB1bCwgb2wsIGRsLFxuICAgIHAsIGFkZHJlc3MsXG4gICAgdGFibGUsIHRpbWUsXG4gICAgZmllbGRzZXQsIGZpZ2NhcHRpb24sXG4gICAgcHJlLCBhIHtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDsgfSB9XG4gIHVsID4gbGksXG4gIHVsID4gbGkgYSxcbiAgdWwgPiBhLCBvbCA+IGxpLFxuICBvbCA+IGxpIGEsXG4gIG9sID4gYSwgZGwgPiBsaSxcbiAgZGwgPiBsaSBhLFxuICBkbCA+IGEsXG4gIHAgPiBsaSxcbiAgcCA+IGxpIGEsXG4gIHAgPiBhLCBhZGRyZXNzID4gbGksXG4gIGFkZHJlc3MgPiBsaSBhLFxuICBhZGRyZXNzID4gYSxcbiAgdGFibGUgPiBsaSxcbiAgdGFibGUgPiBsaSBhLFxuICB0YWJsZSA+IGEsIHRpbWUgPiBsaSxcbiAgdGltZSA+IGxpIGEsXG4gIHRpbWUgPiBhLFxuICBmaWVsZHNldCA+IGxpLFxuICBmaWVsZHNldCA+IGxpIGEsXG4gIGZpZWxkc2V0ID4gYSwgZmlnY2FwdGlvbiA+IGxpLFxuICBmaWdjYXB0aW9uID4gbGkgYSxcbiAgZmlnY2FwdGlvbiA+IGEsXG4gIHByZSA+IGxpLFxuICBwcmUgPiBsaSBhLFxuICBwcmUgPiBhLCBhID4gbGksXG4gIGEgPiBsaSBhLFxuICBhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbmVtLFxuLnUtdGV4dEVtIHtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1mYW1pbHk6IFwiYm9sZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuXG5iLFxuc3Ryb25nLFxuLnUtdGV4dEJvbGQge1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LWZhbWlseTogXCJib2xkXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG5cbmJsb2NrcXVvdGUsXG4uQmxvY2txdW90ZSB7XG4gIGNvbG9yOiBncmF5O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luLWJvdHRvbTogMjlweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICBibG9ja3F1b3RlLFxuICAgIC5CbG9ja3F1b3RlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTdweDsgfSB9XG5cbi5jLWRpc3BsYXkge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMDVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDQwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtZGlzcGxheSB7XG4gICAgICBmb250LXNpemU6IDYwcHg7IH0gfVxuICAuYy1kaXNwbGF5ID4gbGksXG4gIC5jLWRpc3BsYXkgPiBsaSBhLFxuICAuYy1kaXNwbGF5ID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLkZvb3RlciAuYy1kaXNwbGF5IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyOXB4OyB9XG5cbi5jLWhlYWRsaW5lIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDE1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDR2aDtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAuYy1oZWFkbGluZSA+IGxpLFxuICAuYy1oZWFkbGluZSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtaGVhZGxpbmUtLXNtIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRsaW5lLS1zbSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1oZWFkbGluZS0tc20ge1xuICAgICAgZm9udC1zaXplOiAzNnB4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXNtID4gbGksXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lLS1zbVNlbWkge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxMmVtO1xuICBsaW5lLWhlaWdodDogMS4zO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiA0dmg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtZmFtaWx5OiBcInNlbWlib2xkXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRsaW5lLS1zbVNlbWkge1xuICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLXNtU2VtaSB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAuYy1oZWFkbGluZS0tc21TZW1pID4gbGksXG4gIC5jLWhlYWRsaW5lLS1zbVNlbWkgPiBsaSBhLFxuICAuYy1oZWFkbGluZS0tc21TZW1pID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtaGVhZGxpbmUtLXhzIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLXhzIHtcbiAgICAgIGZvbnQtc2l6ZTogMjdweDsgfSB9XG4gIC5jLWhlYWRsaW5lLS14cyA+IGxpLFxuICAuYy1oZWFkbGluZS0teHMgPiBsaSBhLFxuICAuYy1oZWFkbGluZS0teHMgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1oZWFkbGluZS0teHNTZW1pIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtZmFtaWx5OiBcInNlbWlib2xkXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLWhlYWRsaW5lLS14c1NlbWkge1xuICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXhzU2VtaSA+IGxpLFxuICAuYy1oZWFkbGluZS0teHNTZW1pID4gbGkgYSxcbiAgLmMtaGVhZGxpbmUtLXhzU2VtaSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lIGVtIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTE5OXB4KSB7XG4gIHNwYW4udS1sZy1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiBhdXRvOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIHNwYW4udS1zbS1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiBhdXRvOyB9IH1cblxuLnUtdGV4dFd0THQge1xuICBmb250LWZhbWlseTogXCJsaWdodFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyB9XG5cbi51LXRleHRXdFJnIHtcbiAgZm9udC1mYW1pbHk6IFwibm9ybWFsXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dFd0TWQge1xuICBmb250LWZhbWlseTogXCJtZWRpdW1cIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgfVxuXG4udS10ZXh0V3RTZW1pIHtcbiAgZm9udC1mYW1pbHk6IFwic2VtaWJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgfVxuXG5oMiArIGgzIHtcbiAgbWFyZ2luLXRvcDogNC42NHB4OyB9XG5cbmgzICsgcCB7XG4gIG1hcmdpbi10b3A6IDkuMjhweDsgfVxuXG5odG1sIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjU5ZjsgfVxuXG4uYy1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRmZDtcbiAgcGFkZGluZzogMTJ2aCAwOyB9XG5cbi5jLWhlYWRlciB7XG4gIHBhZGRpbmc6IDZ2aCAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmMtaGVhZGVyLXRleHQge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtaGVhZGVyLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGVyLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyNXB4OyB9IH1cbiAgLmMtaGVhZGVyLXRleHQgPiBsaSxcbiAgLmMtaGVhZGVyLXRleHQgPiBsaSBhLFxuICAuYy1oZWFkZXItdGV4dCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAuYy1oZWFkZXItdGV4dDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcqJztcbiAgICBmb250LWZhbWlseTogXCJsaWdodFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE5MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC02LjUlO1xuICAgIHRvcDogLTYuMjUlOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1oZWFkZXItdGV4dDpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtMy43NSU7XG4gICAgICAgIHRvcDogLTEzJTsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICAuYy1oZWFkZXItdGV4dDpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtNC41JTtcbiAgICAgICAgdG9wOiAtMTUlOyB9IH1cbiAgLmMtaGVhZGVyLXRleHQgYSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyMSwgMjEsIDIxLCAwKSA1MCUsIHJnYmEoMjEsIDIxLCAyMSwgMC43KSA1MCUpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLmMtaGVhZGVyLXRleHQgYTpob3ZlciwgLmMtaGVhZGVyLXRleHQgYTphY3RpdmUsIC5jLWhlYWRlci10ZXh0IGE6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5Qb3N0ICsgLlBvc3Qge1xuICBtYXJnaW4tdG9wOiAxMnZoOyB9XG5cbi5Qb3N0LWNvbnRlbnQgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjEsIDIxLCAyMSwgMCkgNTAlLCByZ2JhKDIxLCAyMSwgMjEsIDAuNykgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuUG9zdC1jb250ZW50IGE6aG92ZXIsIC5Qb3N0LWNvbnRlbnQgYTphY3RpdmUsIC5Qb3N0LWNvbnRlbnQgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLlBvc3QtY29udGVudCBmaWd1cmUge1xuICBtYXJnaW46IDM2LjI1cHggMCA0My41cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtY29udGVudCBmaWd1cmUge1xuICAgICAgbWFyZ2luOiAzNi4yNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgLlBvc3QtY29udGVudCBmaWd1cmUge1xuICAgICAgbWFyZ2luOiA1MC43NXB4OyB9IH1cblxuLlBvc3QtY29udGVudCBibG9ja3F1b3RlIHAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0MywgMjQyLCAyNDEsIDAuNyk7XG4gIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAwMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgcGFkZGluZzogMTMuOTJweCAxNy40cHggMTEuNnB4O1xuICBmb250LXNpemU6IDE2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtY29udGVudCBibG9ja3F1b3RlIHAge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLlBvc3QtY29udGVudCBibG9ja3F1b3RlIHAge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cblxuLlBvc3QtZGF0ZSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE3cHg7XG4gIGNvbG9yOiAjYjNiM2IzO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiA2Ljk2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtZGF0ZSB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuUG9zdC1kYXRlIHtcbiAgICAgIGZvbnQtc2l6ZTogMjRweDsgfSB9XG4gIC5Qb3N0LWRhdGUgPiBsaSxcbiAgLlBvc3QtZGF0ZSA+IGxpIGEsXG4gIC5Qb3N0LWRhdGUgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLlBvc3QtaW1hZ2Uge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLlBvc3QtaW1hZ2UgaW1nIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGJkYmRiO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5Qb3N0LW1ldGEge1xuICBjb2xvcjogI2IzYjNiMztcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyNWVtO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2RiZGJkYjtcbiAgbWFyZ2luLXRvcDogMzEuOXB4O1xuICBwYWRkaW5nLXRvcDogMTEuNnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5Qb3N0LW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLlBvc3QtbWV0YSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICAuUG9zdC1tZXRhID4gbGksXG4gIC5Qb3N0LW1ldGEgPiBsaSBhLFxuICAuUG9zdC1tZXRhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5Qb3N0LW1ldGEgc3BhbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgIG1hcmdpbjogMCA1LjhweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNweCk7IH1cblxuLlBvc3QtdGFncyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogI2IzYjNiMztcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5Qb3N0LXRhZ3Mge1xuICAgICAgZm9udC1zaXplOiAxNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLlBvc3QtdGFncyB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICAuUG9zdC10YWdzID4gbGksXG4gIC5Qb3N0LXRhZ3MgPiBsaSBhLFxuICAuUG9zdC10YWdzID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5Qb3N0LXRhZ3MgPiBhIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDE3OSwgMTc5LCAxNzksIDApIDUwJSwgI2IzYjNiMyA1MCUpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLlBvc3QtdGFncyA+IGE6aG92ZXIsIC5Qb3N0LXRhZ3MgPiBhOmFjdGl2ZSwgLlBvc3QtdGFncyA+IGE6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi50LWJ1dHRvbiB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgcGFkZGluZzogMCAxNy40cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGZvbnQtc2l6ZTogMjdweDtcbiAgbGluZS1oZWlnaHQ6IDU1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzcHg7IH1cbiAgLnQtYnV0dG9uW2Rpc2FibGVkXSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjYjNiM2IzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiM2IzYjM7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgLnQtYnV0dG9uOmhvdmVyLCAudC1idXR0b246YWN0aXZlLCAudC1idXR0b246Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLnQtYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC50LWJ1dHRvbiB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAudC1idXR0b24gPiBsaSxcbiAgLnQtYnV0dG9uID4gbGkgYSxcbiAgLnQtYnV0dG9uID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC50LWJ1dHRvbjpob3ZlciwgLnQtYnV0dG9uOmFjdGl2ZSwgLnQtYnV0dG9uOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBhYmZmO1xuICAgIGJvcmRlci1jb2xvcjogIzAwYWJmZjtcbiAgICBjb2xvcjogI0ZGRjsgfVxuXG4udC1idXR0b24tLWJyYW5kIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMXB4O1xuICBwYWRkaW5nOiAwIDE3LjRweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMDVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgZm9udC1zaXplOiAyN3B4O1xuICBsaW5lLWhlaWdodDogNTVweDtcbiAgcGFkZGluZy1ib3R0b206IDNweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWJmZjtcbiAgYm9yZGVyLWNvbG9yOiAjMDBhYmZmOyB9XG4gIC50LWJ1dHRvbi0tYnJhbmRbZGlzYWJsZWRdIHtcbiAgICBib3JkZXItY29sb3I6ICNiM2IzYjM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2IzYjNiMztcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIG9wYWNpdHk6IDAuNDsgfVxuICAudC1idXR0b24tLWJyYW5kOmhvdmVyLCAudC1idXR0b24tLWJyYW5kOmFjdGl2ZSwgLnQtYnV0dG9uLS1icmFuZDpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudC1idXR0b24tLWJyYW5kIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC50LWJ1dHRvbi0tYnJhbmQge1xuICAgICAgZm9udC1zaXplOiAzNnB4OyB9IH1cbiAgLnQtYnV0dG9uLS1icmFuZCA+IGxpLFxuICAudC1idXR0b24tLWJyYW5kID4gbGkgYSxcbiAgLnQtYnV0dG9uLS1icmFuZCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAudC1idXR0b24tLWJyYW5kOmhvdmVyLCAudC1idXR0b24tLWJyYW5kOmFjdGl2ZSwgLnQtYnV0dG9uLS1icmFuZDpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWJmZjtcbiAgICBib3JkZXItY29sb3I6ICMwMGFiZmY7XG4gICAgY29sb3I6ICNGRkY7IH1cblxuLnQtYnV0dG9uLS1yZXYge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIHBhZGRpbmc6IDAgMTcuNHB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAwNWVtO1xuICBsaW5lLWhlaWdodDogMS40O1xuICBmb250LXNpemU6IDI3cHg7XG4gIGxpbmUtaGVpZ2h0OiA1NXB4O1xuICBwYWRkaW5nLWJvdHRvbTogM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci13aWR0aDogMXB4OyB9XG4gIC50LWJ1dHRvbi0tcmV2W2Rpc2FibGVkXSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjYjNiM2IzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiM2IzYjM7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgLnQtYnV0dG9uLS1yZXY6aG92ZXIsIC50LWJ1dHRvbi0tcmV2OmFjdGl2ZSwgLnQtYnV0dG9uLS1yZXY6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLnQtYnV0dG9uLS1yZXYge1xuICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLnQtYnV0dG9uLS1yZXYge1xuICAgICAgZm9udC1zaXplOiAzNnB4OyB9IH1cbiAgLnQtYnV0dG9uLS1yZXYgPiBsaSxcbiAgLnQtYnV0dG9uLS1yZXYgPiBsaSBhLFxuICAudC1idXR0b24tLXJldiA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAudC1idXR0b24tLXJldjpob3ZlciwgLnQtYnV0dG9uLS1yZXY6YWN0aXZlLCAudC1idXR0b24tLXJldjpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYWJmZjtcbiAgICBib3JkZXItY29sb3I6ICMwMGFiZmY7XG4gICAgY29sb3I6ICNGRkY7IH1cblxuLnQtYnV0dG9uLS1mdWxsIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTsgfVxuXG4udC1idXR0b25DbG9zZSB7XG4gIGNvbG9yOiAjMDBhYmZmO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAxMS42cHg7XG4gIHRvcDogMTEuNnB4O1xuICB6LWluZGV4OiAxMDAwO1xuICByaWdodDogMjMuMnB4O1xuICB0b3A6IDMxcHg7IH1cbiAgLnQtYnV0dG9uQ2xvc2U6aG92ZXIsIC50LWJ1dHRvbkNsb3NlOmFjdGl2ZSwgLnQtYnV0dG9uQ2xvc2U6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cblxuaW5wdXQ6aG92ZXIsIGlucHV0OmFjdGl2ZSwgaW5wdXQ6Zm9jdXMsXG50ZXh0YXJlYTpob3ZlcixcbnRleHRhcmVhOmFjdGl2ZSxcbnRleHRhcmVhOmZvY3VzLFxuc2VsZWN0OmhvdmVyLFxuc2VsZWN0OmFjdGl2ZSxcbnNlbGVjdDpmb2N1cyxcbmxhYmVsOmhvdmVyLFxubGFiZWw6YWN0aXZlLFxubGFiZWw6Zm9jdXMge1xuICBvdXRsaW5lOiAwOyB9XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInRlbFwiXSxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICByZXNpemU6IG5vbmU7XG4gIHdpZHRoOiAxMDAlO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGZvbnQtc2l6ZTogMjdweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwgMTcxLCAyNTUsIDAuNCk7XG4gIGxpbmUtaGVpZ2h0OiA1NXB4O1xuICBwYWRkaW5nOiAwIDAgM3B4IDA7XG4gIHRyYW5zaXRpb246IGFsbCA1MDBtcyBlYXNlLW91dDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gICAgaW5wdXRbdHlwZT1cInRlbFwiXSxcbiAgICB0ZXh0YXJlYSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gICAgaW5wdXRbdHlwZT1cInRlbFwiXSxcbiAgICB0ZXh0YXJlYSB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSA+IGxpLFxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSA+IGxpIGEsXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdID4gYSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdID4gbGksXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSA+IGxpIGEsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSA+IGEsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl0gPiBsaSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSA+IGxpIGEsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl0gPiBhLFxuICB0ZXh0YXJlYSA+IGxpLFxuICB0ZXh0YXJlYSA+IGxpIGEsXG4gIHRleHRhcmVhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICAgIHRleHRhcmVhIHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMTcxLCAyNTUsIDAuNCk7XG4gICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDExLjZweDsgfSB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOi13ZWJraXQtYXV0b2ZpbGwsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXTotd2Via2l0LWF1dG9maWxsLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdOi13ZWJraXQtYXV0b2ZpbGwsXG4gIHRleHRhcmVhOi13ZWJraXQtYXV0b2ZpbGwge1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDAgNi4yNXJlbSAjZjdmN2Y3IGluc2V0O1xuICAgIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiAjMDBhYmZmO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgdGV4dGFyZWE6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjMDBhYmZmOyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXTotbW96LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdOi1tb3otcGxhY2Vob2xkZXIsXG4gIHRleHRhcmVhOi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjMDBhYmZmOyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOjotbW96LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl06Oi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06Oi1tb3otcGxhY2Vob2xkZXIsXG4gIHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogIzAwYWJmZjsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06LW1zLWlucHV0LXBsYWNlaG9sZGVyLFxuICB0ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjMDBhYmZmOyB9XG5cbi8qIHVuY3NzOmlnbm9yZSAqL1xuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE5PUk1BTElaRVxuLy8gICAxNjA2Mjlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgbGluZS1oZWlnaHQgZm9yIGFsbCBoZWFkaW5ncyBpbiBDaHJvbWUgbW9iaWxlLCBGaXJlZm94LFxuICogaU9TIFNhZmFyaSwgTWljcm9zb2Z0IEVkZ2UgYW5kIElFLlxuICovXG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBCQVNFXG4vLyAgIFZlcnNpb24gMi4wLjAgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvYmFzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vKipcbiAqIEEgdGhpbiBsYXllciBvbiB0b3Agb2Ygbm9ybWFsaXplLmNzcyB0aGF0IHByb3ZpZGVzIGEgc3RhcnRpbmcgcG9pbnQgbW9yZVxuICogc3VpdGFibGUgZm9yIHdlYiBhcHBsaWNhdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV2ZW50IG1hcmdpbiBhbmQgYm9yZGVyIGZyb20gYWZmZWN0aW5nIGVsZW1lbnQgd2lkdGguXG4gKiBodHRwczovL2dvby5nbC9wWXRiSzdcbiAqXG4gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogUmVtb3ZlcyB0aGUgZGVmYXVsdCBzcGFjaW5nIGFuZCBib3JkZXIgZm9yIGFwcHJvcHJpYXRlIGVsZW1lbnRzLlxuICovXG5cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxuZmlndXJlLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXG4gKi9cblxuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5pZnJhbWUge1xuICBib3JkZXI6IDA7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogU3VwcHJlc3MgdGhlIGZvY3VzIG91dGxpbmUgb24gZWxlbWVudHMgdGhhdCBjYW5ub3QgYmUgYWNjZXNzZWQgdmlhIGtleWJvYXJkLlxuICogVGhpcyBwcmV2ZW50cyBhbiB1bndhbnRlZCBmb2N1cyBvdXRsaW5lIGZyb20gYXBwZWFyaW5nIGFyb3VuZCBlbGVtZW50cyB0aGF0XG4gKiBtaWdodCBzdGlsbCByZXNwb25kIHRvIHBvaW50ZXIgZXZlbnRzLlxuICovXG5cblt0YWJpbmRleD1cIi0xXCJdOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEZVTkNUSU9OU1xuLy8gICBUaGVzZSBhcmUgbW9zdGx5IHBhc3NlZCBpbnRvIG1peGlucywgc28gc291cmNlIHRoZW0gYmVmb3JlIG1peGlucy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQWNjZXNzIG5lc3RlZCBtYXBzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVE9ETzogYWRkIGFuIGVycm9yIG1lc3NhZ2UsIGxpa2U6XG4vLyBAaWYgKCR2YWx1ZSA9PSBudWxsKSB7XG4vLyAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7IH1cbi8vIFNlZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamxvbmcvODc2MDI3NVxuLy8gU2VlOiBPVUk6cGFydGlhbHM6ZWxlbWVudHM6ZnVuY3Rpb25zXG4vLyBTZWU6IGh0dHA6Ly9jb2RlcGVuLmlvL2pha2VhbGJhdWdoL3Bvc3QvdXNpbmctc2Fzcy1mdW5jdGlvbnMtdG8tYWNjZXNzLWNvbXBsZXgtdmFyaWFibGUtbWFwc1xuXG5AZnVuY3Rpb24gbWFwLWZldGNoKCRtYXAsICRrZXlzLi4uKSB7XG5cdCR2YWx1ZTogJG1hcDtcblx0QGVhY2ggJGtleSBpbiAka2V5cyB7XG5cdFx0JHZhbHVlOiBtYXAtZ2V0KCR2YWx1ZSwgJGtleSk7XG5cdH1cblx0QHJldHVybiAkdmFsdWU7XG59XG5cbi8vIEV4YW1wbGU6XG5cbiRjb25maWc6IChcbiAgdGhlbWVzOiAoXG5cdG1pc3Q6IChcblx0ICBoZWFkZXI6ICNkY2ZhYzAsXG5cdCAgY29udGVudDogIzAwOTY4Yixcblx0ICBmb290ZXI6ICM4NWM3OWNcblx0KSxcblx0c3ByaW5nOiAoXG5cdCAgaGVhZGVyOiAjZjRmYWM3LFxuXHQgIGNvbnRlbnQ6ICNjMjQ1NGUsXG5cdCAgZm9vdGVyOiAjZmZiMTU4XG5cdClcbiAgKVxuKTtcblxuLy8gZ2V0IHRoZSBtaXN0IGhlYWRlciBjb2xvciAjZGNmYWMwOlxuLy8gbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsIFwibWlzdFwiLCBcImhlYWRlclwiKVxuXG4vLyBwcmludCBlYWNoIHZhbHVlIGZyb20gdGhlIG1hcCB0byBhIGNsYXNzOlxuQGVhY2ggJHRoZW1lIGluIG1hcC1rZXlzKCBtYXAtZ2V0KCRjb25maWcsIFwidGhlbWVzXCIpICkge1xuXG4gIC4jeyR0aGVtZX0ge1xuXHQuaGVhZGVyICB7IGJhY2tncm91bmQtY29sb3I6IG1hcC1mZXRjaCgkY29uZmlnLCBcInRoZW1lc1wiLCAkdGhlbWUsIFwiaGVhZGVyXCIgICk7IH1cblx0LmNvbnRlbnQgeyBiYWNrZ3JvdW5kLWNvbG9yOiBtYXAtZmV0Y2goJGNvbmZpZywgXCJ0aGVtZXNcIiwgJHRoZW1lLCBcImNvbnRlbnRcIiApOyB9XG5cdC5mb290ZXIgIHsgYmFja2dyb3VuZC1jb2xvcjogbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsICR0aGVtZSwgXCJmb290ZXJcIiAgKTsgfVxuICB9XG5cbn1cblxuLy8gT1VJIG1hcC1mZXRjaFxuLy8gQGZ1bmN0aW9uIG1hcC1mZXRjaCgkbWFwLCAka2V5cykge1xuLy8gICAka2V5OiBudGgoJGtleXMsIDEpO1xuLy8gICAkbGVuZ3RoOiBsZW5ndGgoJGtleXMpO1xuLy8gICAkdmFsdWU6IG1hcC1nZXQoJG1hcCwgJGtleSk7XG4vLyAgIEBpZiAoJGxlbmd0aCA+IDEpIHtcbi8vICAgICAkcmVzdDogKCk7XG4vLyAgICAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAkbGVuZ3RoIHtcbi8vICAgICAgICRyZXN0OiBhcHBlbmQoJHJlc3QsIG50aCgka2V5cywgJGkpKTtcbi8vICAgICB9XG4vLyAgICAgQGlmICgkdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7XG4vLyAgICAgfVxuLy8gICAgIEByZXR1cm4gbWFwLWZldGNoKCR2YWx1ZSwgJHJlc3QpXG4vLyAgIH0gQGVsc2Uge1xuLy8gICAgIEBpZiAoJHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIEBlcnJvciBcIlRoZSB2YWx1ZSAnI3ska2V5fScgZG9lc24ndCBleGlzdCBpbiB0aGUgbWFwLlwiO1xuLy8gICAgIH1cbi8vICAgICBAcmV0dXJuICR2YWx1ZTtcbi8vICAgfVxuLy8gfVxuXG4vLyBEZWJ1Z2dpbiBzYXNzIG1hcHNcbi8vIENhbid0IGdldCB0aGlzIHRvIHdvcmsgQVRNIGJ1dCBjb3VsZCBiZSB1c2VmdWwuXG4vLyBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vZGVidWdnaW5nLXNhc3MtbWFwcy9cblxuQG1peGluIGRlYnVnLW1hcCgkbWFwKSB7XG5cdEBhdC1yb290IHtcblx0XHRAZGVidWctbWFwIHtcblx0XHRcdF9fdG9TdHJpbmdfXzogaW5zcGVjdCgkbWFwKTtcblx0XHRcdF9fbGVuZ3RoX186IGxlbmd0aCgkbWFwKTtcblx0XHRcdF9fZGVwdGhfXzogZGVwdGgoJG1hcCk7XG5cdFx0XHRfX2tleXNfXzogbWFwLWtleXMoJG1hcCk7XG5cdFx0XHRfX3Byb3BlcnRpZXNfXyB7XG5cdFx0XHRcdEBlYWNoICRrZXksICR2YWx1ZSBpbiAkbWFwIHtcblx0XHRcdFx0XHQjeycoJyArIHR5cGUtb2YoJHZhbHVlKSArICcpICcgKyAka2V5fTogaW5zcGVjdCgkdmFsdWUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cblxuLy8gU3Bpbi1vdXQgbWFwLWZldGNoIGZ1bmN0aW9ucyBmb3IgbW9zdC11c2VkIHN0eWxlcy5cbi8vIERvbmUgYXMgZnVuY3Rpb25zLCBub3QgbWl4aW5zLCBzbyB3ZSBjYW4gdXNlIHRoZW0gd2l0aGluXG4vLyBzdGFuZGFyZCBzdHlsZSBsaXN0cywgZS5nLiBjb2xvcjogcGFsZXR0ZSgpO1xuLy8gU2VlOlxuLy8gaHR0cDovL3d3dy5iaWdlbmcuaW8vaG93LXdlLXVzZS1zYXNzLW1hcHMtZm9yLWRlc2lnbi10b2tlbnMtYW5kLWRldmVsb3Blci1oYXBwaW5lc3MvXG4vLyBodHRwOi8vZXJza2luZWRlc2lnbi5jb20vYmxvZy9mcmllbmRsaWVyLWNvbG91ci1uYW1lcy1zYXNzLW1hcHMvXG4vLyBAZnVuY3Rpb24gcGFsZXR0ZSgkcGFsZXR0ZSwgJHRvbmU6ICdiYXNlJykge1xuLy8gICAgIEByZXR1cm4gbWFwLWdldChtYXAtZ2V0KCRwYWxldHRlcywgJHBhbGV0dGUpLCAkdG9uZSk7XG4vLyB9XG5cbi8vIEBmdW5jdGlvbiBjb2xvcigkdHlwZTogJ3VpJywgJGluY3JlbWVudDogJ2Jhc2UnKSB7XG4vLyAgICAgQHJldHVybiBtYXAtZmV0Y2goJGNvbG9yLCAkdHlwZSwgJGluY3JlbWVudCk7XG4vLyB9XG5cbkBmdW5jdGlvbiBwYWxldHRlKCRodWU6ICdncmV5LTI1Jykge1xuXHRAcmV0dXJuIG1hcC1mZXRjaCgkcGFsZXR0ZSwgJGh1ZSk7XG59XG5cbkBmdW5jdGlvbiBzaXplKCR0eXBlOiAnZm9udCcsICRpbmNyZW1lbnQ6ICd0ZXh0Jykge1xuXHRAcmV0dXJuIG1hcC1mZXRjaCgkc2l6ZSwgJHR5cGUsICRpbmNyZW1lbnQpO1xufVxuXG5AZnVuY3Rpb24gY29udGFpbmVyLXdpZHRoKCR3aWR0aDogJ2xnJykge1xuXHRAcmV0dXJuIG1hcC1nZXQoJGNvbnRhaW5lci1tYXgtd2lkdGhzLCAkd2lkdGgpO1xufVxuXG5AZnVuY3Rpb24gZm9udHNpemUoJGluY3JlbWVudDogJ1RleHQnLCAkcmVzcG9uc2U6ICdzbScpIHtcblx0Ly8gQHJldHVybiBtYXAtZmV0Y2goJHNpemUsIGZvbnQsICRpbmNyZW1lbnQsICRyZXNwb25zZSk7XG5cdEByZXR1cm4gbWFwLWZldGNoKCRmb250c2l6ZXMsICRpbmNyZW1lbnQsICRyZXNwb25zZSk7XG59XG5cbkBmdW5jdGlvbiB0cmFuc2l0aW9uKCRwcm9wZXJ0eTogJ2R1cmF0aW9uJywgJHJlc3BvbnNlOiAnc2hvcnQnKSB7XG5cdEByZXR1cm4gbWFwLWZldGNoKCR0cmFuc2l0aW9uLCAkcHJvcGVydHksICRyZXNwb25zZSk7XG59XG5cbi8vIEkgdGhpbmsgdGhpcyBpcyBhIEdpcmF1ZGVsIGZ1bmN0aW9u4oCmXG4vLyBAbGluayBodHRwOi8vc2Fzcy1ndWlkZWxpbi5lcy8jZXJyb3JzXG4vLyBAbGluayBodHRwczovL2pvbnN1aC5jb20vYmxvZy9vcmdhbml6aW5nLXotaW5kZXgtd2l0aC1zYXNzL1xuXG5AZnVuY3Rpb24gZm9udC13ZWlnaHQoJGtleSkge1xuXHRAaWYgbm90IG1hcC1oYXMta2V5KCRmb250LXdlaWdodCwgJGtleSkge1xuXHRcdEBlcnJvciAnVGhlcmUgaXMgbm8ga2V5IG5hbWVkIGAjeyRrZXl9YCBpbiAkZm9udC13ZWlnaHRzLiAnXG5cdFx0XHQgKyAnS2V5IHNob3VsZCBiZSBvbmUgb2YgI3ttYXAta2V5cygkZm9udC13ZWlnaHQpfS4nO1xuXHR9XG5cblx0QHJldHVybiBtYXAtZ2V0KCRmb250LXdlaWdodCwgJGtleSk7XG59XG5cbkBtaXhpbiBmb250LXdlaWdodCgka2V5KSB7XG5cdC8vIGZvbnQtZmFtaWx5OiAkZm9udDtcblx0Zm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCRrZXkpO1xufVxuXG5cbi8vIFRpbnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBmdW5jdGlvbiB0aW50KCRjdXJyZW50LWNvbG9yLCAkcGVyY2VudCkge1xuXHRAcmV0dXJuIG1peCgjRkZGLCAkY3VycmVudC1jb2xvciwgJHBlcmNlbnQpO1xufVxuXG5cbi8vIFNwYWNlciBjb21wdXRhdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFNlZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamxvbmcvODc2MDI3NVxuLy8gU2VlOiBPVUk6cGFydGlhbHM6ZWxlbWVudHM6ZnVuY3Rpb25zXG5cbi8vIEBmdW5jdGlvbiBzcGFjZXIoJHZhbHVlKSB7XG4vLyAgIEBpZiAoJHZhbHVlICogMikgJSAxICE9IDAge1xuLy8gICAgIEB3YXJuICdTcGFjZXIgdmFsdWUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDAuNSc7XG4vLyAgICAgQHJldHVybiAnU3BhY2VyIHZhbHVlIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAwLjUnO1xuLy8gICB9IEBlbHNlIHtcbi8vICAgICBAcmV0dXJuICRzcGFjZXItdW5pdCAqICR2YWx1ZTtcbi8vICAgfVxuLy8gfVxuXG5AZnVuY3Rpb24gc3BhY2UoJHZhbHVlKSB7XG5cdEByZXR1cm4gJHNwYWNlLXVuaXQgKiAkdmFsdWU7XG59XG5cblxuLy8gU2N1dCBzdHJpcCB1bml0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvc3RyaXAtdW5pdC5odG1sXG5cbkBmdW5jdGlvbiBzY3V0LXN0cmlwLXVuaXQgKFxuXHQkbnVtXG4pIHtcblxuXHRAcmV0dXJuICRudW0gLyAoJG51bSAqIDAgKyAxKTtcblxufVxuXG5cbi8vIFNjdXQgcHggdG8gcmVtXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvcmVtLmh0bWxcbi8vIFJlcXVpcmVzOiBgc2N1dC1zdHJpcC11bml0YC5cbi8vIFJlbmFtZWQgcmVtKCkgZnJvbSBzY3V0LXJlbSgpIGZvciBlYXNlIG9mIHVzZS5cblxuJHNjdXQtcmVtLWJhc2U6IDE2ICFkZWZhdWx0O1xuXG5AZnVuY3Rpb24gcmVtIChcblx0JHBpeGVsc1xuKSB7XG5cblx0JHJlbS12YWxzOiAoKTtcblx0QGVhY2ggJHZhbCBpbiAkcGl4ZWxzIHtcblx0XHQkdmFsLWluLXJlbXM6IHNjdXQtc3RyaXAtdW5pdCgkdmFsKSAvICRzY3V0LXJlbS1iYXNlICogMXJlbTtcblx0XHQkcmVtLXZhbHM6IGFwcGVuZCgkcmVtLXZhbHMsICR2YWwtaW4tcmVtcyk7XG5cdH1cblxuXHRAaWYgbGVuZ3RoKCRyZW0tdmFscykgPT0gMSB7XG5cdFx0Ly8gcmV0dXJuIGEgc2luZ2xlIHZhbHVlIGluc3RlYWQgb2YgYSBsaXN0LFxuXHRcdC8vIHNvIGl0IGNhbiBiZSB1c2VkIGluIGNhbGN1bGF0aW9uc1xuXHRcdEByZXR1cm4gbnRoKCRyZW0tdmFscywgMSk7XG5cdH1cblx0QGVsc2Uge1xuXHRcdEByZXR1cm4gJHJlbS12YWxzO1xuXHR9XG5cbn1cblxuXG4vLyBTY3V0IGZvbnQtZmFjZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGh0dHA6Ly9kYXZpZHRoZWNsYXJrLmdpdGh1Yi5pby9zY3V0L2ZvbnQtZmFjZS5odG1sXG4vLyBSZW5hbWVkIGZvbnQtZmFjZSgpIGZyb20gc2N1dC1mb250LWZhY2UoKSBmb3IgZWFzZSBvZiB1c2UuXG4vLyBPcmlnaW5hbCAkZm9ybWF0czogZW90IHdvZmYyIHdvZmYgdHRmIHN2Z1xuXG5AZnVuY3Rpb24gbWFpbi1zcmMoJGZvcm1hdHMsICRmaWxlLXBhdGgsICRmb250LWZhbWlseSkge1xuXHQvLyBSZXR1cm4gdGhlIGxpc3Qgb2YgYHNyY2AgdmFsdWVzLCBpbiBvcmRlciwgdGhhdFxuXHQvLyBhIGdvb2QgYEBmb250LWZhY2VgIHdpbGwgbmVlZCwgaW5jbHVkaW5nIG9ubHlcblx0Ly8gdGhvc2UgZm9ybWF0cyBzcGVjaWZpZWQgaW4gdGhlIGxpc3QgYCRmb3JtYXRzYC5cblx0JHJlc3VsdDogKCk7XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgZW90KSB7XG5cdFx0JGVvdC12YWw6IHVybCgnI3skZmlsZS1wYXRofS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpO1xuXHRcdCRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkZW90LXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgd29mZjIpIHtcblx0XHQkd29mZjItdmFsOiB1cmwoJyN7JGZpbGUtcGF0aH0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR3b2ZmMi12YWwsIGNvbW1hKTtcblx0fVxuXHRAaWYgaW5kZXgoJGZvcm1hdHMsIHdvZmYpIHtcblx0XHQkd29mZi12YWw6IHVybCgnI3skZmlsZS1wYXRofS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR3b2ZmLXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgdHRmKSB7XG5cdFx0JHR0Zi12YWw6IHVybCgnI3skZmlsZS1wYXRofS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR0dGYtdmFsLCBjb21tYSk7XG5cdH1cblx0QGlmIGluZGV4KCRmb3JtYXRzLCBzdmcpIHtcblx0XHQkc3ZnLXZhbDogdXJsKCcjeyRmaWxlLXBhdGh9LnN2ZyMjeyRmb250LWZhbWlseX0nKSBmb3JtYXQoJ3N2ZycpO1xuXHRcdCRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkc3ZnLXZhbCwgY29tbWEpO1xuXHR9XG5cdEByZXR1cm4gJHJlc3VsdDtcbn1cblxuQG1peGluIGZvbnQtZmFjZSAoXG5cdCRmb250LWZhbWlseSxcblx0JGZpbGUtcGF0aCxcblx0JHdlaWdodDogbm9ybWFsLFxuXHQkc3R5bGU6IG5vcm1hbCxcblx0JGZvcm1hdHM6IGVvdCB3b2ZmIHR0ZiBzdmdcbikge1xuXG5cdEBpZiBpbmRleCgnaXRhbGljJyAnb2JsaXF1ZScsICR3ZWlnaHQpIHtcblx0XHQkc3R5bGU6ICR3ZWlnaHQ7XG5cdFx0JHdlaWdodDogbm9ybWFsO1xuXHR9XG5cblx0QGZvbnQtZmFjZSB7XG5cdFx0Zm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcblx0XHRmb250LXdlaWdodDogJHdlaWdodDtcblx0XHRmb250LXN0eWxlOiAkc3R5bGU7XG5cblx0XHRAaWYgaW5kZXgoJGZvcm1hdHMsIGVvdCkge1xuXHRcdFx0c3JjOiB1cmwoJyN7JGZpbGUtcGF0aH0uZW90Jyk7XG5cdFx0fVxuXG5cdFx0c3JjOiBtYWluLXNyYyggJGZvcm1hdHMsICRmaWxlLXBhdGgsICRmb250LWZhbWlseSApO1xuXHR9XG5cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBWQVJJQUJMRSBTRVRUSU5HU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBOYW1lc3BhY2UgZm9yIHRoZW1laW5nICYgdGVzdGluZ1xuLy8gQXBwbHk6IC4jeyRuYW1lc3BhY2V9dGV4dGFyZWFcbi8vIERvbid0IHVzZSB0aGlzIG1ldGhvZCB0byBuYW1lc3BhY2UgdmFyaWFibGVz4oCmXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kbmFtZXNwYWNlICAgICAgICAgICAgIDogJyc7XG5cblxuLy8gQ29sb3Vyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGJhc2UtYmxhY2sgICAgICAgICAgICAgICAgICAgIDogIzAwMDtcbiRiYXNlLXdoaXRlICAgICAgICAgICAgICAgICAgICA6ICNGRkY7XG5cbiRwYWxldHRlOiAoXG5cdGJsYWNrICAgICAgICAgICAgICAgICAgICAgIDogJGJhc2UtYmxhY2ssXG5cdHRleHQgICAgICAgICAgICAgICAgICAgICAgIDogIzE1MTUxNSxcblx0ZGFyayAgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCAxNSUpLFxuXHRhc2ggICAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDIyJSksXG5cdGNoYXJjb2FsICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgMzklKSxcblx0bWVkaXVtICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA1MCUpLFxuXHRtdXRlZCAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDcwJSksXG5cdGJhc2UgICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgODYlKSxcblx0bGlnaHQgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA5NCUpLFxuXHRmYWludCAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDk3JSksXG5cdHdoaXRlICAgICAgICAgICAgICAgICAgICAgIDogJGJhc2Utd2hpdGUsXG5cdGJhY2tncm91bmQgICAgICAgICAgICAgICAgIDogI2ZkZmRmZCxcblx0bmV1dHJhbCAgICAgICAgICAgICAgICAgICAgOiAjRjNGMkYxLFxuXHRuZXV0cmFsLWRhcmsgICAgICAgICAgICAgICA6IGRhcmtlbigjZjBlZWViLCA5JSksXG5cdG5ldXRyYWwtbGlnaHQgICAgICAgICAgICAgIDogbGlnaHRlbigjZjBlZWViLCA0JSksXG5cdGJyYW5kICAgICAgICAgICAgICAgICAgICAgIDogIzAwYWJmZixcblx0YnJhbmQtY29tcGxlbWVudCAgICAgICAgICAgOiAjZmZmNTlmLFxuXHRicmFuZC1jb3VudGVyICAgICAgICAgICAgICA6ICM4ODdFNzMsXG5cdG1vZGFsLWJhY2tncm91bmQgICAgICAgICAgIDogIzE1MTUxNSxcblx0d2FybmluZyAgICAgICAgICAgICAgICAgICAgOiAjRkZENDBDLFxuXHRiYWQtbmV3cyAgICAgICAgICAgICAgICAgICA6ICNDNjBDMEMsXG5cdGdvb2QtbmV3cyAgICAgICAgICAgICAgICAgIDogYnJhbmQtY29tcGxlbWVudFxuKTtcblxuXG4vLyBCYXNlIHNpemUgbWVhc3VyZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRiYXNlLWZvbnQtc2l6ZS11bml0ICAgICAgICAgICA6IDE2O1xuJGJhc2UtbGluZS1oZWlnaHQtdW5pdCAgICAgICAgIDogMS40NTtcbiRiYXNlLWZvbnQtc2l6ZSAgICAgICAgICAgICAgICA6ICRiYXNlLWZvbnQtc2l6ZS11bml0ICogMXB4O1xuJGJhc2UtbGluZS1oZWlnaHQgICAgICAgICAgICAgIDogKCRiYXNlLWZvbnQtc2l6ZS11bml0ICogJGJhc2UtbGluZS1oZWlnaHQtdW5pdCkgKiAxcHg7IC8vIDI0LjY1XG4kc3BhY2UtdW5pdCAgICAgICAgICAgICAgICAgICAgOiAkYmFzZS1saW5lLWhlaWdodDtcbiRzcGFjZSAgICAgICAgICAgICAgICAgICAgICAgICA6ICRzcGFjZS11bml0ICogMTtcblxuJGd1dHRlclNwYWNlICAgICAgICAgICAgICAgICAgIDogc3BhY2UoMik7XG4kcGFyYWdyYXBoU3BhY2UgICAgICAgICAgICAgICAgOiBzcGFjZSgxLjI1KTtcbiRibG9ja1NwYWNlICAgICAgICAgICAgICAgICAgICA6IDEydmg7XG5cblxuXG4vLyBXaWR0aHMgKGJhc2VkIG9uIEJTNClcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEJTNCBkZWZhdWx0czpcbi8vIFJlbW92ZWQgdGhlIEJTNCBhc2NlbmRpbmcgbWl4aW46XG4vLyBAaW5jbHVkZSBfYXNzZXJ0LWFzY2VuZGluZygkZ3JpZC1icmVha3BvaW50cywgXCIkZ3JpZC1icmVha3BvaW50c1wiKTspLFxuLy8gJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXG4vLyBcdHNtOiA1NzZweCxcbi8vIFx0bWQ6IDcyMHB4LFxuLy8gXHRsZzogOTQwcHgsXG4vLyBcdHhsOiAxMTQwcHhcbi8vICkgIWRlZmF1bHQ7XG5cbiRncmlkLWJyZWFrcG9pbnRzOiAoXG5cdHhzOiAwLFxuXHRzbTogNTQ0cHgsXG5cdG1kOiA3NjhweCxcblx0bGc6IDk5MnB4LFxuXHR4bDogMTIwMHB4LFxuXHRzdTogMTcwMHB4XG4pICFkZWZhdWx0O1xuXG4kY29udGFpbmVyLW1heC13aWR0aHM6IChcblx0c206IDU3NnB4LFxuXHRyZzogODAwcHgsXG5cdGxnOiA5NjBweCxcblx0eGw6IDExMDBweCxcblx0c3U6IDE3MDBweCxcbikgIWRlZmF1bHQ7XG5cblxuLy8gRm9udCBzaXplc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGZvbnRzaXplczogKFxuXHR0ZXh0LS1zbTogKFxuXHRcdHNtICAgICAgICAgICAgOiAxM3B4LFxuXHRcdHJnICAgICAgICAgICAgOiAxNXB4LFxuICAgICAgICBsZyAgICAgICAgICAgIDogMTZweFxuXHQpLFxuXHR0ZXh0LS1xdW90ZTogKFxuXHRcdHNtICAgICAgICAgICAgOiAxNnB4LFxuXHRcdHJnICAgICAgICAgICAgOiAyMXB4LFxuXHRcdGxnICAgICAgICAgICAgOiAyNHB4XG5cdCksXG5cdHRleHQ6IChcblx0XHRzbSAgICAgICAgICAgIDogMTdweCxcblx0XHRyZyAgICAgICAgICAgIDogMjFweCxcblx0XHRsZyAgICAgICAgICAgIDogMjRweFxuXHQpLFxuXHR0ZXh0LS1wbHVzOiAoXG5cdFx0c20gICAgICAgICAgICA6IDE4cHgsXG5cdFx0cmcgICAgICAgICAgICA6IDIycHgsXG5cdFx0bGcgICAgICAgICAgICA6IDI1cHhcblx0KSxcblx0dGV4dC0tbGc6IChcbiAgICAgICAgc20gICAgICAgICAgICA6IDI3cHgsXG4gICAgICAgIHJnICAgICAgICAgICAgOiAzMnB4LFxuICAgICAgICBsZyAgICAgICAgICAgIDogMzZweFxuXHQpLFxuXG4gICAgLy8gdW51c2Vk4oCmXG5cblx0aGVhZGxpbmUtLXhzOiAoXG5cdFx0eHMgICAgICAgICAgICA6IDE4cHgsXG5cdFx0c20gICAgICAgICAgICA6IDIycHgsXG5cdFx0bGcgICAgICAgICAgICA6IDI3cHhcblx0KSxcblx0aGVhZGxpbmUtLXNtOiAoXG5cdFx0eHMgICAgICAgICAgICA6IDIxcHgsXG5cdFx0c20gICAgICAgICAgICA6IDMycHgsXG5cdFx0bGcgICAgICAgICAgICA6IDM5cHhcblx0KSxcblx0aGVhZGxpbmU6IChcblx0XHR4cyAgICAgICAgICAgIDogMzlweCxcblx0XHRzbSAgICAgICAgICAgIDogNDRweCxcblx0XHRsZyAgICAgICAgICAgIDogNTBweFxuXHQpLFxuXHRkaXNwbGF5OiAoXG5cdFx0eHMgICAgICAgICAgICA6IDQwcHgsXG5cdFx0c20gICAgICAgICAgICA6IDU0cHgsXG5cdFx0bGcgICAgICAgICAgICA6IDYwcHhcblx0KVxuKTtcblxuXG4vLyBPdGhlciBzaXplc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGJvcmRlci1yYWRpdXM6IChcbiAgICBzbWFsbCAgICAgICAgICAgICA6IDNweCxcbiAgICBiYXNlICAgICAgICAgICAgICA6IDRweCxcbiAgICBsYXJnZSAgICAgICAgICAgICA6IDZweFxuKTtcblxuJGJ1dHRvbi1oZWlnaHQ6IChcbiAgICBjb25jaXNlICAgICAgICAgICA6IDM2cHgsXG4gICAgYmFzZSAgICAgICAgICAgICAgOiA0NHB4LFxuICAgIGxnICAgICAgICAgICAgICAgIDogNTVweFxuKTtcblxuJGxpc3QtaW5zZXQ6IChcbiAgICBtYXJnaW4gICAgICAgICAgICA6IHNwYWNlKDEuNSksXG4gICAgcGFkZGluZyAgICAgICAgICAgOiAwXG4pO1xuXG5cbi8vIFRyYW5zaXRpb25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kdHJhbnNpdGlvbjogKFxuXHRkdXJhdGlvbjogKFxuXHRcdGZhc3QgICAgICAgICA6IDUwbXMsXG5cdFx0c2hvcnQgICAgICAgIDogMTUwbXMsXG5cdFx0bG9uZyAgICAgICAgIDogNTAwbXNcblx0KSxcblx0dHlwZTogKFxuXHRcdHRoaXNhbHNvICAgICA6IGN1YmljLWJlemllcigwLjE5LCAxLCAwLjIyLCAxKSxcblx0XHRjdWJpYy1zdGF0aWMgOiBjdWJpYy1iZXppZXIoMCwgLTAuMSwgMSwgLTAuMSksXG5cdFx0Y3ViaWMtc3RhdGUgIDogY3ViaWMtYmV6aWVyKDAsIDEuMSwgMSwgMS4xKSxcblx0XHRiYXNlICAgICAgICAgOiBlYXNlLW91dCxcblx0XHRmaW5lICAgICAgICAgOiBlYXNlLWluLW91dFxuXHQpXG4pO1xuXG5cbi8vIFotaW5kZXhlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJHotaW5kZXg6IChcblx0J21vZGFsJyAgICAgOiA4MDAxLFxuXHQnb3ZlcmxheScgICA6IDgwMDAsXG5cdCdkcm9wZG93bicgIDogNzAwMCxcblx0J3NlY29uZCcgICAgOiAyMDAwLFxuXHQnZmlyc3QnICAgICA6IDEwMDAsXG5cdCdkZWZhdWx0JyAgIDogMSxcblx0J2JlbG93JyAgICAgOiAtMSxcbik7XG5cblxuLy8gRm9udHMgdXNpbmcgZGF0YS1VUklzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBkZWZpbmUgc3RhY2tzXG4kZm9udC1tb25vLXN0YWNrICAgICAgIDogTWVubG8sIE1vbmFjbywgQ29uc29sYXMsIFwiTGliZXJhdGlvbiBNb25vXCIsICdDb3VyaWVyIE5ldycsICdBbmRhbGUgTW9ubycsICdMdWNpZGEgU2FuIFR5cGV3cml0ZXInLCAnTHVjaWRhIENvbnNvbGUnLCBtb25vc3BhY2U7XG4kc2Fucy1mb250LXN0YWNrICAgICAgIDogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4kc2VyaWYtZm9udC1zdGFjayAgICAgIDogR2VvcmdpYSwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgXCJUaW1lc1wiLCBzZXJpZjtcbiRkaXNwbGF5LWZvbnQtc3RhY2sgICAgOiAkc2Fucy1mb250LXN0YWNrO1xuXG4vLyBBcmUgeW91IHJlZmVyZW5jaW5nIHRoZSBmb250IGZpbGVzIHJhdGhlciB0aGFuIHVzaW5nIGEgYmFzZTY0IHN0cmluZz9cbiRmb250cy1wYXRoICAgICAgICAgICA6ICcvYXNzZXRzL2ZvbnRzLyc7XG5cbi8vIGlzIHRoZSBodG1sLWxldmVsIGZvbnQgc3RhY2sgc2FucyBvciBzZXJpZj9cbiRtYWluLWZvbnQtc3RhY2sgICAgICAgOiAkc2Fucy1mb250LXN0YWNrO1xuXG4vLyB3b3VsZCB5b3UgbGlrZSB0byBuYW1lc3BhY2UgeW91ciBmb250P1xuJGZvbnQtbmFtZXNwYWNlICAgICAgICA6ICcnO1xuXG4vLyBmaWxsIGVtIG91dFxuJHNhbnMtaGFpciAgICAgICAgOiAnaGFpcic7XG4kc2Fucy10aGluICAgICAgICA6ICd0aGluJztcbiRzYW5zLWxpZ2h0ICAgICAgIDogJ2xpZ2h0JztcbiRzYW5zLWJvb2sgICAgICAgIDogJ2Jsb25kJztcbiRzYW5zLXJlZ3VsYXIgICAgIDogJ25vcm1hbCc7XG4kc2Fucy1tZWRpdW0gICAgICA6ICdtZWRpdW0nO1xuJHNhbnMtc2VtaWJvbGQgICAgOiAnc2VtaWJvbGQnO1xuJHNhbnMtYm9sZCAgICAgICAgOiAnYm9sZCc7XG4kc2Fucy1leHRyYWJvbGQgICA6ICdleHRyYWJvbGQnO1xuJHNhbnMtYmxhY2sgICAgICAgOiAnYmxhY2snO1xuJHNhbnMtZGlzcGxheSAgICAgOiAnZGlzcGxheSc7XG5cbi8vIGl0YWxpY3MgcGxhY2Vob2xkZXJzXG4kc2Fucy10aGluLWkgICAgICA6ICRzYW5zLXRoaW47XG4kc2Fucy1saWdodC1pICAgICA6ICRzYW5zLWxpZ2h0O1xuJHNhbnMtYm9vay1pICAgICAgOiAkc2Fucy1ib29rO1xuJHNhbnMtcmVndWxhci1pICAgOiAkc2Fucy1yZWd1bGFyO1xuJHNhbnMtbWVkaXVtLWkgICAgOiAkc2Fucy1tZWRpdW07XG4kc2Fucy1zZW1pYm9sZC1pICA6ICRzYW5zLXNlbWlib2xkO1xuJHNhbnMtYm9sZC1pICAgICAgOiAkc2Fucy1ib2xkO1xuJHNhbnMtZXh0cmFib2xkLWkgOiAkc2Fucy1leHRyYWJvbGQ7XG4kc2Fucy1ibGFjay1pICAgICA6ICRzYW5zLWJvbGQ7XG4kc2Fucy1kaXNwbGF5LWkgICA6ICRzYW5zLWRpc3BsYXk7XG5cblxuLy8gTWFrZSBhbGwgZm9udCBmaWxlcyBhdmFpbGFibGVcbi8vIE1peGluIG9wdGlvbnM6ICRmb250LWZhbWlseSwgJGZpbGUtcGF0aCwgJHdlaWdodCwgJHN0eWxlLCAkZm9ybWF0c1xuLy8gUHMuIFRoaXMgYmVsb3cgcHJpbnRzIGFuIHVud2FudGVkIHNwYWNlIGJldHdlZW4gdGhlIHBhdGggdmFyIGFuZCB0aGUgZm9udCB2YXI6XG4vLyBAaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtdGhpbiwgam9pbigkZm9udHMtcGF0aCwkc2Fucy10aGluKSApO1xuXG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtdGhpbiwgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy10aGlufScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1saWdodCwgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1saWdodH0nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtYm9vaywgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1ib29rfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1yZWd1bGFyLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLXJlZ3VsYXJ9JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLW1lZGl1bSwgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1tZWRpdW19JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLWJvbGQsICcjeyRmb250cy1wYXRofSN7JHNhbnMtYm9sZH0nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtYmxhY2ssICcjeyRmb250cy1wYXRofSN7JHNhbnMtYmxhY2t9JyApO1xuXG4vLyBVbnVzZWQsIHNvIGFwcGx5IGEgZGVmYXVsdCB0byBhdm9pZCBndWxwIGZ1Y2t1cHNcbi8vQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXhib2xkLCAgICcjeyRmb250cy1wYXRofSN7JHNhbnMteGJvbGR9JyApO1xuLy9AaW5jbHVkZSBmb250LWZhY2UoJGRpc3BsYXksICcjeyRmb250cy1wYXRofSN7JGRpc3BsYXl9JyApO1xuLy9AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtcmVndWxhci1pdGFsaWMsICcjeyRmb250cy1wYXRofSN7JHNhbnMtcmVndWxhci1pdGFsaWN9JyApO1xuXG5cbi8vIEFwcGx5IGZvbnQtZmlsZSB2YXJpYWJsZXMgdG8gYSBmb250LXN0YWNrLlxuLy8gV2Ugb25seSB1c2UgdGhlc2UgdmFyaWFibGVzIGluIG91ciBjbGFzc2VzLlxuXG4kZm9udC10ZXh0LXRoaW4gICAgICAgOiBqb2luKCRzYW5zLXRoaW4sICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1saWdodCAgICAgIDogam9pbigkc2Fucy1saWdodCwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LWJvb2sgICAgICAgOiBqb2luKCRzYW5zLWJvb2ssICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1yZWd1bGFyICAgIDogam9pbigkc2Fucy1yZWd1bGFyLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtbWVkaXVtICAgICA6IGpvaW4oJHNhbnMtbWVkaXVtLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtc2VtaWJvbGQgICA6IGpvaW4oJHNhbnMtc2VtaWJvbGQsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1ib2xkICAgICAgIDogam9pbigkc2Fucy1ib2xkLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtZXh0cmFib2xkICA6IGpvaW4oJHNhbnMtZXh0cmFib2xkLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtYmxhY2sgICAgICA6IGpvaW4oJHNhbnMtYmxhY2ssICRtYWluLWZvbnQtc3RhY2spO1xuXG4vLyBVbnVzZWQsIHNvIGFwcGx5IGEgZGVmYXVsdCB0byBhdm9pZCBndWxwIGZ1Y2t1cHNcbi8vJGZvbnQtdGV4dC1yZWd1bGFyLWkgIDogam9pbigkc2Fucy1yZWd1bGFyLCAkbWFpbi1mb250LXN0YWNrKTtcbi8vJGZvbnQtdGV4dC1tZWRpdW0taSAgIDogam9pbigkc2Fucy1tZWRpdW0taXRhbGljLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtYm9sZC1pICAgOiBqb2luKCRzYW5zLWJvbGQsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtZGlzcGxheSAgICAgICAgIDogJGZvbnQtdGV4dC1yZWd1bGFyO1xuLy8kZm9udC1zYW5zLXhib2xkICAgICAgOiBqb2luKCRzYW5zLXhib2xkLCAkbWFpbi1mb250LXN0YWNrKTtcbi8vJGZvbnQtc2Fucy1yZWd1bGFyLWkgIDogam9pbigkc2Fucy1yZWd1bGFyLWl0YWxpYywgJG1haW4tZm9udC1zdGFjayk7XG4vLyRmb250LWRpc3BsYXkgICAgICAgICA6IGpvaW4oJGRpc3BsYXksICRkaXNwbGF5LWZvbnQtc3RhY2spO1xuXG5cblxuXG5cblxuXG4vLyBPYmplY3QvY29tcG9uZW50IGRlZmF1bHQgZm9udHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRmb250LWJ1dHRvbiAgICAgICAgICAgOiAkZm9udC10ZXh0LWJvbGQ7XG5cblxuLy8gU3VpdCBicmVha3BvaW50IHN3aXRjaGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kc3VpdC10ZXh0LWJyZWFrcG9pbnRzICAgICAgOiBmYWxzZSAhZGVmYXVsdDtcbiRzdWl0LWZsZXgtYnJlYWtwb2ludHMgICAgICA6IGZhbHNlICFkZWZhdWx0O1xuJHN1aXQtZmxleGVtYmVkLWJyZWFrcG9pbnRzIDogZmFsc2UgIWRlZmF1bHQ7XG4kc3VpdC1ncmlkLWJyZWFrcG9pbnRzICAgICAgOiB0cnVlICFkZWZhdWx0O1xuJHN1aXQtc2l6ZS1icmVha3BvaW50cyAgICAgIDogdHJ1ZSAhZGVmYXVsdDtcbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEJVVFRPTlxuLy8gICBWZXJzaW9uIDUuMC4wIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2NvbXBvbmVudHMtYnV0dG9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gQnV0dG9uXG4vLyBCdXR0b24uaXMtZGlzYWJsZWRcblxuXG4vKiogQGRlZmluZSBCdXR0b24gKi9cblxuLy8gOnJvb3Qge1xuLy8gICAtLUJ1dHRvbi1ib3JkZXItY29sb3I6IGN1cnJlbnRjb2xvcjtcbi8vICAgLS1CdXR0b24tYm9yZGVyLXdpZHRoOiAxcHg7XG4vLyAgIC0tQnV0dG9uLWNvbG9yOiBpbmhlcml0O1xuLy8gICAtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5OiAwLjY7XG4vLyAgIC0tQnV0dG9uLWZvbnQ6IGluaGVyaXQ7XG4vLyAgIC0tQnV0dG9uLXBhZGRpbmc6IDAuNGVtIDAuNzVlbTtcbi8vIH1cblxuJEJ1dHRvbjogKFxuXHRCdXR0b24tYm9yZGVyLWNvbG9yOiBjdXJyZW50Y29sb3IsXG5cdEJ1dHRvbi1ib3JkZXItd2lkdGg6IDFweCxcblx0QnV0dG9uLWNvbG9yOiBpbmhlcml0LFxuXHRCdXR0b24tZGlzYWJsZWQtb3BhY2l0eTogMC42LFxuXHRCdXR0b24tZm9udDogaW5oZXJpdCxcblx0QnV0dG9uLXBhZGRpbmc6IDAuNGVtIDAuNzVlbVxuKTtcblxuLyoqXG4gKiBUaGUgYnV0dG9uIGNsYXNzZXMgYXJlIGJlc3QgYXBwbGllZCB0byBsaW5rcyBhbmQgYnV0dG9ucy5cbiAqIFRoZXNlIGNvbXBvbmVudHMgY2FuIGJlIHVzZWQgaW4gZm9ybXMsIGFzIGNhbGxzIHRvIGFjdGlvbiwgb3IgYXMgcGFydCBvZiB0aGVcbiAqIGdlbmVyYWwgVUkgb2YgdGhlIHNpdGUvYXBwLlxuICovXG5cbi8qKlxuICogMS4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAyLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDMuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIFByZXZlbnQgYnV0dG9uIHRleHQgZnJvbSBiZWluZyBzZWxlY3RhYmxlLlxuICovXG5cbi5CdXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLWJvcmRlci1jb2xvcik7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1ib3JkZXItd2lkdGgpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLWNvbG9yKTsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1mb250KTsgLyogMyAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IG1hcC1mZXRjaCgkQnV0dG9uLCBCdXR0b24tcGFkZGluZyk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lOyAvKiA0ICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0K1xuICovXG5cbi5CdXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogV29yayBhcm91bmQgYSBGaXJlZm94L0lFIGJ1ZyB3aGVyZSB0aGUgdHJhbnNwYXJlbnQgYGJ1dHRvbmAgYmFja2dyb3VuZFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxuICovXG5cbi5CdXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG59XG5cbi8qKlxuICogVUkgc3RhdGVzXG4gKi9cblxuLkJ1dHRvbjpob3Zlcixcbi5CdXR0b246Zm9jdXMsXG4uQnV0dG9uOmFjdGl2ZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLkJ1dHRvbjpkaXNhYmxlZCxcbi5CdXR0b24uaXMtZGlzYWJsZWQge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG9wYWNpdHk6IHZhcigtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5KTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEZMRVggRU1CRURcbi8vICAgVmVyc2lvbiAyLjAuNCAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy9jb21wb25lbnRzLWZsZXgtZW1iZWRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyBGbGV4RW1iZWRcbi8vIEZsZXhFbWJlZC0tMmJ5MVxuLy8gRmxleEVtYmVkLS0zYnkxXG4vLyBGbGV4RW1iZWQtLTRieTNcbi8vIEZsZXhFbWJlZC0tMTZieTlcbi8vIEZsZXhFbWJlZC1pdGVtXG5cblxuLyoqIEBkZWZpbmUgRmxleEVtYmVkICovXG5cbi8qKlxuICogRmxleGlibGUgbWVkaWEgZW1iZWRzXG4gKlxuICogRm9yIHVzZSB3aXRoIG1lZGlhIGVtYmVkcyDigJMgc3VjaCBhcyB2aWRlb3MsIHNsaWRlc2hvd3MsIG9yIGV2ZW4gaW1hZ2VzIOKAk1xuICogdGhhdCBuZWVkIHRvIHJldGFpbiBhIHNwZWNpZmljIGFzcGVjdCByYXRpbyBidXQgYWRhcHQgdG8gdGhlIHdpZHRoIG9mIHRoZWlyXG4gKiBjb250YWluaW5nIGVsZW1lbnQuXG4gKlxuICogQmFzZWQgb246IGh0dHA6Ly9hbGlzdGFwYXJ0LmNvbS9hcnRpY2xlL2NyZWF0aW5nLWludHJpbnNpYy1yYXRpb3MtZm9yLXZpZGVvXG4gKi9cblxuLkZsZXhFbWJlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi8qKlxuICogVGhlIGFzcGVjdC1yYXRpbyBoYWNrIGlzIGFwcGxpZWQgdG8gYW4gZW1wdHkgZWxlbWVudCBiZWNhdXNlIGl0IGFsbG93c1xuICogdGhlIGNvbXBvbmVudCB0byByZXNwZWN0IGBtYXgtaGVpZ2h0YC4gRGVmYXVsdCBhc3BlY3QgcmF0aW8gaXMgMToxLlxuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1ib3R0b206IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiAzOjEgYXNwZWN0IHJhdGlvXG4gKi9cblxuLkZsZXhFbWJlZC1yYXRpby0tM2J5MSB7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLyAzKTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogMjoxIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTJieTEge1xuICBwYWRkaW5nLWJvdHRvbTogNTAlO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiAxNjo5IGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTE2Ynk5IHtcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogNDozIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTRieTMge1xuICBwYWRkaW5nLWJvdHRvbTogNzUlO1xufVxuXG4vKipcbiAqIEZpdCB0aGUgY29udGVudCB0byB0aGUgYXNwZWN0IHJhdGlvXG4gKi9cblxuLkZsZXhFbWJlZC1jb250ZW50IHtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuXG4vLyBBdCBtZWRpYS1xdWVyaWVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGlmICgkc3VpdC1mbGV4ZW1iZWQtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTNieTEgeyBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gMyk7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUZsZXhFbWJlZC1yYXRpby0tMmJ5MSB7IHBhZGRpbmctYm90dG9tOiA1MCU7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUZsZXhFbWJlZC1yYXRpby0tMTZieTkgeyBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTRieTMgeyBwYWRkaW5nLWJvdHRvbTogNzUlOyB9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFNVSVQgR1JJRFxuLy8gICBWZXJzaW9uIDMuMC4zIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2NvbXBvbmVudHMtZ3JpZFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIEdyaWRcbi8vIEdyaWQtLWFsaWduQ2VudGVyXG4vLyBHcmlkLS1hbGlnblJpZ2h0XG4vLyBHcmlkLS1hbGlnbk1pZGRsZVxuLy8gR3JpZC0tYWxpZ25Cb3R0b21cbi8vIEdyaWQtLWZpdFxuLy8gR3JpZC0tZXF1YWxIZWlnaHRcbi8vIEdyaWQtY2VsbFxuLy8gR3JpZC1jZWxsLS1jZW50ZXJcblxuXG4vKiogQGRlZmluZSBHcmlkICovXG5cbi8vIDpyb290IHtcbi8vICAgLS1HcmlkLWd1dHRlci1zaXplOiAyMHB4O1xuLy8gfVxuXG4kR3JpZC1ndXR0ZXItc2l6ZTogc3BhY2UoMC43NSk7XG5cbi8qKlxuICogQ29yZSBncmlkIGNvbXBvbmVudFxuICpcbiAqIERPIE5PVCBhcHBseSBkaW1lbnNpb24gb3Igb2Zmc2V0IHV0aWxpdGllcyB0byB0aGUgYEdyaWRgIGVsZW1lbnQuIEFsbCBjZWxsXG4gKiB3aWR0aHMgYW5kIG9mZnNldHMgc2hvdWxkIGJlIGFwcGxpZWQgdG8gY2hpbGQgZ3JpZCBjZWxscy5cbiAqL1xuXG4vKiBHcmlkIGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBbGwgY29udGVudCBtdXN0IGJlIGNvbnRhaW5lZCB3aXRoaW4gY2hpbGQgYEdyaWQtY2VsbGAgZWxlbWVudHMuXG4gKlxuICogMS4gQWNjb3VudCBmb3IgYnJvd3NlciBkZWZhdWx0cyBvZiBlbGVtZW50cyB0aGF0IG1pZ2h0IGJlIHRoZSByb290IG5vZGUgb2ZcbiAqICAgIHRoZSBjb21wb25lbnQuXG4gKi9cblxuLkdyaWQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBmbGV4OyAvKiAxICovXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIG1hcmdpbjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAxICovXG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGNlbnRlciBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiByaWdodCBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogbWlkZGxlLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiBib3R0b20tYWxpZ24gZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYWxsb3cgY2VsbHMgdG8gZXF1YWwgZGlzdHJpYnV0ZSB3aWR0aFxuICpcbiAqIDEuIFByb3ZpZGUgYWxsIHZhbHVlcyB0byBhdm9pZCBJRTEwIGJ1ZyB3aXRoIHNob3J0aGFuZCBmbGV4XG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKlxuICogICAgVXNlIGAwJWAgdG8gYXZvaWQgYnVnIGluIElFMTAvMTEgd2l0aCB1bml0bGVzcyBmbGV4IGJhc2lzXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbFd4XG4gKi9cblxuLkdyaWQtLWZpdCA+IC5HcmlkLWNlbGwge1xuICBmbGV4OiAxIDEgMCU7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYWxsIGNlbGxzIG1hdGNoIGhlaWdodCBvZiB0YWxsZXN0IGNlbGwgaW4gYSByb3dcbiAqL1xuXG4uR3JpZC0tZXF1YWxIZWlnaHQgPiAuR3JpZC1jZWxsIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogZ3V0dGVyc1xuICovXG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcbiAgbWFyZ2luOiAwIGNhbGMoLTAuNSAqICN7JEdyaWQtZ3V0dGVyLXNpemV9KTtcbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqICN7JEdyaWQtZ3V0dGVyLXNpemV9KTtcbn1cblxuLyogR3JpZCBjZWxsXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE5vIGV4cGxpY2l0IHdpZHRoIGJ5IGRlZmF1bHQuIFJlbHkgb24gY29tYmluaW5nIGBHcmlkLWNlbGxgIHdpdGggYSBkaW1lbnNpb25cbiAqIHV0aWxpdHkgb3IgYSBjb21wb25lbnQgY2xhc3MgdGhhdCBleHRlbmRzICdHcmlkJy5cbiAqXG4gKiAxLiBTZXQgZmxleCBpdGVtcyB0byBmdWxsIHdpZHRoIGJ5IGRlZmF1bHRcbiAqIDIuIEZpeCBpc3N1ZSB3aGVyZSBlbGVtZW50cyB3aXRoIG92ZXJmbG93IGV4dGVuZCBwYXN0IHRoZVxuICogICAgYEdyaWQtY2VsbGAgY29udGFpbmVyIC0gaHR0cHM6Ly9naXQuaW8vdnc1b0ZcbiAqL1xuXG4uR3JpZC1jZWxsIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgZmxleC1iYXNpczogMTAwJTsgLyogMSAqL1xuICBtaW4td2lkdGg6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogaG9yaXpvbnRhbGx5IGNlbnRlciBvbmUgdW5pdFxuICogU2V0IGEgc3BlY2lmaWMgdW5pdCB0byBiZSBob3Jpem9udGFsbHkgY2VudGVyZWQuIERvZXNuJ3QgYWZmZWN0XG4gKiBhbnkgb3RoZXIgdW5pdHMuIENhbiBzdGlsbCBjb250YWluIGEgY2hpbGQgYEdyaWRgIG9iamVjdC5cbiAqL1xuXG4uR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuXG5cbi8vIEF0IG1lZGlhLXF1ZXJpZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaWYgKCRzdWl0LWdyaWQtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1HcmlkLS1hbGlnbkNlbnRlciAgeyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25SaWdodCAgIHsganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25NaWRkbGUgIHsgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25Cb3R0b20gIHsgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1HcmlkLWNlbGwtLWNlbnRlciAgeyBtYXJnaW46IDAgYXV0bzsgfVxuICAgIFx0fVxuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLlxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL3Y0LWRldi9zY3NzL21peGlucy9fYnJlYWtwb2ludHMuc2Nzc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksXG4vLyBvcmRlciBmcm9tIHNtYWxsIHRvIGxhcmdlOlxuLy8gICAoeHM6IDAsIHNtOiA1NDRweCwgbWQ6IDc2OHB4KVxuLy8gVGhlIG1hcCBkZWZpbmVkIGluIHRoZSBgJGdyaWQtYnJlYWtwb2ludHNgIGdsb2JhbCB2YXJpYWJsZVxuLy8gaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuXG4vLyBOYW1lIG9mIHRoZSBuZXh0IGJyZWFrcG9pbnQsIG9yIG51bGwgZm9yIHRoZSBsYXN0IGJyZWFrcG9pbnQuXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20pXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAoeHM6IDAsIHNtOiA1NDRweCwgbWQ6IDc2OHB4KSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICRicmVha3BvaW50LW5hbWVzOiAoeHMgc20gbWQpKVxuLy8gICAgbWRcbkBmdW5jdGlvbiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMsICRicmVha3BvaW50LW5hbWVzOiBtYXAta2V5cygkYnJlYWtwb2ludHMpKSB7XG5cdCRuOiBpbmRleCgkYnJlYWtwb2ludC1uYW1lcywgJG5hbWUpO1xuXHRAcmV0dXJuIGlmKCRuIDwgbGVuZ3RoKCRicmVha3BvaW50LW5hbWVzKSwgbnRoKCRicmVha3BvaW50LW5hbWVzLCAkbiArIDEpLCBudWxsKTtcbn1cblxuLy8gTWluaW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgc21hbGxlc3QgKGZpcnN0KSBicmVha3BvaW50LlxuLy8gICAgPj4gYnJlYWtwb2ludC1taW4oc20sICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpKVxuLy8gICAgNTQ0cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbWluOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuXHRAcmV0dXJuIGlmKCRtaW4gIT0gMCwgJG1pbiwgbnVsbCk7XG59XG5cbi8vIE1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIGxhcmdlc3QgKGxhc3QpIGJyZWFrcG9pbnQuXG4vLyBUaGUgbWF4aW11bSB2YWx1ZSBpcyBjYWxjdWxhdGVkIGFzIHRoZSBtaW5pbXVtIG9mIHRoZSBuZXh0IG9uZSBsZXNzIDAuMS5cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KHNtLCAoeHM6IDAsIHNtOiA1NDRweCwgbWQ6IDc2OHB4KSlcbi8vICAgIDc2N3B4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0JG5leHQ6IGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblx0QHJldHVybiBpZigkbmV4dCwgYnJlYWtwb2ludC1taW4oJG5leHQsICRicmVha3BvaW50cykgLSAxcHgsIG51bGwpO1xufVxuXG4vLyBNZWRpYSBvZiBhdCBsZWFzdCB0aGUgbWluaW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIHdpZGVyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0JG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG5cdEBpZiAkbWluIHtcblx0XHRAbWVkaWEgKG1pbi13aWR0aDogJG1pbikge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9IEBlbHNlIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG4vLyBNZWRpYSBvZiBhdCBtb3N0IHRoZSBtYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgbGFyZ2VzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0JG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG5cdEBpZiAkbWF4IHtcblx0XHRAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9IEBlbHNlIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG4vLyBNZWRpYSBiZXR3ZWVuIHRoZSBicmVha3BvaW50J3MgbWluaW11bSBhbmQgbWF4aW11bSB3aWR0aHMuXG4vLyBObyBtaW5pbXVtIGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludCwgYW5kIG5vIG1heGltdW0gZm9yIHRoZSBsYXJnZXN0IG9uZS5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBvbmx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50LCBub3Qgdmlld3BvcnRzIGFueSB3aWRlciBvciBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LW9ubHkoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcblx0XHRcdEBjb250ZW50O1xuXHRcdH1cblx0fVxufVxuXG4vLyBNZWRpYSB0aGF0IHNwYW5zIG11bHRpcGxlIGJyZWFrcG9pbnQgd2lkdGhzLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IGJldHdlZW4gdGhlIG1pbiBhbmQgbWF4IGJyZWFrcG9pbnRzXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1iZXR3ZWVuKCRsb3dlciwgJHVwcGVyLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJHVwcGVyLCAkYnJlYWtwb2ludHMpIHtcblx0XHRcdEBjb250ZW50O1xuXHRcdH1cblx0fVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgICBTVUlUIEdSSUQgU0VUVElOR1Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLkdyaWQtLXdpdGhHdXR0ZXIge1xuXHRtYXJnaW46IDAgLSN7JGd1dHRlclNwYWNlIC8gM307XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IG1hcmdpbjogMCAtI3skZ3V0dGVyU3BhY2V9OyB9XG59XG5cbi5HcmlkLS13aXRoR3V0dGVyID4gLkdyaWQtY2VsbCB7XG5cdHBhZGRpbmc6IDAgJGd1dHRlclNwYWNlIC8gMztcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7IH1cbn1cblxuLy8kZ3V0dGVyU3BhY2VOZWdhdGl2ZSA6IC0oJGd1dHRlclNwYWNlKTtcblxuLy8uR3JpZC0td2l0aEd1dHRlckxnIHtcbi8vXHRtYXJnaW46IDAgJGd1dHRlclNwYWNlTmVnYXRpdmU7XG4vL1x0cGFkZGluZzogMCAoJGd1dHRlclNwYWNlICogMik7XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHsgbWFyZ2luOiAwICRndXR0ZXJTcGFjZU5lZ2F0aXZlOyB9XG4vL31cbi8vXG4vLy5HcmlkLS13aXRoR3V0dGVyTGcgPiAuR3JpZC1jZWxsIHtcbi8vXHRwYWRkaW5nOiAwICRndXR0ZXJTcGFjZTtcbi8vXG4vL1x0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4cykgeyBwYWRkaW5nOiAwICRndXR0ZXJTcGFjZTsgfVxuLy99XG5cbi5HcmlkLS13aXRoR3V0dGVyU20ge1xuXHRtYXJnaW46IDAgLSN7JGd1dHRlclNwYWNlIC8gOX07XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXJnaW46IDAgLSN7JGd1dHRlclNwYWNlIC8gM307IH1cbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXJTbSA+IC5HcmlkLWNlbGwge1xuXHRwYWRkaW5nOiAwICRndXR0ZXJTcGFjZSAvIDk7XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBwYWRkaW5nOiAwICRndXR0ZXJTcGFjZSAvIDM7IH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBCQVNFOiBQQUdFXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbiAvKipcbiAgKiBTaW1wbGUgcGFnZS1sZXZlbCBzZXR1cCBmcm9tIEludWl0Q1NTLlxuICAqXG4gICogMS4gU2V0IHRoZSBkZWZhdWx0IGBmb250LXNpemVgIGFuZCBgbGluZS1oZWlnaHRgIGZvciB0aGUgZW50aXJlIHByb2plY3QsXG4gICogICAgc291cmNlZCBmcm9tIG91ciBkZWZhdWx0IHZhcmlhYmxlcy4gVGhlIGBmb250LXNpemVgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3RcbiAgKiAgICBpbiBlbXMsIHRoZSBgbGluZS1oZWlnaHRgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3QgdW5pdGxlc3NseS5cbiAgKiAyLiBGb3JjZSBzY3JvbGxiYXJzIHRvIGFsd2F5cyBiZSB2aXNpYmxlIHRvIHByZXZlbnQgYXdrd2FyZCDigJhqdW1wc+KAmSB3aGVuXG4gICogICAgbmF2aWdhdGluZyBiZXR3ZWVuIHBhZ2VzIHRoYXQgZG8vZG8gbm90IGhhdmUgZW5vdWdoIGNvbnRlbnQgdG8gcHJvZHVjZVxuICAqICAgIHNjcm9sbGJhcnMgbmF0dXJhbGx5LlxuICAqIDMuIEVuc3VyZSB0aGUgcGFnZSBhbHdheXMgZmlsbHMgYXQgbGVhc3QgdGhlIGVudGlyZSBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0LlxuICAqL1xuXG5odG1sIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7IC8qIDMgKi9cbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7IC8qIDIgKi9cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBCQVNFOiBMSU5LXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbmEge1xuXHRjb2xvcjogY3VycmVudENvbG9yO1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjtcblx0fVxufVxuXG4vL3AgYSxcbi8vbGkgYSB7XG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0fVxuLy99XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgTUlYSU5TXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFVzaW5nIGZvbnQtZmFjZT8gVXNlIHRoaXMgd2l0aCBpdC5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiB0eXBlUmVzZXQoKSB7XG4gICAgZm9udC1zdHJldGNoOiBub3JtYWw7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuXG4vLyBNZWRpYSBxdWVyaWVzXG4vLyBJIGxvdmUgdGhpcyB2ZXJzaW9uLCBidXQgSSBuZWVkIG1vcmUgZmxleGliaWxpdHkuIFRoaXMgd2lsbCBiZSBkZXByZWNhdGVkXG4vLyBieSBCUzQncyBicmVha3BvaW50cyBtaXhpbi4gU2VlOiBgdG9vbHMubWl4aW5zLmJyZWFrcG9pbnRzYFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEBsaW5rIGh0dHA6Ly9zYXNzLWd1aWRlbGluLmVzLyNicmVha3BvaW50LW1hbmFnZXIgU2FzcyBHdWlkZWxpbmVzIC0gQnJlYWtwb2ludCBNYW5hZ2VyXG4vLyBAbGluayBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vbWFuYWdpbmctcmVzcG9uc2l2ZS1icmVha3BvaW50cy1zYXNzL1xuXG4vL0BtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4vL1x0Ly8gJHJhdy1xdWVyeTogbWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQpO1xuLy9cdC8vICRyYXctcXVlcnk6IG1hcC1mZXRjaCgkc2l6ZSwgYnJlYWtwb2ludCwgJGJyZWFrcG9pbnQpO1xuLy9cdCRyYXctcXVlcnk6IHNpemUoYnJlYWtwb2ludCwgJGJyZWFrcG9pbnQpO1xuLy9cbi8vXHRAaWYgJHJhdy1xdWVyeSB7XG4vL1x0XHQkcXVlcnk6IGlmKHR5cGUtb2YoJHJhdy1xdWVyeSkgPT0gJ3N0cmluZycsIHVucXVvdGUoJHJhdy1xdWVyeSksIGluc3BlY3QoJHJhdy1xdWVyeSkpO1xuLy9cbi8vXHRcdEBtZWRpYSAjeyRxdWVyeX0ge1xuLy9cdFx0XHRAY29udGVudDtcbi8vXHRcdH1cbi8vXG4vL1x0fSBAZWxzZSB7XG4vL1x0XHRAZXJyb3IgJ05vIHZhbHVlIGZvdW5kIGZvciBgI3skYnJlYWtwb2ludH1gLiAnXG4vL1x0XHRcdCArICdQbGVhc2UgbWFrZSBzdXJlIGl0IGlzIGRlZmluZWQgaW4gYCRicmVha3BvaW50c2AgbWFwLic7XG4vL1x0fVxuLy99XG5cblxuLy8gQ2xlYXJmaXhcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAxLiBUaGUgc3BhY2UgY29udGVudCBpcyBvbmUgd2F5IHRvIGF2b2lkIGFuIE9wZXJhIGJ1ZyB3aGVuIHRoZVxuLy8gICAgY29udGVudGVkaXRhYmxlIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cbi8vICAgIE90aGVyd2lzZSBpdCBjYXVzZXMgc3BhY2UgdG8gYXBwZWFyIGF0IHRoZSB0b3AgYW5kIGJvdHRvbSBvZiBlbGVtZW50c1xuLy8gICAgdGhhdCBhcmUgY2xlYXJmaXhlZC5cbi8vIDIuIFRoZSB1c2Ugb2YgYHRhYmxlYCByYXRoZXIgdGhhbiBgYmxvY2tgIGlzIG9ubHkgbmVjZXNzYXJ5IGlmIHVzaW5nXG4vLyAgICBgOmJlZm9yZWAgdG8gY29udGFpbiB0aGUgdG9wLW1hcmdpbnMgb2YgY2hpbGQgZWxlbWVudHMuXG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcblx0JjpiZWZvcmUsXG5cdCY6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6IFwiIFwiOyAvLyAxXG5cdFx0ZGlzcGxheTogdGFibGU7IC8vIDJcblx0fVxuXG5cdCY6YWZ0ZXIge1xuXHRcdGNsZWFyOiBib3RoO1xuXHR9XG59XG5cblxuLy8gRXZlbnQgd3JhcHBlclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEBhdXRob3IgSGFycnkgUm9iZXJ0c1xuLy8gQHBhcmFtIHtCb29sfSAkc2VsZiBbZmFsc2VdIC0gV2hldGhlciBvciBub3QgdG8gaW5jbHVkZSBjdXJyZW50IHNlbGVjdG9yXG4vLyBAbGluayBodHRwczovL3R3aXR0ZXIuY29tL2Nzc3dpemFyZHJ5L3N0YXR1cy80Nzg5Mzg1MzAzNDIwMDY3ODRcbi8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvc2Fzcy9zaW1wbGlmeWluZy1jb250ZXh0cy1ldmVudHMvXG5cbkBtaXhpbiBvbi1ldmVudCgkc2VsZjogZmFsc2UpIHtcblx0QGlmICRzZWxmIHtcblx0XHQmLFxuXHRcdCY6aG92ZXIsXG5cdFx0JjphY3RpdmUsXG5cdFx0Jjpmb2N1cyB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdCY6aG92ZXIsXG5cdFx0JjphY3RpdmUsXG5cdFx0Jjpmb2N1cyB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH1cbn1cblxuXG4vLyBDb250ZXh0LWJhc2VkIHNlbGVjdG9yXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gTWFrZSBhIGNvbnRleHQtYmFzZWQgc2VsZWN0b3IgYSBsaXR0bGUgbW9yZSBmcmllbmRseVxuLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLyBAcGFyYW0ge1N0cmluZ30gJGNvbnRleHRcbi8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvc2Fzcy9zaW1wbGlmeWluZy1jb250ZXh0cy1ldmVudHMvXG4vLyAubXktZWxlbWVudCB7XG4vLyAgICAgZGlzcGxheTogZmxleDtcbi8vICAgICBAaW5jbHVkZSB3aGVuLWluc2lkZSgnLm5vLWZsZXhib3gnKSB7XG4vLyAgICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuLy8gICAgIH1cbi8vIH1cbi8vIFJlcGxhY2luZ+KAplxuLy8gLm15LWVsZW1lbnQge1xuLy8gICAgIGRpc3BsYXk6IGZsZXg7XG4vLyAgICAgLm5vLWZsZXhib3ggJiB7XG4vLyAgICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuLy8gICAgIH1cbi8vIH1cblxuQG1peGluIHdoZW4taW5zaWRlKCRjb250ZXh0KSB7XG5cdCN7JGNvbnRleHR9ICYge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cblxuLy8gVHJhbnNpdGlvbiBiYXNlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUXVpY2sgYW5kIGVhc3kuIENvdWxkIGV4dGVuZCB0aGlz4oCmXG5cbkBtaXhpbiBiYXNlVHJhbnNpdGlvbihcblx0JHByb3BlcnR5OiBhbGxcbikge1xuXHR0cmFuc2l0aW9uLXByb3BlcnR5OiAkcHJvcGVydHk7XG5cdHRyYW5zaXRpb24tZHVyYXRpb246IG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGxvbmcpO1xuXHR0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogbWFwLWZldGNoKCR0cmFuc2l0aW9uLCB0eXBlLCBiYXNlKTtcbn1cblxuXG4vLyBTY3V0IHJlbSBmYWxsYmFja1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGh0dHA6Ly9kYXZpZHRoZWNsYXJrLmdpdGh1Yi5pby9zY3V0L3JlbUZhbGxiYWNrLmh0bWxcbi8vIFJlcXVpcmVzOiBzY3V0LXJlbSBhbmQgc2N1dC1zdHJpcC11bml0LlxuLy8gUmVuYW1lZCByZW1GYWxsYmFjaygpIGZyb20gc2N1dC1yZW1GYWxsYmFjaygpIGZvciBlYXNlIG9mIHVzZS5cblxuQG1peGluIHJlbUZhbGxiYWNrIChcblx0JHBpeGVscyxcblx0JHByb3BlcnR5OiBmb250LXNpemVcbikge1xuXG5cdCRweC12YWxzOiBudWxsO1xuXHRAZWFjaCAkdmFsIGluICRwaXhlbHMge1xuXHRcdCR2YWwtaW4tcHg6IHNjdXQtc3RyaXAtdW5pdCgkdmFsKSAqIDFweDtcblx0XHQkcHgtdmFsczogYXBwZW5kKCRweC12YWxzLCAkdmFsLWluLXB4KTtcblx0fVxuXHQkcmVtLXZhbHM6IHJlbSgkcGl4ZWxzKTtcblxuXHQjeyRwcm9wZXJ0eX06ICRweC12YWxzO1xuXHQjeyRwcm9wZXJ0eX06ICRyZW0tdmFscztcblxufVxuXG5cbi8vIFRyYW5zZm9ybSBzbW9vdGhpbmcgaGFja3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBcyBpcyBvZnRlbiB0aGUgY2FzZSwgc29tZSBkZXZpY2VzL2Jyb3dzZXJzIG5lZWQgYWRkaXRpb25hbCBjb2RlIHRvIGdldCBDU1MgdG8gd29ya1xuLy8gaW4gdGhlIG1vc3QgZGVzaXJlZCB3YXkuIFRoZXNlIG1peGlucyBhcmUgdXNlZCB0byBxdWlja2x5IGRyb3AgaW4gaGFja3MgZm9yIGVhY2ggZWxlbWVudFxuLy8gRmluZCBvdXQgbW9yZSBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vSWFuTHVubi9Ib3Zlci93aWtpL0hhY2tzLUV4cGxhaW5lZFxuLy8gMS4gSW1wcm92ZSBwZXJmb3JtYW5jZSBvbiBtb2JpbGUvdGFibGV0IGRldmljZXNcbi8vIDIuIEltcHJvdmUgYWxpYXNpbmcgb24gbW9iaWxlL3RhYmxldCBkZXZpY2VzXG4vLyAzLiBUcmFuc2Zvcm1zIG5lZWQgdG8gYmUgYmxvY2stbGV2ZWwgdG8gd29ya1xuLy8gNC4gQENGOiAnd2lsbC1jaGFuZ2UnIGlzIGFsbW9zdCBhdmFpbGFibGUuIFNlZTogaHR0cHM6Ly9kZXYub3BlcmEuY29tL2FydGljbGVzL2Nzcy13aWxsLWNoYW5nZS1wcm9wZXJ0eS9cblxuQG1peGluIGhhcmR3YXJlQWNjZWwoKSB7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTsgLy8xLlxufVxuXG5AbWl4aW4gaW1wcm92ZUFudGlBbGlhcygpIHtcblx0Ym94LXNoYWRvdzogMCAwIDFweCByZ2JhKDAsIDAsIDAsIDApOyAvLyAyLlxufVxuXG5AbWl4aW4gZm9udFNtb290aCgpIHtcblx0YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG5AbWl4aW4gZm9yY2VCbG9ja0xldmVsKCkge1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8vMy5cblx0Ly8gdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuQG1peGluIGFudGljaXBhdGVQYWludGluZyB7XG5cdHdpbGwtY2hhbmdlOiBhbGw7IC8vIDQuXG59XG5cbkBtaXhpbiBzbW9vdGhUcmFuc2l0aW9uKCkge1xuXHQvL0BpbmNsdWRlIGZvcmNlQmxvY2tMZXZlbCgpO1xuXHRAaW5jbHVkZSBoYXJkd2FyZUFjY2VsKCk7XG5cdC8qIEBpbmNsdWRlIGltcHJvdmVBbnRpQWxpYXMoKTsgKi9cblx0QGluY2x1ZGUgZm9udFNtb290aCgpO1xuXHQvKiBAaW5jbHVkZSBhbnRpY2lwYXRlUGFpbnRpbmcoKTsgKi9cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBJTUFHRVNcbi8vICAgVE9ETzogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9vbi1vYmplY3QtZml0LWFuZC1vYmplY3QtcG9zaXRpb24vXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIDEuIEZsdWlkIGltYWdlcyBmb3IgcmVzcG9uc2l2ZSBwdXJwb3Nlcy5cbi8vIDIuIE9mZnNldCBgYWx0YCB0ZXh0IGZyb20gc3Vycm91bmRpbmcgY29weS5cbi8vIDMuIFNldHRpbmcgYHZlcnRpY2FsLWFsaWduYCByZW1vdmVzIHRoZSB3aGl0ZXNwYWNlIHRoYXQgYXBwZWFycyB1bmRlciBgaW1nYFxuLy8gICAgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBkcm9wcGVkIGludG8gYSBwYWdlIGFzLWlzLiBTYWZlciBhbHRlcm5hdGl2ZSB0b1xuLy8gICAgdXNpbmcgYGRpc3BsYXk6IGJsb2NrO2AuXG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlOyAgICAgICAgLy8gMS5cbiAgICBmb250LXN0eWxlOiBpdGFsaWM7ICAgICAvLyAyLlxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IC8vIDMuXG59XG5cblxuLy8gMS4gR29vZ2xlIE1hcHMgYnJlYWtzIGlmIGBtYXgtd2lkdGg6IDEwMCVgIGFjdHMgdXBvbiBpdDsgdXNlIHRoZWlyIHNlbGVjdG9yXG4vLyAgICB0byByZW1vdmUgdGhlIGVmZmVjdHMuXG4vLyAyLiBJZiBhIGB3aWR0aGAgYW5kL29yIGBoZWlnaHRgIGF0dHJpYnV0ZSBoYXZlIGJlZW4gZXhwbGljaXRseSBkZWZpbmVkLCBsZXTigJlzXG4vLyAgICBub3QgbWFrZSB0aGUgaW1hZ2UgZmx1aWQuXG5cbi5nbS1zdHlsZSBpbWcsIC8vIDEuXG5pbWdbd2lkdGhdLCAgICAvLyAyLlxuaW1nW2hlaWdodF0geyAgLy8gMi5cbiAgICBtYXgtd2lkdGg6IG5vbmU7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgIFRZUE9HUkFQSFkgRUxFTUVOVCBTRVRUSU5HU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vKiB1bmNzczppZ25vcmUgKi9cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG5ibG9ja3F1b3RlLFxudWwsIG9sLCBsaSwgZGwsIGRkXG5wLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5mb3JtLCBmaWVsZHNldCwgbGVnZW5kLFxuZmlndXJlLCBmaWdjYXB0aW9uLFxudGFibGUsIHRoLCB0ZCwgY2FwdGlvblxucHJlLCBzbWFsbCxcbmVtLCBiIHtcblx0QGluY2x1ZGUgdHlwZVJlc2V0KCk7XG59XG5cblxuLy8gUm9vdCBzdHlsaW5nIHRvIGNhc2NhZGUgdGhydVxuLy8gTW92ZWQgdG8gYm9keSwgbm90IDpyb290LCBzbyB0aGF0IGl0J3MgZWFzaWVyIHRvIHVzZSBmb250ZmFjZW9ubG9hZC5qc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuaHRtbCB7XG5cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuXHRjb2xvcjogcGFsZXR0ZSh0ZXh0KTtcblx0Zm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhciwgJG1haW4tZm9udC1zdGFjaztcblx0Zm9udC1zaXplOiAxMDAlO1xuXHRsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQtdW5pdDtcblx0dGV4dC1hbGlnbjogbGVmdDtcblx0Ly90ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAgIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNQcmVjaXNpb247XG5cdC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xufVxuXG5cbi8vIENvbnNpc3RlbnQgdmVydGljYWwgcmh5dGhtXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKiB1bmNzczppZ25vcmUgKi9cbi8vIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG51bCwgb2wsIGxpLCBkbCxcbmJsb2NrcXVvdGUsIHAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZpZWxkc2V0LFxucHJlIHtcblx0bWFyZ2luLWJvdHRvbTogJHBhcmFncmFwaFNwYWNlO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIERJU1BMQVkgT0JKRUNUU1xuLy8gICBGcm9tOiBTVUlUIFBPU0lUSU9OIFVUSUxTXG4vLyAgIFZlcnNpb24gMS4wLjEgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvdXRpbHMtcG9zaXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyB1LXBvc0Fic29sdXRlXG4vLyB1LXBvc0ZpeGVkXG4vLyBvLXBvc0Fic29sdXRlQ2VudGVyXG4vLyBvLXBvc0ZpeGVkQ2VudGVyXG4vLyBvLXBvc0Z1bGxTY3JlZW5cblxuLy8gcG9zQWJzb2x1dGVDZW50ZXIgbGVnYWN5OlxuLy8gYm90dG9tOiAwICFpbXBvcnRhbnQ7XG4vLyBsZWZ0OiAwICFpbXBvcnRhbnQ7XG4vLyBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcbi8vIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50O1xuLy8gcmlnaHQ6IDAgIWltcG9ydGFudDtcbi8vIHRvcDogMCAhaW1wb3J0YW50O1xuXG5cbkBtaXhpbiB1LXBvc0Fic29sdXRlIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xufVxuXG5AbWl4aW4gdS1wb3NGaXhlZCB7XG5cdGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcblx0cG9zaXRpb246IGZpeGVkO1xufVxuXG5AbWl4aW4gby1wb3NDZW50ZXIoXG5cdCRwb3NDZW50ZXJQb3NpdGlvbjogYWJzb2x1dGVcbikge1xuXHRsZWZ0OiA1MCU7XG5cdHBvc2l0aW9uOiAkcG9zQ2VudGVyUG9zaXRpb247XG5cdHRvcDogNTAlO1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cblxuQG1peGluIG8tcG9zRnVsbFNjcmVlbihcblx0JHBvc0Z1bGxTY3JlZW46IGZpeGVkXG4pIHtcblx0Ym90dG9tOiAwO1xuXHRsZWZ0OiAwO1xuXHRtYXJnaW46IGF1dG87XG5cdHBvc2l0aW9uOiAkcG9zRnVsbFNjcmVlbjtcblx0cmlnaHQ6IDA7XG5cdHRvcDogMDtcbn1cblxuLm8tcG9zQWJzb2x1dGVDZW50ZXIgICAgeyBAaW5jbHVkZSBvLXBvc0NlbnRlcigpOyB9XG4uby1wb3NGaXhlZENlbnRlciAgICAgICB7IEBpbmNsdWRlIG8tcG9zQ2VudGVyKGZpeGVkKTsgfVxuLm8tcG9zRnVsbFNjcmVlbiAgICAgICAgeyBAaW5jbHVkZSBvLXBvc0Z1bGxTY3JlZW4oKTsgfVxuLm8tcG9zQWJzb2x1dGVDZW50ZXJBbHQgeyBAaW5jbHVkZSBvLXBvc0Z1bGxTY3JlZW4oYWJzb2x1dGUpOyB9XG5cbi8vIDEuIE1ha2Ugc3VyZSBmaXhlZCBlbGVtZW50cyBhcmUgcHJvbW90ZWQgaW50byBhIG5ldyBsYXllcixcbi8vICAgIGZvciBwZXJmb3JtYW5jZSByZWFzb25zLlxuXG4uby1wb3NGdWxsU2NyZWVuLFxuLm8tcG9zRml4ZWRDZW50ZXIge1xuXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IC8vIDFcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBDT05UQUlORVIgT0JKRUNUXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbkBtaXhpbiBjb250YWluZXIoXG5cdCR3aWR0aDogY29udGFpbmVyLXdpZHRoKHJnKVxuKSB7XG5cdEBpbmNsdWRlIGNsZWFyZml4KCk7XG5cdGhlaWdodDogaW5oZXJpdDtcblx0bWFyZ2luOiAwIGF1dG87XG5cdG1heC13aWR0aDogJHdpZHRoO1xuXHRwYWRkaW5nOiAwIHNwYWNlKDEuNSk7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIC8vIG1hbmFnZSBlbmQgc3BhY2luZ1xuXHRwLFxuXHRsaSxcblx0b2wge1xuXHRcdCY6bGFzdC1jaGlsZCxcblx0XHQmOmxhc3QtY2hpbGQgYSB7XG5cdFx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdH1cblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRwYWRkaW5nOiAwIHNwYWNlKDIpO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cbn1cblxuLm8tY29udGFpbmVyIHtcblx0QGluY2x1ZGUgY29udGFpbmVyKCk7XG5cblx0Ji0tbWQge1xuXHRcdEBpbmNsdWRlIGNvbnRhaW5lciggY29udGFpbmVyLXdpZHRoKG1kKSApO1xuXHR9XG5cblx0Ji0tbGcge1xuXHRcdEBpbmNsdWRlIGNvbnRhaW5lciggY29udGFpbmVyLXdpZHRoKGxnKSApO1xuXHR9XG5cblx0Ji0teGwge1xuXHRcdEBpbmNsdWRlIGNvbnRhaW5lciggY29udGFpbmVyLXdpZHRoKHhsKSApO1xuXHR9XG5cblx0Ji0taGVybyB7XG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgc3BhY2UoNCk7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIHNwYWNlKDIpO1xuICAgICAgICB9XG5cdH1cblxuICAgICYtLXN1cGVyIHtcbiAgICAgICAgLy9AaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aChzdSkgKTtcblx0XHRtYXgtd2lkdGg6IDEwMCU7XG5cdFx0cGFkZGluZzogMCBzcGFjZSgxLjUpO1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgc3BhY2UoNCk7XG4gICAgICAgIH1cblx0fVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogQ1VSU09SIFNUQVRFU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBodHRwczovL2Nzcy10cmlja3MuY29tL2F0dHJpYnV0ZS1zZWxlY3RvcnMvXG4vLyBodHRwczovL2Nzcy10cmlja3MuY29tL2FsbWFuYWMvc2VsZWN0b3JzL2EvYXR0cmlidXRlL1xuLy8gQWxzbzogQXR0cmlidXRlIE5vdCBFcXVhbCBTZWxlY3RvciBbbmFtZSE94oCddmFsdWXigJ1dXG5cbi8vIFtkYXRhLXZhbHVlKj1cImRpc21pc3NcIl0sXG4vLyBbZGF0YS0qPVwidG9nZ2xlXCJdLFxuLy8gW2RhdGEtdG9nZ2xlXSxcbi8vIFtyZWxePVwiZGF0YS10b2dnbGVcIl0sXG5bZGF0YS1tb2RhbC10b2dnbGVdLFxuW2RhdGEtdG9nZ2xlLWZvbGRdLFxuW2RhdGEtZGlzbWlzc11cbntcblx0Y3Vyc29yOiBwb2ludGVyO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogTElTVFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyAxLiBSZW1vdmUgZXh0cmEgdmVydGljYWwgc3BhY2luZyB3aGVuIG5lc3RpbmcgbGlzdHMuXG5cbnVsIHtcblx0bGlzdC1zdHlsZS10eXBlOiBzcXVhcmU7XG5cdG1hcmdpbi1sZWZ0OiBtYXAtZmV0Y2goJGxpc3QtaW5zZXQsIG1hcmdpbik7XG5cdHBhZGRpbmctbGVmdDogbWFwLWZldGNoKCRsaXN0LWluc2V0LCBwYWRkaW5nKTtcbn1cblxub2wge1xuXHRsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7XG59XG5cbmxpIHtcblx0bWFyZ2luLWJvdHRvbTogMDtcblxuXHQ+IHVsLFxuXHQ+IG9sIHtcblx0XHRtYXJnaW4tYm90dG9tOiAwOyAvLyAxLlxuXHR9XG59XG5cblxuLy8gTGlzdCBvYmplY3Q6IGRlZmF1bHRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBsaXN0KCkge1xuXHRtYXJnaW4tbGVmdDogbWFwLWZldGNoKCRsaXN0LWluc2V0LCBtYXJnaW4pO1xuXHRwYWRkaW5nLWxlZnQ6IG1hcC1mZXRjaCgkbGlzdC1pbnNldCwgcGFkZGluZyk7XG59XG5cbi5vLWxpc3QgeyBAaW5jbHVkZSBsaXN0KCk7IH1cblxuXG4vLyBDbGVhbiBsaXN0IG9iamVjdDogcmVtb3ZlIGFsbCBkZWZhdWx0IHNwYWNpbmdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBsaXN0Q2xlYW4oKSB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcblx0bWFyZ2luLWxlZnQ6IDA7XG5cdHBhZGRpbmctbGVmdDogMDtcbn1cblxuLm8tbGlzdENsZWFuIHsgQGluY2x1ZGUgbGlzdENsZWFuKCk7IH1cblxuXG4vLyBJbmxpbmUgbGlzdCBvYmplY3Q6XG4vLyBBcHBseSB0byB0aGUgdWwvb2wgdGFnLCBidXQgaXQncyBzZXR1cCBmb3IgdXNlIG9uIGFueSBkaXYuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gbGlzdElubGluZSgpIHtcblx0QGluY2x1ZGUgbGlzdENsZWFuKCk7XG5cblx0bGksXG5cdGRpdiB7XG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdCY6bm90KDpsYXN0LWNoaWxkKSB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IHNwYWNlKDAuMjUpO1xuXHRcdH1cblx0fVxufVxuXG4uby1saXN0SW5saW5lIHsgQGluY2x1ZGUgbGlzdElubGluZSgpOyB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgT0JKRUNUOiBMSU5LU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBUaGVtZTogbGlua1xuXG5hIHtcblx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcblx0Ly9ib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMC4yICk7XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcblx0XHQvL2JvcmRlci1jb2xvcjogcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMSApO1xuXHR9XG59XG5cbnAgYSxcbmxpIGEge1xuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHQvLyBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0fVxufVxuXG5cbi8vIE9iamVjdDogYnVyaWVkIGFuY2hvcnNcbi8vIFNhbWUgcGF0dGVybiBhcyBTdWl0J3MgdS1saW5rQ29tcGxleCwgYnV0IGRpZmZlcmVudCBzdHlsaW5nLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGNvbXBsZXhMaW5rIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdC5vLWxpbmtCdXJpZWRUYXJnZXQge1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdFx0fVxuXHR9XG59XG5cbi5vLWxpbmtCdXJpZWQge1xuXHRAaW5jbHVkZSBjb21wbGV4TGluaygpO1xuXHRtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjUpO1xufVxuXG4vLyBEb24ndCBmb3JnZXQ6IHRoaXMgaXMgYSBzcGFuLCBub3QgYW4gPGE+LFxuLy8gc28gaXQgbmVlZHMgdGhlc2Ugc3R5bGVzLlxuLm8tbGlua0J1cmllZFRhcmdldCB7XG5cdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG5cdGNvbG9yOiBwYWxldHRlKHRleHQpO1xufVxuXG5cbi8vIENvbXBvbmVudDogY29udHJvbCB1bmRlcmxpbmVzIHdpdGggbGluZWFyLWdyYWRpZW50XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kbGlua1J1bGVCbGFjazogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGRhcmspLDApIDUwJSwgIHJnYmEocGFsZXR0ZShkYXJrKSwwLjQpIDUwJSk7XG4kbGlua1J1bGVUZXh0OiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKHBhbGV0dGUodGV4dCksMCkgNTAlLCAgcmdiYShwYWxldHRlKHRleHQpLDAuNykgNTAlKTtcbiRsaW5rUnVsZUdyZXk6ICBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKHBhbGV0dGUobXV0ZWQpLDApIDUwJSwgcGFsZXR0ZShtdXRlZCkgNTAlKTtcbiRsaW5rUnVsZUxpdGU6ICBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKHBhbGV0dGUobGlnaHQpLDApIDUwJSwgcGFsZXR0ZShsaWdodCkgNTAlKTtcbiRsaW5rUnVsZVdoaXRlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKHBhbGV0dGUod2hpdGUpLDApIDUwJSwgcGFsZXR0ZSh3aGl0ZSkgNTAlKTtcbiRsaW5rUnVsZUJyYW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKHBhbGV0dGUoYnJhbmQpLDApIDUwJSwgcGFsZXR0ZShicmFuZCkgNTAlKTtcbiRsaW5rUnVsZU5vbmU6ICBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKHBhbGV0dGUoZGFyayksMCkgNTAlLCAgcmdiYShwYWxldHRlKGRhcmspLDApIDUwJSk7XG5cbkBtaXhpbiB1bmRlcmxpbmVMaW5rKFxuXHQkbWl4aW4tcnVsZTogJGxpbmtSdWxlQmxhY2ssXG5cdCRtaXhpbi1ob3Zlci1ydWxlOiBub25lLFxuXHQkbWl4aW4tY29sb3I6IGN1cnJlbnRDb2xvcixcblx0JG1peGluLWhvdmVyLWNvbG9yOiBpbmhlcml0LFxuXHQvLyAkbWl4aW4taG92ZXItY29sb3I6IGN1cnJlbnRDb2xvcixcblx0JG1peGluLWludmVyc2U6IGZhbHNlXG5cbikge1xuXG5cdEBpZiAkbWl4aW4tcnVsZSA9PSAnbm9uZScge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG5cdFx0cGFkZGluZy1ib3R0b206IDA7XG5cdH1cblxuXHRAZWxzZSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogJG1peGluLXJ1bGU7XG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuXHRcdGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG5cdFx0Y29sb3I6ICRtaXhpbi1jb2xvcjtcblx0XHRwYWRkaW5nLWJvdHRvbTogMDtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiAkbWl4aW4taG92ZXItcnVsZTtcblx0XHRjb2xvcjogJG1peGluLWhvdmVyLWNvbG9yO1xuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0fVxufVxuXG4vLy5vLWxpbmsgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCk7IH1cbi8vLm8tY2hpbGRMaW5rIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoKTsgfSB9XG4vL1xuLy8uby1saW5rVGV4dCB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZVRleHQpOyB9XG4vLy5vLWNoaWxkTGlua1RleHQgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlVGV4dCk7IH0gfVxuLy9cbi8vLm8tbGlua0dyZXkgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVHcmV5KTsgfVxuLy8uby1jaGlsZExpbmtHcmV5IHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUdyZXkpOyB9IH1cbi8vXG4vLy5vLWxpbmtMaXRlIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlTGl0ZSk7IH1cbi8vLm8tY2hpbGRMaW5rTGl0ZSB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVMaXRlKTsgfSB9XG4vL1xuLy8uby1saW5rQnJhbmQgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVCcmFuZCk7IH1cbi8vLm8tY2hpbGRMaW5rQnJhbmQgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlQnJhbmQpOyB9IH1cbi8vXG4vLy5vLWxpbmtXaGl0ZSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZVdoaXRlKTsgfVxuLy8uby1jaGlsZExpbmtXaGl0ZSB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVXaGl0ZSk7IH0gfVxuLy9cbi8vLm8tbGlua0ludmlzaWJsZSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsobm9uZSk7IH1cbi8vLm8tY2hpbGRMaW5rSW52aXNpYmxlIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsobm9uZSk7IH0gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDT01QT05FTlQ6IENPVkVSIElNQUdFXG4vLyBAVVJMOiBodHRwOi8vbmljb2xhc2dhbGxhZ2hlci5jb20vZmxleGlibGUtY3NzLWNvdmVyLWltYWdlcy9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gMS4gVG8gZW5hYmxlIHVzZSB3LyAnLkZsZXhFbWJlZCdcbkBtaXhpbiBjb3ZlckltYWdlKCRkYXJrSW5zaWRlOiBmYWxzZSkge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbjtcblx0YmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcblx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcblx0YmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogMTAwJTsgLy8gMS5cblx0Ly8gbWF4LWhlaWdodDogcmVtKDYwMCk7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHQvLyBwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXG5cdEBpZiAkZGFya0luc2lkZSB7XG5cdFx0JjpiZWZvcmUge1xuXHRcdFx0QGluY2x1ZGUgby1wb3NGdWxsU2NyZWVuKGFic29sdXRlKTtcblx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAxICkgMCUsIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAwLjIgKSAxMDAlKTtcblx0XHRcdGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG5cdFx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHQvLyB6LWluZGV4OiAtMTtcblx0XHR9XG5cblx0fSBAZWxzZSB7XG5cdFx0Y29udGVudDogbm9uZTtcblx0fVxuXG5cdC8vIGluIGNhc2UgdGhlIC5vLWNvdmVySW1hZ2UgaXMgaXRzZWxmIGEgbGlua1xuXHQmI3thfSB7XG5cdFx0Ly8gQGluY2x1ZGUgdS1saW5rKG5vbmUpO1xuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXG5cdH1cbn1cblxuLm8tY292ZXJJbWFnZSB7XG5cdEBpbmNsdWRlIGNvdmVySW1hZ2UoKTtcbn1cblxuLm8tY292ZXJJbWFnZS0tZGFyayB7XG5cdEBpbmNsdWRlIGNvdmVySW1hZ2UodHJ1ZSk7XG59XG5cbi5vLWNvdmVySW1hZ2UtLWJsZW5kcyB7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuXHQgICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAwO1xuXHR9XG59XG5cbi5vLWNvbnRhaW5JbWFnZSB7XG5cdEBpbmNsdWRlIGNvdmVySW1hZ2UoKTtcblx0YmFja2dyb3VuZC1zaXplOiBjb250YWluO1xufVxuIiwiXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gT0JKRUNUOiBPQkpFQ1QtRklUIElNQUdFXG4vLyBAVVJMOiBodHRwOi8vY29kZXBlbi5pby9yb2JpbnJlbmRsZS9wZW4vQnl3TlZYP2VkaXRvcnM9MDEwMFxuLy8gUmVxcyBJRS9FZGdlIGZhbGxiYWNr4oCmXG4vLyBAVVJMOiBodHRwczovL21lZGl1bS5jb20vQHByaW1vemNpZ2xlci9uZWF0LXRyaWNrLWZvci1jc3Mtb2JqZWN0LWZpdC1mYWxsYmFjay1vbi1lZGdlLWFuZC1vdGhlci1icm93c2Vycy1hZmJjNTNiYmIyYzMjLmJzODA5anI4Z1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQVBJXG4vLy5vYmplY3QtZml0X2ZpbGwgeyBvYmplY3QtZml0OiBmaWxsIH1cbi8vLm9iamVjdC1maXRfY29udGFpbiB7IG9iamVjdC1maXQ6IGNvbnRhaW4gfVxuLy8ub2JqZWN0LWZpdF9jb3ZlciB7IG9iamVjdC1maXQ6IGNvdmVyIH1cbi8vLm9iamVjdC1maXRfbm9uZSB7IG9iamVjdC1maXQ6IG5vbmUgfVxuLy8ub2JqZWN0LWZpdF9zY2FsZS1kb3duIHsgb2JqZWN0LWZpdDogc2NhbGUtZG93biB9XG5cbkBtaXhpbiBPYmplY3RGaXQoXG4gICAgJE1peGluRml0OiBjb3ZlclxuKSB7XG5cdC8vQGluY2x1ZGUgYmFzZVRyYW5zaXRpb247XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9iamVjdC1maXQ6ICRNaXhpbkZpdDtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLm8tZml0SW1hZ2VDb3ZlciB7IEBpbmNsdWRlIE9iamVjdEZpdCgpOyB9XG5cbi8vIEZvciB1c2Ugd2l0aCBGbGV4RW1iZWRcbi5GbGV4RW1iZWQtZml0SW1hZ2UgeyBAaW5jbHVkZSBPYmplY3RGaXQoKTsgfVxuXG4vLyBUbyBkYXJrZW4gbGlrZSAnQ292ZXJJbWFnZS0tZGFyaydcbi5GbGV4RW1iZWQtY29udGVudC0tZGFyayB7XG4gICAgJjpiZWZvcmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMSApIDAlLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4yICkgMTAwJSk7XG4gICAgICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG4gICAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgLy8gei1pbmRleDogLTE7XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFRFWFQgVFlQT0dSQVBIWVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBDb21tb24gdGhlbWXigKZcblxuQG1peGluIHRleHRUZW1wbGF0ZShcblx0JG1peGluU2l6ZTogdGV4dCxcblx0JG1peGluQ29sb3I6IHBhbGV0dGUodGV4dCksXG5cdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtYm9vayxcblx0JG1peGluTGV0dGVyU3BhY2luZzogMCxcblx0JG1peGluTGluZUhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQtdW5pdFxuKSB7XG5cblx0Ly8gc3RhbmRhcmRzXG5cdGNvbG9yOiAkbWl4aW5Db2xvcjtcblx0Zm9udC1mYW1pbHk6ICRtaXhpbkZvbnQ7XG5cdGxldHRlci1zcGFjaW5nOiAkbWl4aW5MZXR0ZXJTcGFjaW5nO1xuXHRsaW5lLWhlaWdodDogJG1peGluTGluZUhlaWdodDtcblxuXHQvLyBzaXplc1xuXHRmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHNtKTtcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHJnKTsgfVxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgbGcpOyB9XG5cblx0Ly8gY2hpbGRyZW5cblx0PiBsaSxcblx0PiBsaSBhLFxuXHQ+IGEge1xuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdFx0Zm9udC1zaXplOiBpbmhlcml0O1xuXHRcdG1hcmdpbjogMDtcblx0fVxufVxuXG5cbi8vIFRleHQgY29tcG9uZW50cyBieSBzaXpl4oCmXG5cbkBtaXhpbiB0ZXh0UmcoKSB7XG5cdEBpbmNsdWRlIHRleHRUZW1wbGF0ZShcbiAgICApO1xufVxuXG5AbWl4aW4gdGV4dFNtKCkge1xuXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG5cdFx0JG1peGluU2l6ZTogdGV4dC0tc20sXG5cdFx0JG1peGluTGV0dGVyU3BhY2luZzogMC4wMmVtLFxuICAgICAgICAkbWl4aW5MaW5lSGVpZ2h0OiAxLjYgXG5cdCk7XG59XG5cbkBtaXhpbiB0ZXh0TGcoKSB7XG5cdEBpbmNsdWRlIHRleHRUZW1wbGF0ZShcblx0XHQkbWl4aW5TaXplOiB0ZXh0LS1sZyxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wMDVlbSxcbiAgICAgICAgJG1peGluTGluZUhlaWdodDogMS40XG5cdCk7XG59XG5cblxuXG4vLyBDb21wb25lbnQ6IFRleHRcbi8vIEluaXRpYXRlIG1peGlucyBpbiBjbGFzc2VzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtdGV4dC0tc20gICAgICAgeyBAaW5jbHVkZSB0ZXh0U20oKTsgfVxuLmMtdGV4dCAgICAgICAgICAgeyBAaW5jbHVkZSB0ZXh0UmcoKTsgfVxuLmMtdGV4dC0tbWVkaXVtICAgeyBAaW5jbHVkZSB0ZXh0UmcoKTsgY29sb3I6IHBhbGV0dGUobWVkaXVtKTsgfVxuLmMtdGV4dC0taW50cm8gICAgeyBAaW5jbHVkZSB0ZXh0UmcoKTsgY29sb3I6IHBhbGV0dGUobWVkaXVtKTsgbWFyZ2luLWJvdHRvbTogc3BhY2UoMC41KTsgfVxuLmMtdGV4dC0tbGcgICAgICAgeyBAaW5jbHVkZSB0ZXh0TGcoKTsgbWFyZ2luLWJvdHRvbTogMDsgPiBzdHJvbmcgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1leHRyYWJvbGQ7IHRleHQtdHJhbnNmb3JtOiBpbml0aWFsOyB9IH1cblxuXG4uYy10ZXh0LS1tZXRhIHtcblx0QGluY2x1ZGUgdGV4dFNtKCk7XG5cdGNvbG9yOiBwYWxldHRlKG1lZGl1bSkgIWltcG9ydGFudDtcblx0Ly8gdGV4dC1hbGlnbjogY2VudGVyO1xuXG5cdD4gYSB7XG5cdFx0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuXG5cdFx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0XHRib3JkZXItY29sb3I6IHBhbGV0dGUobWVkaXVtKSAhaW1wb3J0YW50O1xuXHRcdH1cblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRtYXJnaW46IGF1dG87XG5cdFx0Ly8gd2lkdGg6IDcwJTtcblx0fVxufVxuXG4uYy1jaXRlIHtcbiAgICBAaW5jbHVkZSB0ZXh0UmcoKTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1zZW1pYm9sZDtcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMTJlbTtcbiAgICBtYXJnaW4tdG9wOiBzcGFjZSgwLjUpO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICBhIHtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7XG4gICAgfVxufVxuXG5cbi8vIEZhc3QgcHJvamVjdCBoYWNrc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtdGV4dC0tbGcgPiBzdHJvbmcge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xufVxuXG5hID4gc3Ryb25nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cblxuXG5cbi8vIENvbXBvbmVudDogVGV4dCBibG9ja3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXRleHQtYmxvY2sgeyA+ICogeyBAaW5jbHVkZSB0ZXh0UmcoKTsgfSB9XG5cbi5jLXRleHQtYmxvY2stLWZvb3RlciB7XG5cdEBpbmNsdWRlIGxpc3RDbGVhbigpO1xuXHRtYXJnaW46IDA7XG5cblx0Jjo6YmVmb3JlIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJhY2tncm91bmQpLCAwLjIpO1xuXHRcdGNvbnRlbnQ6IFwiIFwiO1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGhlaWdodDogMXB4O1xuXHRcdG1hcmdpbjogc3BhY2UoMSkgMCBzcGFjZSgxLjE1KTtcblx0XHR3aWR0aDogMi41JTtcblx0fVxuXG5cdD4gKiB7XG5cdFx0QGluY2x1ZGUgdGV4dFJnKCk7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0fVxufVxuXG5cblxuXG4vLyBDb21wb25lbnQ6IGxpc3Rcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vbGlzdCBjZWxsIG9mIGZpeGVkIHdpZHRoLCBsaWtlIGEgdGFiYmVkIGluZm8gZWxlbWVudFxuLmMtbGlzdC0taXRlbVRhZyB7XG5cdEBpbmNsdWRlIHRleHRTbSgpO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdHdpZHRoOiBzcGFjZSgwLjc1KTtcbn1cblxuLmMtbGlzdC0tbWV0YSB7XG5cdEBpbmNsdWRlIHRleHRTbSgpO1xuXHRAaW5jbHVkZSBsaXN0Q2xlYW4oKTtcblx0Y29sb3I6IHBhbGV0dGUobWVkaXVtKTtcblx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMS4yNSk7XG59XG5cbi5jLWxpc3QtLW1ldGEtdGl0bGUge1xuXHRjb2xvcjogcGFsZXR0ZSh0ZXh0KSAhaW1wb3J0YW50O1xuXHRtYXJnaW46IHNwYWNlKDEuMjUpIDAgc3BhY2UoMC42MjUpICFpbXBvcnRhbnQ7XG5cblx0JjpmaXJzdC1jaGlsZCB7XG5cdFx0bWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuXHR9XG59XG5cblxuXG4vLyBVdGlsaXR5OiBIVE1MIGVsZW1lbnRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuLy8gYmxvY2txdW90ZSwgZmlndXJlXG4vLyBsaVxudWwsIG9sLCBkbCxcbnAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZpZWxkc2V0LCBmaWdjYXB0aW9uLFxucHJlLCBhIHtcblx0QGluY2x1ZGUgdGV4dFJnKCk7XG59XG5cbmVtLFxuLnUtdGV4dEVtIHtcblx0QGluY2x1ZGUgdHlwZVJlc2V0KCk7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQtaTtcbn1cblxuYixcbnN0cm9uZyxcbi51LXRleHRCb2xkIHtcblx0QGluY2x1ZGUgdHlwZVJlc2V0KCk7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG59XG5cbmJsb2NrcXVvdGUsXG4uQmxvY2txdW90ZSB7XG5cdC8vIGlzIHRoaXMgcmVxJ2Q/XG5cdC8vIEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuXHRjb2xvcjogcGFsZXR0ZShtZWRpdW0pO1xuXHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib29rO1xuXHRmb250LXNpemU6IGZvbnRzaXplKHRleHQsIHhzKTtcblx0bWFyZ2luLWJvdHRvbTogJHBhcmFncmFwaFNwYWNlO1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRmb250LXNpemU6IGZvbnRzaXplKHRleHQsIHNtKTtcblx0XHQvL21hcmdpbi1ib3R0b206IHNwYWNlKDEpO1xuXHR9XG59XG5cbi8vIC5MZWRlIHtcbi8vIFx0QGluY2x1ZGUgdGV4dFJnKCk7XG4vLyBcdGNvbG9yOiBjb2xvcih0ZXh0LCBicmFuZCkgIWltcG9ydGFudDtcbi8vIFx0Zm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhcjtcbi8vIFx0Zm9udC1zaXplOiBmb250c2l6ZShoZWFkbGluZSwgeHMpO1xuLy8gXHRsaW5lLWhlaWdodDogMS40NTtcbi8vIFx0Ly8gbWFyZ2luLWJvdHRvbTogc3BhY2UoMSk7XG4vL1xuLy8gXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4vLyBcdFx0Zm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbi8vIFx0XHRmb250LXNpemU6IGZvbnRzaXplKGhlYWRsaW5lLCBiYXNlKTtcbi8vIFx0XHRsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQtdW5pdDtcbi8vIFx0fVxuLy8gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEhFQURMSU5FIFRZUE9HUkFQSFlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQ29tbW9uIHRoZW1l4oCmXG5cbkBtaXhpbiBoZWFkbGluZVRlbXBsYXRlKFxuXHQkbWl4aW5TaXplOiBoZWFkbGluZSxcblx0JG1peGluQ29sb3I6IHBhbGV0dGUodGV4dCksXG5cdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtYm9vayxcblx0JG1peGluTGV0dGVyU3BhY2luZzogLTAuMDE1ZW0sXG5cdCRtaXhpbkxpbmVIZWlnaHQ6IDEuMyxcblx0JG1peGluTWFyZ2luQm90dG9tOiAkYmxvY2tTcGFjZSAqIDEvM1xuKSB7XG5cblx0Ly8gc3RhbmRhcmRzXG5cdGNvbG9yOiAkbWl4aW5Db2xvcjtcblx0Zm9udC1mYW1pbHk6ICRtaXhpbkZvbnQ7XG5cdGxldHRlci1zcGFjaW5nOiAkbWl4aW5MZXR0ZXJTcGFjaW5nO1xuXHRsaW5lLWhlaWdodDogJG1peGluTGluZUhlaWdodDtcblx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdG1hcmdpbi1yaWdodDogYXV0bztcblx0bWFyZ2luLWJvdHRvbTogJG1peGluTWFyZ2luQm90dG9tO1xuXHR0ZXh0LWFsaWduOiBsZWZ0O1xuXG5cdC8vIHNpemVzXG5cdGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgeHMpO1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgcmcpOyB9XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCBsZyk7IH1cblxuXHQvLyBjaGlsZHJlblxuXHQ+IGxpLFxuXHQ+IGxpIGEsXG5cdD4gYSB7XG5cdFx0Ym9yZGVyLWJvdHRvbTogMDtcblx0XHRjb2xvcjogY3VycmVudENvbG9yO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdGZvbnQtc2l6ZTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdH1cbn1cblxuXG4vLyBDb21wb25lbnQgYnkgc2l6ZeKAplxuXG5AbWl4aW4gZGlzcGxheSgpIHtcbiAgICBAaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuICAgICRtaXhpbkxldHRlclNwYWNpbmc6IC0wLjAwNWVtLFxuICAgICRtaXhpbkxpbmVIZWlnaHQ6IDEuMSxcbiAgICAkbWl4aW5TaXplOiBkaXNwbGF5XG4gICAgKTtcblxuICAgIEBpbmNsdWRlIHdoZW4taW5zaWRlKFwiLkZvb3RlclwiKSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IHNwYWNlKDEuMjUpO1xuICAgIH1cbn1cblxuQG1peGluIGhlYWRsaW5lKCkge1xuXHRAaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuXHRcdCRtaXhpblNpemU6IHRleHQtLWxnXG5cdCk7XG59XG5cbkBtaXhpbiBoZWFkbGluZVNtKCkge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG4gICAgLy8kbWl4aW5TaXplOiBoZWFkbGluZS0tc20sXG4gICAgJG1peGluU2l6ZTogdGV4dC0tbGcsXG4gICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wMTJlbVxuICAgICk7XG59XG5cbkBtaXhpbiBoZWFkbGluZVhzKCkge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG4gICAgJG1peGluU2l6ZTogaGVhZGxpbmUtLXhzLFxuICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDEyZW1cbiAgICApO1xufVxuXG5cblxuXG4vLyBDb21wb25lbnQ6IGhlYWRsaW5lXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy1kaXNwbGF5ICAgICAgICAgIHsgQGluY2x1ZGUgZGlzcGxheSgpOyB9XG4vLy5jLWhlYWRsaW5lICAgICAgICAgeyBAaW5jbHVkZSBoZWFkbGluZSgpOyBmb250LWZhbWlseTogJ2p1cGl0ZXInOyB9XG4uYy1oZWFkbGluZSAgICAgICAgIHsgQGluY2x1ZGUgaGVhZGxpbmUoKTsgfVxuLmMtaGVhZGxpbmUtLXNtICAgICB7IEBpbmNsdWRlIGhlYWRsaW5lU20oKTsgfVxuLmMtaGVhZGxpbmUtLXNtU2VtaSB7IEBpbmNsdWRlIGhlYWRsaW5lU20oKTsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtc2VtaWJvbGQ7IH1cbi5jLWhlYWRsaW5lLS14cyAgICAgeyBAaW5jbHVkZSBoZWFkbGluZVhzKCk7IH1cbi5jLWhlYWRsaW5lLS14c1NlbWkgeyBAaW5jbHVkZSBoZWFkbGluZVhzKCk7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXNlbWlib2xkOyB9XG5cbi5jLWhlYWRsaW5lIGVtIHtcblx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuXG4vLyBDb21wb25lbnQ6IGhlYWRsaW5lIGJsb2Nrcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIC5IZWFkbGluZS1ibG9jayB7ID4gKiB7IEBpbmNsdWRlIGhlYWRsaW5lKCk7IH0gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFRZUEUgTUlYSU4gSEVMUEVSU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBVdGlsaXR5OiBSZXNwb25zaXZlIGxpbmUgYnJlYWtcbi8vIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vaW5qZWN0aW5nLWxpbmUtYnJlYWsvXG4vLyAxLiBlbXVsYXRlcyB0ZXh0LWFsaWduOiBjZW50ZXJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihsZykge1xuICAgIHNwYW4udS1sZy1saW5lQnJlYWsge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW46IGF1dG87IC8vIDEuXG4gICAgfVxufVxuXG5AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICBzcGFuLnUtc20tbGluZUJyZWFrIHtcbiAgICAgICAgZGlzcGxheTogdGFibGUgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luOiBhdXRvOyAvLyAxLlxuICAgIH1cbn1cblxuXG5cbi8vIFV0aWxpdHk6IHdlaWdodHMgJiBpdGFsaWNzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4udS10ZXh0V3RMdCAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1saWdodCAhaW1wb3J0YW50OyB9XG4udS10ZXh0V3RSZyAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1yZWd1bGFyICFpbXBvcnRhbnQ7IH1cbi51LXRleHRXdE1kICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LW1lZGl1bSAhaW1wb3J0YW50OyB9XG4udS10ZXh0V3RTZW1pICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1zZW1pYm9sZCAhaW1wb3J0YW50OyB9XG5cbi8vLnUtdGV4dEVtUmcgICAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhci1pICFpbXBvcnRhbnQ7IH1cbi8vLnUtdGV4dEVtTWQgICAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtbWVkaXVtLWkgIWltcG9ydGFudDsgfVxuXG5cblxuXG4vLyBUZXh0IHNpemVz4oCmXG4vLyBNYXAga2V5IG11c3QgZXF1YWwgY2xhc3MgbmFtZS5cbi8vIFRPRE8gMTYwNjMwOiBpZiBubyBvdGhlciBicmVha3BvaW50cywgbnVsbC5cblxuQG1peGluIHRleHRTaXplKFxuXHQkbWl4aW5TaXplOiBUZXh0XG4pIHtcblx0Zm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCB4cyk7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCBzbSk7IH1cbn1cblxuXG4vLyBUZXh0IGJsb2NrIG1peGluc+KAplxuXG5AbWl4aW4gcmV2ZXJzZVRleHRCbG9jayB7XG5cdGgxLFxuXHRwLFxuXHR1bCB7XG5cdFx0Y29sb3I6IHBhbGV0dGUobGlnaHQpICFpbXBvcnRhbnQ7XG5cdH1cbn1cblxuLy8uYy10ZXh0LWJsb2NrLS1yZXZlcnNlIHsgQGluY2x1ZGUgcmV2ZXJzZVRleHRCbG9jaygpOyB9XG5cbkBtaXhpbiBjZW50ZXJUZXh0QmxvY2sge1xuXHRoMSxcblx0cCxcblx0dWwge1xuXHRcdHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuXHR9XG59XG5cbi8vLmMtdGV4dC1ibG9jay0tY2VudGVyIHsgQGluY2x1ZGUgY2VudGVyVGV4dEJsb2NrKCk7IH1cblxuQG1peGluIGhlYWRlclRleHRCbG9jayB7XG5cdGgxIHsgbWFyZ2luLWJvdHRvbTogc3BhY2UoMC4yKTsgfVxuXHRwICB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDAuMzUpOyB9XG59XG5cbi8vLmMtdGV4dC1ibG9jay0taGVhZGVyIHsgQGluY2x1ZGUgaGVhZGVyVGV4dEJsb2NrKCk7IH1cblxuXG4vLyBCYXNlIHNwYWNlciBydWxlcz9cbi8vIHAgKyBoMiB7IG1hcmdpbi10b3A6ICRzcGFjZSAqIDEuNzU7IH1cblxuLnUtcFNwYWNlIHtcbiAgICAvL21hcmdpbi10b3A6XG59XG5cbi8vcCArIGNpdGUgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfVxuaDIgKyBoMyAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjIpOyB9XG5oMyArIHAgICB7IG1hcmdpbi10b3A6IHNwYWNlKDAuNCk7IH1cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBBdHRlbXB0cyBhdCBAZWFjaCBsb29wcyBvbiBzYXNzIG1hcHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIExvb3AgdGhydSBzaXplc+KAplxuXG4vLyBAZWFjaCAkYnJlYWtwb2ludCBpbiBtYXAta2V5cygkZ3JpZC1icmVha3BvaW50cykge1xuLy8gXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4vLyBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dExlZnQgICAgICAgICAgICAgeyB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7IH1cbi8vIEBlYWNoICR0aGVtZSBpbiBtYXAta2V5cyggbWFwLWdldCgkY29uZmlnLCBcInRoZW1lc1wiKSApIHtcblxuLy8gdGhpcyBkaWRuJ3Qgd29ya1xuXG4vLyBAZWFjaCAkaW5jcmVtZW50IGluIG1hcC1rZXlzKCRmb250c2l6ZSkge1xuLy9cbi8vIFx0LiN7JGluY3JlbWVudH0ge1xuLy9cbi8vIFx0XHRAZWFjaCAkcmVzcG9uc2UgaW4gbWFwLXZhbHVlcyggbWFwLWdldCgkZm9udHNpemUsICRpbmNyZW1lbnQpICkge1xuLy9cbi8vIFx0XHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJHJlc3BvbnNlKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJGluY3JlbWVudCwgJHJlc3BvbnNlKTsgfVxuLy8gXHRcdFx0Ly8gZm9udC1zaXplOiBmb250c2l6ZSgkaW5jcmVtZW50LCAkcmVzcG9uc2UpO1xuLy8gXHRcdFx0Ly8gQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkgeyBmb250LXNpemU6IGZvbnRzaXplKCRpbmNyZW1lbnQsIG1kKTsgfVxuLy9cbi8vIFx0XHR9XG4vLyBcdH1cbi8vXG4vLyB9XG5cblxuLy8gTG9vcCB0aHJ1IHNpemVz4oCmIEJ1dCBJIG5lZWQgbWl4aW5zIGZpcnN0LCBub3QgY2xhc3Nlc+KAplxuXG4vLyBAZWFjaCAkc2l6ZSBpbiBtYXAta2V5cygkZm9udHNpemUpIHtcbi8vXG4vLyBcdC4jeyRzaXplfSB7XG4vLyBcdFx0Zm9udC1zaXplOiBtYXAtZmV0Y2goJGZvbnRzaXplLCAkc2l6ZSwgeHMpO1xuLy8gXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBtYXAtZmV0Y2goJGZvbnRzaXplLCAkc2l6ZSwgc20pOyB9XG4vLyBcdH1cbi8vXG4vLyB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgTEFZT1VUOiBCT0RZXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbmh0bWwge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCk7XG59XG5cbi5jLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYmFja2dyb3VuZCk7XG4gICAgcGFkZGluZzogJGJsb2NrU3BhY2UgMDtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBIRUFERVIgTEFZT1VUXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5jLWhlYWRlciB7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGZhaW50KTtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCk7XG4gICAgcGFkZGluZzogJGJsb2NrU3BhY2UgKiAwLjUgMDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYy1oZWFkZXItdGV4dCB7XG4gICAgLy9AaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuXHQvL1x0JG1peGluQ29sb3I6IHBhbGV0dGUodGV4dCksXG4gICAgLy9cdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtYm9vayxcblx0Ly9cdCRtaXhpblNpemU6IHRleHQtLWxnLFxuXHQvL1x0JG1peGluTWFyZ2luQm90dG9tOiAwXG5cdC8vKTtcblxuICAgIEBpbmNsdWRlIHRleHRUZW1wbGF0ZShcbiAgICAgICAgJG1peGluRm9udDogJGZvbnQtdGV4dC1ib29rLFxuICAgICAgICAkbWl4aW5TaXplOiB0ZXh0LS1wbHVzXG4gICAgKTtcblxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJyonO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1saWdodDtcbiAgICAgICAgZm9udC1zaXplOiAxOTAlO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IC02LjUlO1xuICAgICAgICB0b3A6IC02LjI1JTtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgICAgICBsZWZ0OiAtMy43NSU7XG4gICAgICAgICAgICB0b3A6IC0xMyU7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgICAgICAgICBsZWZ0OiAtNC41JTtcbiAgICAgICAgICAgIHRvcDogLTE1JTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGEge1xuICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVUZXh0KTtcbiAgICB9XG59XG5cblxuXG5cblxuXG5cbi8vLmMtc2VjdGlvbiB7XG4vLyAgICBwYWRkaW5nOiAkYmxvY2tTcGFjZSAwO1xuLy99XG4vL1xuLy8uYy1ibG9jayB7XG4vLyAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZTtcbi8vICAgICY6Zmlyc3Qtb2YtdHlwZSB7IG1hcmdpbjogMDsgfVxuLy9cbi8vfVxuLy9cbi8vLmMtYmxvY2stY2VsbCB7XG4vLyAgICBkaXNwbGF5OiBibG9jaztcbi8vfVxuLy9cbi8vLmMtYmxvY2stY2VsbCBwIHtcbi8vICAgIG1hcmdpbjogc3BhY2UoMSkgMCAwO1xuLy8gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuLy99XG4vL1xuLy8uYy1sb2dvIHtcbi8vICAgIHdpZHRoOiA5MHB4O1xuLy8gICAgbWFyZ2luLWJvdHRvbTogc3BhY2UoMC43NSk7XG4vL1xuLy8gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuLy8gICAgICAgIHdpZHRoOiAxMzBweDtcbi8vICAgIH1cbi8vfVxuLy9cbi8vLmMtZm9vdGVyIHtcbi8vICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlIDAgJGJsb2NrU3BhY2UgLyAyO1xuLy8gICAgLy9wYWRkaW5nOiAwIDAgJGJsb2NrU3BhY2UgLyAyO1xuLy99XG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vLy8gcXVpY2sgc3BhY2Vyc1xuLy9cbi8vLnUtc3BhY2VURDIgICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjUpOyB9XG4vLy51LXNwYWNlVCAgICAgIHsgbWFyZ2luLXRvcDogc3BhY2UoMSk7IH1cbi8vLnUtc3BhY2VUMiAgICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgyKTsgfVxuLy8udS1zcGFjZUIgICAgICB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDEpOyB9XG4vLy51LXNwYWNlQjIgICAgIHsgbWFyZ2luLWJvdHRvbTogc3BhY2UoMik7IH1cbi8vXG4vLy51LXNtLXNwYWNlVCAgIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7IG1hcmdpbi10b3A6IHNwYWNlKDEpOyB9IH1cbi8vLnUtc20tc3BhY2VUMiAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgbWFyZ2luLXRvcDogc3BhY2UoMik7IH0gfVxuLy8udS1zbS1zcGFjZVREMiB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjUpOyB9IH1cbi8vXG4vLy51LWxnLXNwYWNlVCAgIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKGxnKSB7IG1hcmdpbi10b3A6IHNwYWNlKDEpOyB9IH1cbi8vLnUtbGctc3BhY2VURDIgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24obGcpIHsgbWFyZ2luLXRvcDogc3BhY2UoMC41KTsgfSB9XG4vL1xuLy8udS14bC1zcGFjZVQgICB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bih4bCkgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfSB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQ09NUE9ORU5UOiBCTE9HIFBPU1RTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFBvc3QgYmxvY2sgaW4gYSBsaXN0LlxuLy8gV2hlbiBhIHBvc3QgaXMgYWxzbyBhIGxpbmsuXG4vLyBUaGVzZSBhcmUgdmVydGljYWxseSAmIGhvcml6b250YWxseSBjZW50ZXJlZC5cbi8vIFNlZTogaHR0cHM6Ly9waGlsaXB3YWx0b24uZ2l0aHViLmlvL3NvbHZlZC1ieS1mbGV4Ym94L2RlbW9zL3ZlcnRpY2FsLWNlbnRlcmluZy9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5Qb3N0ICsgLlBvc3Qge1xuICAgIG1hcmdpbi10b3A6ICRibG9ja1NwYWNlO1xufVxuXG4vLyBtYXJrZG93biBzY29wZVxuLlBvc3QtY29udGVudCB7XG4gICAgYSB7XG4gICAgICAgIEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZVRleHQpO1xuICAgIH1cblxuICAgIGZpZ3VyZSB7XG4gICAgICAgIG1hcmdpbjogKCRwYXJhZ3JhcGhTcGFjZSAqIDEuMjUpIDAgKCRwYXJhZ3JhcGhTcGFjZSAqIDEuNSk7XG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgbWFyZ2luOiAkcGFyYWdyYXBoU3BhY2UgKiAxLjI1OyB9XG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHsgbWFyZ2luOiAkcGFyYWdyYXBoU3BhY2UgKiAxLjc1OyB9XG4gICAgfVxuXG4gICAgYmxvY2txdW90ZSBwIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSggcGFsZXR0ZShuZXV0cmFsKSwgMC43KTtcbiAgICAgICAgLy9ib3JkZXItbGVmdDogMXB4IHNvbGlkIHBhbGV0dGUodGV4dCk7XG4gICAgICAgIGNvbG9yOiByZ2JhKCBwYWxldHRlKHRleHQpLCAwLjcpO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMC4wMDI1ZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjY7XG4gICAgICAgIHBhZGRpbmc6IHNwYWNlKDAuNikgc3BhY2UoMC43NSkgc3BhY2UoMC41KTtcblxuICAgICAgICAvLyBmb250IHNpemVzXG4gICAgXHRmb250LXNpemU6IGZvbnRzaXplKHRleHQtLXF1b3RlLCBzbSk7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tcXVvdGUsIHJnKTsgfVxuICAgIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBmb250LXNpemU6IGZvbnRzaXplKHRleHQtLXF1b3RlLCBsZyk7IH1cblxuICAgIH1cbn1cblxuLy8gV2hlbiBpbnNpZGUgLlBvc3QtY29udGVudCBtYXJrZG93bjpcbi5Qb3N0LWRhdGUge1xuICAgIEBpbmNsdWRlIHRleHRSZygpO1xuICAgIGNvbG9yOiBwYWxldHRlKG11dGVkKTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tcmlnaHQ6IHNwYWNlKDAuMyk7XG59XG5cbi5Qb3N0LWltYWdlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBpbWcge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBwYWxldHRlKGJhc2UpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAmLS1zbWFsbCB7XG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICAvL0BpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgd2lkdGg6IDgwJTsgfVxuICAgICAgICAgICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7IHdpZHRoOiA2MCU7IH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLlBvc3QtbWV0YSB7XG4gICAgQGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuXHRcdCRtaXhpblNpemU6IHRleHQtLXNtLFxuXHRcdCRtaXhpbkNvbG9yOiBwYWxldHRlKG11dGVkKSxcblx0XHQkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjAyNWVtXG5cdCk7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHBhbGV0dGUoYmFzZSk7XG5cdC8vbWFyZ2luLXRvcDogJGJsb2NrU3BhY2UgKiAxLzM7XG5cdG1hcmdpbi10b3A6ICRwYXJhZ3JhcGhTcGFjZSAqIDEuMTtcblx0cGFkZGluZy10b3A6IHNwYWNlKDAuNSk7XG5cbiAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBmb250LXNpemU6IDc1JTtcbiAgICAgICAgbWFyZ2luOiAwIHNwYWNlKDAuMjUpO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNweCk7XG4gICAgfVxufVxuXG4uUG9zdC10YWdzIHtcblx0QGluY2x1ZGUgdGV4dFNtKCk7XG5cdGNvbG9yOiBwYWxldHRlKG11dGVkKTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdC8vbWFyZ2luLXRvcDogc3BhY2UoMC4yNSk7XG5cbiAgICA+IGEge1xuICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVHcmV5KTtcbiAgICB9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgIEJVVFRPTlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuQG1peGluIGJ1dHRvblRoZW1lKCkge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJvcmRlci1zdHlsZTogc29saWQ7XG5cdGJvcmRlci13aWR0aDogMXB4O1xuXHRwYWRkaW5nOiAwIHNwYWNlKDAuNzUpO1xuXG4gICAgLy8gdGhlbWUgdW51c2VkXG4gICAgLy8gYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3IgY29tZXMgZnJvbSBTdWl04oCmXG4gICAgLy9ib3JkZXItY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgIC8vYm9yZGVyLXJhZGl1czogbWFwLWZldGNoKCRib3JkZXItcmFkaXVzLCBiYXNlKTtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAxICk7XG5cdC8vIHRyYW5zaXRpb246IGFsbCB0cmFuc2l0aW9uKGR1cmF0aW9uLCBzaG9ydCkgdHJhbnNpdGlvbih0eXBlLCBiYXNlKTtcblx0Ly8gdmVydGljYWwtYWxpZ246IHRvcDsgLy8gMS5cblxuXHRhIHtcblxuXHR9XG5cblx0JltkaXNhYmxlZF0ge1xuXHRcdGJvcmRlci1jb2xvcjogcGFsZXR0ZShtdXRlZCk7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShtdXRlZCk7XG5cdFx0Y3Vyc29yOiBub3QtYWxsb3dlZDtcblx0XHRvcGFjaXR5OiAwLjQ7XG5cdH1cblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdFx0b3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xuXG4gICAgICAgIC8vIHRoZW1lIHVudXNlZFxuICAgICAgICAvL29wYWNpdHk6IDAuNTtcblx0fVxufVxuXG5AbWl4aW4gYnV0dG9uVGV4dCgpIHtcbiAgICBAaW5jbHVkZSB0eXBlUmVzZXQoKTtcbiAgICBAaW5jbHVkZSB0ZXh0TGcoKTtcbiAgICBsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBsZyk7XG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcblxuICAgIC8vIHRoZW1lIHVudXNlZFxuICAgIC8vY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgIC8vZm9udC1mYW1pbHk6ICRmb250LWJ1dHRvbjtcbiAgICAvL2ZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHhzKTtcbiAgICAvL2xldHRlci1zcGFjaW5nOiAwLjA1ZW07XG5cbiAgICBAaW5jbHVkZSBvbi1ldmVudCgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgICAgIGJvcmRlci1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKHdoaXRlKTtcbiAgICB9XG59XG5cblxuLy8gUHJpbWFyeSBidXR0b25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBidXR0b24oKSB7XG5cdEBpbmNsdWRlIGJ1dHRvblRoZW1lKCk7XG5cdEBpbmNsdWRlIGJ1dHRvblRleHQoKTtcbn1cblxuLnQtYnV0dG9uIHtcblx0QGluY2x1ZGUgYnV0dG9uO1xufVxuXG4udC1idXR0b24tLWJyYW5kIHtcblx0QGluY2x1ZGUgYnV0dG9uO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbn1cblxuLnQtYnV0dG9uLS1yZXYge1xuXHRAaW5jbHVkZSBidXR0b247XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcblx0Ym9yZGVyLXdpZHRoOiAxcHg7XG59XG5cbi50LWJ1dHRvbi0tZnVsbCB7XG5cdC8vQGluY2x1ZGUgYnV0dG9uO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xufVxuXG5cbi8vIFNlY29uZGFyeSBidXR0b25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL0BtaXhpbiB0ZXh0QnV0dG9uU20oXG4vL1x0JG1peGluQ29sb3I6IHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCksXG4vL1x0JG1peGluQm9yZGVyQ29sb3I6ICRtaXhpbkNvbG9yXG4vLykge1xuLy9cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuLy9cdGNvbG9yOiAkbWl4aW5Db2xvcjtcbi8vXHRmb250LWZhbWlseTogJGZvbnQtYnV0dG9uO1xuLy9cdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHhzKTtcbi8vXHRsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuLy9cdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGNvbmNpc2UpO1xuLy9cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbi8vXHRcdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHJnKTtcbi8vXHR9XG4vL1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdFx0Ly8gYm9yZGVyLWNvbG9yOiByZ2JhKCAkbWl4aW5Cb3JkZXJDb2xvciwgMC41KTtcbi8vXHRcdC8vIGNvbG9yOiByZ2JhKCAkbWl4aW5Db2xvciwgMC41KTtcbi8vXHRcdGNvbG9yOiAkbWl4aW5Db2xvcjtcbi8vXHR9XG4vL31cbi8vXG4vL0BtaXhpbiBidXR0b25TZWNvbmRhcnkoKSB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uVGhlbWUoKTtcbi8vXHRAaW5jbHVkZSB0ZXh0QnV0dG9uU20oKTtcbi8vXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHRib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcbi8vXHRib3JkZXItd2lkdGg6IDFweDtcbi8vXHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBjb25jaXNlKSAhaW1wb3J0YW50O1xuLy9cdHBhZGRpbmctdG9wOiAxcHg7XG4vL1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdH1cbi8vfVxuLy9cbi8vLnQtYnV0dG9uU2Vjb25kYXJ5IHtcbi8vXHRAaW5jbHVkZSBidXR0b25TZWNvbmRhcnkoKTtcbi8vfVxuXG5cbi8vIEludmlzaWJsZSBidXR0b24gKGZvciBob2xkaW5nIHRoZSB0b3VjaCBzcGFjZSAmIGxheW91dClcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vQG1peGluIGJ1dHRvbkludmlzaWJsZSAoKSB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uVGhlbWUoKTtcbi8vXHRAaW5jbHVkZSB0ZXh0QnV0dG9uU20oJG1peGluQ29sb3I6IHBhbGV0dGUoYnJhbmQpICk7XG4vL1x0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4vL1x0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHRwYWRkaW5nOiAwIDAgMCBzcGFjZSgwLjc1KTtcbi8vXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0XHRjb2xvcjogcGFsZXR0ZShicmFuZCk7XG4vL1x0fVxuLy99XG4vL1xuLy8udC1idXR0b25JbnZpc2libGUge1xuLy9cdEBpbmNsdWRlIGJ1dHRvbkludmlzaWJsZSgpO1xuLy99XG5cblxuLy8gQnV0dG9uIHNpemVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLy50LWJ1dHRvbiB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uO1xuLy9cbi8vXHQmLS1tZCB7XG4vL1x0XHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBiYXNlKTtcbi8vXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdHdpZHRoOiBzcGFjZSg1KTtcbi8vXG4vL1x0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhzKSB7XG4vL1x0XHRcdHdpZHRoOiBzcGFjZSg2KTtcbi8vXHRcdH1cbi8vXHR9XG4vL1xuLy9cdCYtLWxnIHtcbi8vXHRcdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGxhcmdlKTtcbi8vXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdHdpZHRoOiAxMDAlO1xuLy9cbi8vXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbi8vXHRcdFx0d2lkdGg6IHNwYWNlKDEyKTtcbi8vXHRcdH1cbi8vXHR9XG4vL1xuLy9cdCYtLWZ1bGwge1xuLy9cdFx0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGFyZ2UpO1xuLy9cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuLy9cdFx0d2lkdGg6IDEwMCU7XG4vL1x0fVxuLy99XG4vL1xuLy8udC14cy1idXR0b24ge1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcbi8vXHRcdCYtLW1kIHtcbi8vXHRcdFx0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgYmFzZSk7XG4vL1x0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdFx0d2lkdGg6IHNwYWNlKDYpO1xuLy9cdFx0fVxuLy9cdH1cbi8vfVxuXG5cbi8vIENsb3NlIGJ1dHRvbiAodGhpcyBqdXN0IHBvc2l0aW9ucyBhbiBpY29uKVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnQtYnV0dG9uQ2xvc2Uge1xuXHRjb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdHBvc2l0aW9uOiBmaXhlZDtcblx0cmlnaHQ6IHNwYWNlKDAuNSk7XG5cdHRvcDogc3BhY2UoMC41KTtcblx0ei1pbmRleDogbWFwLWZldGNoKCR6LWluZGV4LCBmaXJzdCk7XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0b3V0bGluZTogbm9uZTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcblx0XHRyaWdodDogc3BhY2UoMSk7XG5cdFx0dG9wOiAzMXB4O1xuXHR9XG59XG5cblxuXG4vLyBTdWJ0aXRsZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gdXNlIHRoaXMgdG8gdmVydGljYWxseSBhbGlnbiBlbGVtZW50cyB3aXRoIGEgYnV0dG9uXG4vLyAuQnV0dG9uTGluZUhlaWdodCB7XG4vLyAgICAgbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgYmFzZSk7XG4vLyAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbi8vIH1cblxuLy8gcGFkZGluZy10b3A6IDJweDsgLy8gdGhlbWUgdHlwb2dyYXBoeSBhbGlnbm1lbnRcbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRk9STVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0LFxubGFiZWwge1xuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRvdXRsaW5lOiAwO1xuXHR9XG59XG5cbi8vaW5wdXQ6bm90KFt0eXBlPVwicmFkaW9cIl0pLFxuLy9pbnB1dDpub3QoW3R5cGU9XCJzdWJtaXRcIl0pLFxuLy9pbnB1dDpub3QoXCIuQnV0dG9uXCIpLFxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxudGV4dGFyZWEge1xuXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG5cbiAgICAvLyB0aGVtZVxuICAgIEBpbmNsdWRlIHRleHRMZygpO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC40ICk7XG4gICAgbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGcpO1xuXHRwYWRkaW5nOiAwIDAgM3B4IDA7XG5cdHRyYW5zaXRpb246IGFsbCBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBsb25nKSBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIHR5cGUsIGJhc2UpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAwLjQgKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIFx0cGFkZGluZy1sZWZ0OiBzcGFjZSgwLjUpO1xuICAgIH1cblxuICAgIC8vIHRoZW1lIHVudXNlZFxuICAgIC8vYm9yZGVyLXJhZGl1czogbWFwLWZldGNoKCRib3JkZXItcmFkaXVzLCBiYXNlKTtcbiAgICAvL3BhZGRpbmc6IDAgc3BhY2UoMi8zKTtcblxuXHQvL0BpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHQvL1x0b3V0bGluZTogMDtcblx0Ly99XG5cbiAgICAvLyBmaWxsZWQtaW4gZm9ybSBzdHlsaW5nXG5cdCY6LXdlYmtpdC1hdXRvZmlsbCB7XG5cdFx0LXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCByZW0oMTAwKSBwYWxldHRlKGZhaW50KSBpbnNldDtcblx0XHQtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdFx0YmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcblx0fVxuXG5cdCRjb2xvci1wbGFjZWhvbGRlcjogcGFsZXR0ZShicmFuZCk7XG5cblx0Jjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cblx0JjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cblx0Jjo6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cblx0JjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBpbnB1dCxcbi8vIHRleHRhcmVhIHtcbi8vIFx0Ym9yZGVyOiAxcHggc29saWQgcGFsZXR0ZShiYXNlKTtcbi8vIFx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMC41KTtcbi8vIH1cbi8vXG4vLyB0ZXh0YXJlYSB7XG4vLyBcdGxpbmUtaGVpZ2h0OiAxLjU7XG4vLyBcdHBhZGRpbmctdG9wOiBzcGFjZSgwLjUpO1xuLy8gfVxuXG5cblxuXG5cbi8vIFJFRkFDVE9SOiB0ZXh0IGlucHV0cyBvbmx5IHNvIEkgZG9uJ3Qgb3ZlcnJpZGUgcmFkaW8gYnRuIGNvbXBvbmVudCBzdHlsZXPigKZcblxuLy9pbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwidGVsXCJdIHtcbi8vXHRAaW5jbHVkZSB0ZXh0UmcoKTtcbi8vXHRjb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZC1jb3VudGVyKSwgMC43ICk7XG4vL1x0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4vL1x0Ym9yZGVyOiAwO1xuLy9cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbi8vXHRib3JkZXItY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY291bnRlciksIDAuNCApO1xuLy9cdC8vIGJvcmRlci1yYWRpdXM6IG1hcC1mZXRjaCgkYm9yZGVyLXJhZGl1cywgYmFzZSk7XG4vL1x0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuLy9cdC8vIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXI7XG4vL1x0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGcpO1xuLy9cdHBhZGRpbmc6IDA7XG4vL1x0cmVzaXplOiBub25lO1xuLy9cdHRyYW5zaXRpb246IGFsbCBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBsb25nKSBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIHR5cGUsIGJhc2UpO1xuLy9cdHdpZHRoOiAxMDAlO1xuLy9cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0XHRvdXRsaW5lOiAwO1xuLy9cdH1cbi8vXG4vL1x0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4vL1x0XHQvLyBmb250LXNpemU6IDE2cHg7XG4vL1x0fVxuLy9cbi8vXHQmOi13ZWJraXQtYXV0b2ZpbGwge1xuLy9cdFx0LXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCByZW0oMTAwKSBkYXJrZW4oIHBhbGV0dGUobmV1dHJhbCksNCUpIGluc2V0O1xuLy9cdFx0LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHBhbGV0dGUobWVkaXVtKTtcbi8vXHRcdGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4vL1x0fVxuLy9cbi8vXHQkY29sb3ItcGxhY2Vob2xkZXI6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY291bnRlciksIDAuNyApO1xuLy9cbi8vXHQmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjsgfVxuLy9cdCY6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4vL1x0Jjo6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbi8vXHQmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciAgICAgIHsgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjsgfVxuLy99XG5cblxuLy8gRmxvYXRpbmcgbGFiZWwgcGF0dGVyblxuLy8gVXN1YWxseSByZXF1aXJlcyBKUyB1bmxlc3MgeW91J3JlIHVzaW5nIFJlYWN04oCmXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKiB1bmNzczppZ25vcmUgKi9cbi8vLkZvcm0tZ3JvdXAge1xuLy9cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vXG4vL1x0Ly8mOm5vdCg6bGFzdC1jaGlsZCkge1xuLy9cdC8vXHRtYXJnaW46IDAgMCBzcGFjZSgxLjEpO1xuLy9cdC8vfVxuLy9cbi8vXHRsYWJlbCB7XG4vL1x0XHRAaW5jbHVkZSB0ZXh0TGcoKTtcbi8vXHRcdGNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMSApO1xuLy9cdFx0Y3Vyc29yOiB0ZXh0O1xuLy9cdFx0bGVmdDogMDtcbi8vXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vXHRcdHRvcDogNnB4O1xuLy9cdFx0dHJhbnNpdGlvbjogYWxsIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGZhc3QpIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgZmluZSk7XG4vL1x0XHR6LWluZGV4OiA5OTtcbi8vXHR9XG4vL1xuLy9cdGlucHV0LkZvcm0tY29udHJvbCxcbi8vXHR0ZXh0YXJlYS5Gb3JtLWNvbnRyb2wge1xuLy9cdH1cbi8vXG4vL1x0Ji0tc20ge1xuLy9cdFx0Ly8gbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGcpO1xuLy9cdFx0bGluZS1oZWlnaHQ6IDM4cHg7XG4vL1xuLy9cdFx0bGFiZWwge1xuLy9cdFx0XHRAaW5jbHVkZSB0ZXh0UmcoKTtcbi8vXHRcdFx0Y29sb3I6IHBhbGV0dGUoYnJhbmQtY291bnRlcik7XG4vL1x0XHR9XG4vL1xuLy9cdFx0aW5wdXQuRm9ybS1jb250cm9sIHtcbi8vXHRcdFx0bGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4vL1x0XHR9XG4vL1x0fVxuLy9cbi8vXHQvLyByZXRhaW4gdGhlbWUgdHlwb2dyYXBoeSBhbGlnbm1lbnRcbi8vXHQvLyBpbnB1dC5CdXR0b24ge1xuLy9cdC8vICAgICBwYWRkaW5nLXRvcDogMnB4O1xuLy9cdC8vIH1cbi8vXG4vL1x0Ly8gLyogdW5jc3M6aWdub3JlICovXG4vL1x0Ly8gJi5pcy1hY3RpdmUgPiBsYWJlbDpub3QoLmhhcy1lcnJvcikge1xuLy9cdC8vICAgICAvLyBjb2xvcjogcGFsZXR0ZShjaGFyY29hbCk7XG4vL1x0Ly8gICAgIC8vIGZvbnQtc2l6ZTogcmVtKCRzaXplVGV4dFNtICogMC42NSk7XG4vL1x0Ly8gICAgIG9wYWNpdHk6IDA7XG4vL1x0Ly8gICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWShyZW0oLTEwKSk7XG4vL1x0Ly8gfVxuLy99XG4vL1xuLy8uRm9ybS1ncm91cC5pcy1hY3RpdmUge1xuLy9cdGxhYmVsIHtcbi8vXHRcdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHNtKTtcbi8vXHRcdG9wYWNpdHk6IDE7XG4vL1x0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIC0xNnB4KTtcbi8vXHR9XG4vL1xuLy9cdGlucHV0LkZvcm0tY29udHJvbCB7XG4vL1x0XHRib3JkZXItY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCksIDEgKTtcbi8vXHRcdGNvbG9yOiBwYWxldHRlKGJyYW5kLWNvbXBsZW1lbnQpO1xuLy9cdH1cbi8vfVxuLy9cbi8vLkZvcm0tZ3JvdXAuaGFzLWVycm9yIHtcbi8vXHRsYWJlbCB7XG4vL1x0XHRjb2xvcjogcGFsZXR0ZShiYWQtbmV3cyk7XG4vL1x0fVxuLy9cbi8vXHRpbnB1dC5Gb3JtLWNvbnRyb2wge1xuLy9cdFx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJhZC1uZXdzKTtcbi8vXHR9XG4vL31cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
