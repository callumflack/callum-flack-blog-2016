@charset "UTF-8";
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Correct the line-height for all headings in Chrome mobile, Firefox,
 * iOS Safari, Microsoft Edge and IE.
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.15; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Prevent margin and border from affecting element width.
 * https://goo.gl/pYtbK7
 *
 */
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0; }

button {
  background: transparent;
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

iframe {
  border: 0; }

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0; }

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */
[tabindex="-1"]:focus {
  outline: none !important; }

.mist .header {
  background-color: #dcfac0; }

.mist .content {
  background-color: #00968b; }

.mist .footer {
  background-color: #85c79c; }

.spring .header {
  background-color: #f4fac7; }

.spring .content {
  background-color: #c2454e; }

.spring .footer {
  background-color: #ffb158; }

@font-face {
  font-family: "thin";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/thin.eot");
  src: url("/assets/fonts/thin.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/thin.woff") format("woff"), url("/assets/fonts/thin.ttf") format("truetype"), url("/assets/fonts/thin.svg#thin") format("svg"); }

@font-face {
  font-family: "light";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/light.eot");
  src: url("/assets/fonts/light.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/light.woff") format("woff"), url("/assets/fonts/light.ttf") format("truetype"), url("/assets/fonts/light.svg#light") format("svg"); }

@font-face {
  font-family: "blond";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/blond.eot");
  src: url("/assets/fonts/blond.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/blond.woff") format("woff"), url("/assets/fonts/blond.ttf") format("truetype"), url("/assets/fonts/blond.svg#blond") format("svg"); }

@font-face {
  font-family: "normal";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/normal.eot");
  src: url("/assets/fonts/normal.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/normal.woff") format("woff"), url("/assets/fonts/normal.ttf") format("truetype"), url("/assets/fonts/normal.svg#normal") format("svg"); }

@font-face {
  font-family: "medium";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/medium.eot");
  src: url("/assets/fonts/medium.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/medium.woff") format("woff"), url("/assets/fonts/medium.ttf") format("truetype"), url("/assets/fonts/medium.svg#medium") format("svg"); }

@font-face {
  font-family: "bold";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/bold.eot");
  src: url("/assets/fonts/bold.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/bold.woff") format("woff"), url("/assets/fonts/bold.ttf") format("truetype"), url("/assets/fonts/bold.svg#bold") format("svg"); }

@font-face {
  font-family: "black";
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/black.eot");
  src: url("/assets/fonts/black.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/black.woff") format("woff"), url("/assets/fonts/black.ttf") format("truetype"), url("/assets/fonts/black.svg#black") format("svg"); }

/** @define Button */
/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */
/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */
.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 1px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  cursor: pointer;
  display: inline-block;
  font: inherit;
  /* 3 */
  margin: 0;
  padding: 0.4em 0.75em;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* 4 */ }

/**
 * Remove excess padding and border in Firefox 4+
 */
.Button::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

/**
 * UI states
 */
.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none; }

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: var(--Button-disabled-opacity); }

/** @define FlexEmbed */
/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */
.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative; }

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */
.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%; }

/**
 * Modifier: 3:1 aspect ratio
 */
.FlexEmbed-ratio--3by1 {
  padding-bottom: -webkit-calc(100% / 3);
  padding-bottom: calc(100% / 3); }

/**
 * Modifier: 2:1 aspect ratio
 */
.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%; }

/**
 * Modifier: 16:9 aspect ratio
 */
.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%; }

/**
 * Modifier: 4:3 aspect ratio
 */
.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%; }

/**
 * Fit the content to the aspect ratio
 */
.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

/** @define Grid */
/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */
/* Grid container
   ========================================================================== */
/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.Grid {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* 1 */
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */ }

/**
 * Modifier: center align all grid cells
 */
.Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

/**
 * Modifier: right align all grid cells
 */
.Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

/**
 * Modifier: middle-align grid cells
 */
.Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  -ms-grid-row-align: center;
  align-items: center; }

/**
 * Modifier: bottom-align grid cells
 */
.Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  -ms-grid-row-align: flex-end;
  align-items: flex-end; }

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  /* 1 */ }

/**
 * Modifier: all cells match height of tallest cell in a row
 */
.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

/**
 * Modifier: gutters
 */
.Grid--withGutter {
  margin: 0 -webkit-calc(-0.5 * 17.4px);
  margin: 0 calc(-0.5 * 17.4px); }

.Grid--withGutter > .Grid-cell {
  padding: 0 -webkit-calc(0.5 * 17.4px);
  padding: 0 calc(0.5 * 17.4px); }

/* Grid cell
   ========================================================================== */
/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */
.Grid-cell {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  /* 1 */
  min-width: 0;
  /* 2 */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */
.Grid-cell--center {
  margin: 0 auto; }

.xs-Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.xs-Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

.xs-Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  -ms-grid-row-align: center;
  align-items: center; }

.xs-Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  -ms-grid-row-align: flex-end;
  align-items: flex-end; }

.xs-Grid-cell--center {
  margin: 0 auto; }

@media (min-width: 544px) {
  .sm-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .sm-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .sm-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .sm-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .sm-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 768px) {
  .md-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .md-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .md-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .md-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .md-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 992px) {
  .lg-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .lg-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .lg-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .lg-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .lg-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1200px) {
  .xl-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .xl-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .xl-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .xl-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .xl-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1700px) {
  .su-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .su-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .su-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    -ms-grid-row-align: center;
    align-items: center; }
  .su-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    -ms-grid-row-align: flex-end;
    align-items: flex-end; }
  .su-Grid-cell--center {
    margin: 0 auto; } }

.Grid--withGutter {
  margin: 0 -15.46667px; }
  @media (min-width: 992px) {
    .Grid--withGutter {
      margin: 0 -46.4px; } }

.Grid--withGutter > .Grid-cell {
  padding: 0 15.46667px; }
  @media (min-width: 992px) {
    .Grid--withGutter > .Grid-cell {
      padding: 0 46.4px; } }

.Grid--withGutterSm {
  margin: 0 -5.15556px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm {
      margin: 0 -15.46667px; } }

.Grid--withGutterSm > .Grid-cell {
  padding: 0 5.15556px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm > .Grid-cell {
      padding: 0 15.46667px; } }

/**
  * Simple page-level setup from InuitCSS.
  *
  * 1. Set the default `font-size` and `line-height` for the entire project,
  *    sourced from our default variables. The `font-size` is calculated to exist
  *    in ems, the `line-height` is calculated to exist unitlessly.
  * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
  *    navigating between pages that do/do not have enough content to produce
  *    scrollbars naturally.
  * 3. Ensure the page always fills at least the entire height of the viewport.
  */
html {
  background-color: #fdfdfd;
  min-height: 100%;
  /* 3 */
  overflow-y: scroll;
  /* 2 */ }

a {
  color: currentColor;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    color: currentColor; }

img {
  max-width: 100%;
  font-style: italic;
  vertical-align: middle; }

.gm-style img,
img[width],
img[height] {
  max-width: none; }

/* uncss:ignore */
h1, h2, h3, h4, h5, h6,
blockquote,
ul, ol, li, dl, dd
p, address,
table, time,
form, fieldset, legend,
figure, figcaption,
table, th, td, caption
pre, small,
em, b {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal; }

html {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "normal", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-size: 100%;
  line-height: 1.45;
  text-align: left;
  text-rendering: geometricPrecision;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

/* uncss:ignore */
ul, ol, li, dl,
blockquote, p, address,
table, time,
fieldset,
pre {
  margin-bottom: 29px; }

.o-posAbsoluteCenter {
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFixedCenter {
  left: 50%;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFullScreen {
  bottom: 0;
  left: 0;
  margin: auto;
  position: fixed;
  right: 0;
  top: 0; }

.o-posAbsoluteCenterAlt {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0; }

.o-posFullScreen,
.o-posFixedCenter {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.o-container {
  height: inherit;
  margin: 0 auto;
  max-width: 800px;
  padding: 0 34.8px;
  position: relative; }
  .o-container:before, .o-container:after {
    content: " ";
    display: table; }
  .o-container:after {
    clear: both; }
  .o-container p:last-child,
  .o-container p:last-child a,
  .o-container li:last-child,
  .o-container li:last-child a,
  .o-container ol:last-child,
  .o-container ol:last-child a {
    margin-bottom: 0; }
  @media (min-width: 544px) {
    .o-container {
      padding: 0 46.4px; } }
  @media (min-width: 992px) {
    .o-container {
      padding: 0; } }
  .o-container--md {
    height: inherit;
    margin: 0 auto;
    padding: 0 34.8px;
    position: relative; }
    .o-container--md:before, .o-container--md:after {
      content: " ";
      display: table; }
    .o-container--md:after {
      clear: both; }
    .o-container--md p:last-child,
    .o-container--md p:last-child a,
    .o-container--md li:last-child,
    .o-container--md li:last-child a,
    .o-container--md ol:last-child,
    .o-container--md ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--md {
        padding: 0 46.4px; } }
    @media (min-width: 992px) {
      .o-container--md {
        padding: 0; } }
  .o-container--lg {
    height: inherit;
    margin: 0 auto;
    max-width: 960px;
    padding: 0 34.8px;
    position: relative; }
    .o-container--lg:before, .o-container--lg:after {
      content: " ";
      display: table; }
    .o-container--lg:after {
      clear: both; }
    .o-container--lg p:last-child,
    .o-container--lg p:last-child a,
    .o-container--lg li:last-child,
    .o-container--lg li:last-child a,
    .o-container--lg ol:last-child,
    .o-container--lg ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--lg {
        padding: 0 46.4px; } }
    @media (min-width: 992px) {
      .o-container--lg {
        padding: 0; } }
  .o-container--xl {
    height: inherit;
    margin: 0 auto;
    max-width: 1100px;
    padding: 0 34.8px;
    position: relative; }
    .o-container--xl:before, .o-container--xl:after {
      content: " ";
      display: table; }
    .o-container--xl:after {
      clear: both; }
    .o-container--xl p:last-child,
    .o-container--xl p:last-child a,
    .o-container--xl li:last-child,
    .o-container--xl li:last-child a,
    .o-container--xl ol:last-child,
    .o-container--xl ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--xl {
        padding: 0 46.4px; } }
    @media (min-width: 992px) {
      .o-container--xl {
        padding: 0; } }
  @media (min-width: 544px) {
    .o-container--hero {
      padding: 0 92.8px; } }
  @media (min-width: 992px) {
    .o-container--hero {
      padding: 0 46.4px; } }
  .o-container--super {
    max-width: 100%;
    padding: 0 34.8px; }
    @media (min-width: 544px) {
      .o-container--super {
        padding: 0 92.8px; } }

[data-modal-toggle],
[data-toggle-fold],
[data-dismiss] {
  cursor: pointer; }

ul {
  list-style-type: square;
  margin-left: 34.8px;
  padding-left: 0; }

ol {
  list-style-type: decimal; }

li {
  margin-bottom: 0; }
  li > ul,
  li > ol {
    margin-bottom: 0; }

.o-list {
  margin-left: 34.8px;
  padding-left: 0; }

.o-listClean {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }

.o-listInline {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }
  .o-listInline li,
  .o-listInline div {
    display: inline-block; }
    .o-listInline li:not(:last-child),
    .o-listInline div:not(:last-child) {
      margin-right: 5.8px; }

a {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out; }
  a:hover, a:active, a:focus {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out; }

.o-linkBuried {
  display: block;
  width: 100%;
  margin-bottom: 11.6px; }
  .o-linkBuried:hover .o-linkBuriedTarget, .o-linkBuried:active .o-linkBuriedTarget, .o-linkBuried:focus .o-linkBuriedTarget {
    background-color: #00abff; }

.o-linkBuriedTarget {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  color: #151515; }

.o-coverImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none; }

.o-coverImage--dark {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%; }
  .o-coverImage--dark:before {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#00abff), to(rgba(0, 171, 255, 0.2)));
    background-image: -webkit-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
    background-image: -o-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
    background-image: linear-gradient(to bottom, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
    background-blend-mode: multiply;
    content: " ";
    opacity: 1; }

@media (max-width: 767px) {
  .o-coverImage--blends {
    background-position-x: 0; } }

.o-containImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none;
  background-size: contain; }

.o-fitImageCover {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%; }

.FlexEmbed-fitImage {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%; }

.FlexEmbed-content--dark:before {
  background-image: -webkit-gradient(linear, left top, left bottom, from(#00abff), to(rgba(0, 171, 255, 0.2)));
  background-image: -webkit-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
  background-image: -o-linear-gradient(top, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
  background-image: linear-gradient(to bottom, #00abff 0%, rgba(0, 171, 255, 0.2) 100%);
  background-blend-mode: multiply;
  content: " ";
  opacity: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.c-text--sm {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 14px; }
  @media (min-width: 544px) {
    .c-text--sm {
      font-size: 16px; } }
  @media (min-width: 992px) {
    .c-text--sm {
      font-size: 17px; } }
  .c-text--sm > li,
  .c-text--sm > li a,
  .c-text--sm > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px; }
  @media (min-width: 544px) {
    .c-text {
      font-size: 24px; } }
  @media (min-width: 992px) {
    .c-text {
      font-size: 27px; } }
  .c-text > li,
  .c-text > li a,
  .c-text > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--medium {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px;
  color: gray; }
  @media (min-width: 544px) {
    .c-text--medium {
      font-size: 24px; } }
  @media (min-width: 992px) {
    .c-text--medium {
      font-size: 27px; } }
  .c-text--medium > li,
  .c-text--medium > li a,
  .c-text--medium > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--intro {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px;
  color: gray;
  margin-bottom: 11.6px; }
  @media (min-width: 544px) {
    .c-text--intro {
      font-size: 24px; } }
  @media (min-width: 992px) {
    .c-text--intro {
      font-size: 27px; } }
  .c-text--intro > li,
  .c-text--intro > li a,
  .c-text--intro > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--lg {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  margin-bottom: 0; }
  @media (min-width: 544px) {
    .c-text--lg {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-text--lg {
      font-size: 36px; } }
  .c-text--lg > li,
  .c-text--lg > li a,
  .c-text--lg > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-text--lg > strong {
    font-family: "extrabold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    text-transform: initial; }

.c-text--meta {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 14px;
  color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      font-size: 16px; } }
  @media (min-width: 992px) {
    .c-text--meta {
      font-size: 17px; } }
  .c-text--meta > li,
  .c-text--meta > li a,
  .c-text--meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-text--meta > a {
    border-color: transparent !important; }
    .c-text--meta > a:hover, .c-text--meta > a:active, .c-text--meta > a:focus {
      border-color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      margin: auto; } }

.c-cite {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px;
  display: block;
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-style: normal;
  letter-spacing: 0.12em;
  margin-top: 11.6px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-cite {
      font-size: 24px; } }
  @media (min-width: 992px) {
    .c-cite {
      font-size: 27px; } }
  .c-cite > li,
  .c-cite > li a,
  .c-cite > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-cite a {
    letter-spacing: inherit; }

.c-text--lg > strong {
  display: inline;
  font-family: "bold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: initial; }

a > strong {
  display: block; }

.c-text-block > * {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px; }
  @media (min-width: 544px) {
    .c-text-block > * {
      font-size: 24px; } }
  @media (min-width: 992px) {
    .c-text-block > * {
      font-size: 27px; } }
  .c-text-block > * > li,
  .c-text-block > * > li a,
  .c-text-block > * > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text-block--footer {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  margin: 0; }
  .c-text-block--footer::before {
    background-color: rgba(253, 253, 253, 0.2);
    content: " ";
    display: block;
    height: 1px;
    margin: 23.2px 0 26.68px;
    width: 2.5%; }
  .c-text-block--footer > * {
    color: #151515;
    font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0;
    line-height: 1.45;
    font-size: 19px;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-text-block--footer > * {
        font-size: 24px; } }
    @media (min-width: 992px) {
      .c-text-block--footer > * {
        font-size: 27px; } }
    .c-text-block--footer > * > li,
    .c-text-block--footer > * > li a,
    .c-text-block--footer > * > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }

.c-list--itemTag {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 14px;
  display: inline-block;
  width: 17.4px; }
  @media (min-width: 544px) {
    .c-list--itemTag {
      font-size: 16px; } }
  @media (min-width: 992px) {
    .c-list--itemTag {
      font-size: 17px; } }
  .c-list--itemTag > li,
  .c-list--itemTag > li a,
  .c-list--itemTag > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-list--meta {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 14px;
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  color: gray;
  margin-bottom: 29px; }
  @media (min-width: 544px) {
    .c-list--meta {
      font-size: 16px; } }
  @media (min-width: 992px) {
    .c-list--meta {
      font-size: 17px; } }
  .c-list--meta > li,
  .c-list--meta > li a,
  .c-list--meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-list--meta-title {
  color: #151515 !important;
  margin: 29px 0 14.5px !important; }
  .c-list--meta-title:first-child {
    margin-top: 0 !important; }

ul, ol, dl,
p, address,
table, time,
fieldset, figcaption,
pre, a {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px; }
  @media (min-width: 544px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 24px; } }
  @media (min-width: 992px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 27px; } }
  ul > li,
  ul > li a,
  ul > a, ol > li,
  ol > li a,
  ol > a, dl > li,
  dl > li a,
  dl > a,
  p > li,
  p > li a,
  p > a, address > li,
  address > li a,
  address > a,
  table > li,
  table > li a,
  table > a, time > li,
  time > li a,
  time > a,
  fieldset > li,
  fieldset > li a,
  fieldset > a, figcaption > li,
  figcaption > li a,
  figcaption > a,
  pre > li,
  pre > li a,
  pre > a, a > li,
  a > li a,
  a > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

em,
.u-textEm {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  font-family: "bold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

b,
strong,
.u-textBold {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  font-family: "bold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

blockquote,
.Blockquote {
  color: gray;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  margin-bottom: 29px; }
  @media (min-width: 544px) {
    blockquote,
    .Blockquote {
      font-size: 19px; } }

.c-display {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: -0.005em;
  line-height: 1.1;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-size: 40px; }
  @media (min-width: 992px) {
    .c-display {
      font-size: 60px; } }
  .c-display > li,
  .c-display > li a,
  .c-display > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .Footer .c-display {
    margin-bottom: 29px; }

.c-headline {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: -0.015em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left; }
  @media (min-width: 544px) {
    .c-headline {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-headline {
      font-size: 36px; } }
  .c-headline > li,
  .c-headline > li a,
  .c-headline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--sm {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left; }
  @media (min-width: 544px) {
    .c-headline--sm {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-headline--sm {
      font-size: 36px; } }
  .c-headline--sm > li,
  .c-headline--sm > li a,
  .c-headline--sm > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--smSemi {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 544px) {
    .c-headline--smSemi {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .c-headline--smSemi {
      font-size: 36px; } }
  .c-headline--smSemi > li,
  .c-headline--smSemi > li a,
  .c-headline--smSemi > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--xs {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-size: 18px; }
  @media (min-width: 992px) {
    .c-headline--xs {
      font-size: 27px; } }
  .c-headline--xs > li,
  .c-headline--xs > li a,
  .c-headline--xs > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--xsSemi {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.012em;
  line-height: 1.3;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 4vh;
  text-align: left;
  font-size: 18px;
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 992px) {
    .c-headline--xsSemi {
      font-size: 27px; } }
  .c-headline--xsSemi > li,
  .c-headline--xsSemi > li a,
  .c-headline--xsSemi > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline em {
  font-family: inherit;
  font-style: normal;
  font-weight: normal; }

@media (max-width: 1199px) {
  span.u-lg-lineBreak {
    display: table !important;
    margin: auto; } }

@media (max-width: 767px) {
  span.u-sm-lineBreak {
    display: table !important;
    margin: auto; } }

.u-textWtLt {
  font-family: "light", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtRg {
  font-family: "normal", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtMd {
  font-family: "medium", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtSemi {
  font-family: "semibold", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

h2 + h3 {
  margin-top: 4.64px; }

h3 + p {
  margin-top: 9.28px; }

html {
  background-color: #fff59f; }

.c-content {
  background-color: #fdfdfd;
  padding: 12vh 0; }

.c-header {
  padding: 6vh 0;
  position: relative; }

.c-header-text {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 20px;
  position: relative; }
  @media (min-width: 544px) {
    .c-header-text {
      font-size: 25px; } }
  @media (min-width: 992px) {
    .c-header-text {
      font-size: 28px; } }
  .c-header-text > li,
  .c-header-text > li a,
  .c-header-text > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-header-text:before {
    content: '*';
    font-family: "light", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    font-size: 190%;
    position: absolute;
    left: -6.5%;
    top: -6.25%; }
    @media (min-width: 544px) {
      .c-header-text:before {
        left: -3.75%;
        top: -13%; } }
    @media (min-width: 992px) {
      .c-header-text:before {
        left: -4.5%;
        top: -15%; } }
  .c-header-text a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(21, 21, 21, 0)), color-stop(50%, rgba(21, 21, 21, 0.7)));
    background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
    background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
    background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
    background-repeat: repeat-x;
    background-size: 1px 1px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none; }
    .c-header-text a:hover, .c-header-text a:active, .c-header-text a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }

.Post + .Post {
  margin-top: 12vh; }

.Post-content a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(21, 21, 21, 0)), color-stop(50%, rgba(21, 21, 21, 0.7)));
  background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
  background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
  background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0) 50%, rgba(21, 21, 21, 0.7) 50%);
  background-repeat: repeat-x;
  background-size: 1px 1px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .Post-content a:hover, .Post-content a:active, .Post-content a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.Post-content figure {
  margin: 36.25px 0 43.5px; }

.Post-content blockquote p {
  background-color: rgba(243, 242, 241, 0.7);
  color: rgba(21, 21, 21, 0.7);
  letter-spacing: 0.0025em;
  line-height: 1.6;
  padding: 13.92px 17.4px 11.6px;
  font-size: 16px; }
  @media (min-width: 544px) {
    .Post-content blockquote p {
      font-size: 21px; } }
  @media (min-width: 992px) {
    .Post-content blockquote p {
      font-size: 24px; } }

.Post-date {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0;
  line-height: 1.45;
  font-size: 19px;
  color: #b3b3b3;
  float: left;
  margin-right: 6.96px; }
  @media (min-width: 544px) {
    .Post-date {
      font-size: 24px; } }
  @media (min-width: 992px) {
    .Post-date {
      font-size: 27px; } }
  .Post-date > li,
  .Post-date > li a,
  .Post-date > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.Post-image {
  margin-bottom: 23.2px; }

.Post-meta {
  color: #b3b3b3;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.45;
  font-size: 14px;
  border-top: 1px solid #dbdbdb;
  margin-top: 31.9px;
  padding-top: 11.6px; }
  @media (min-width: 544px) {
    .Post-meta {
      font-size: 16px; } }
  @media (min-width: 992px) {
    .Post-meta {
      font-size: 17px; } }
  .Post-meta > li,
  .Post-meta > li a,
  .Post-meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .Post-meta span {
    display: inline-block;
    font-size: 75%;
    margin: 0 5.8px;
    -webkit-transform: translateY(-3px);
    -ms-transform: translateY(-3px);
    transform: translateY(-3px); }

.Post-tags {
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.02em;
  line-height: 1.6;
  font-size: 14px;
  color: #b3b3b3;
  display: inline-block; }
  @media (min-width: 544px) {
    .Post-tags {
      font-size: 16px; } }
  @media (min-width: 992px) {
    .Post-tags {
      font-size: 17px; } }
  .Post-tags > li,
  .Post-tags > li a,
  .Post-tags > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .Post-tags > a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(179, 179, 179, 0)), color-stop(50%, #b3b3b3));
    background-image: -webkit-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
    background-image: -o-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
    background-image: linear-gradient(to bottom, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
    background-repeat: repeat-x;
    background-size: 1px 1px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none; }
    .Post-tags > a:hover, .Post-tags > a:active, .Post-tags > a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }

.Post-hero {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none; }
  .Post-hero h1 {
    margin-bottom: 4.64px; }
  .Post-hero p {
    margin-bottom: 8.12px; }

.Post-hero--inverse h1,
.Post-hero--inverse p,
.Post-hero--inverse ul {
  color: #f0f0f0 !important; }

.t-button {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  padding: 0 17.4px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  line-height: 55px;
  padding-bottom: 3px; }
  .t-button[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .t-button {
      font-size: 36px; } }
  .t-button > li,
  .t-button > li a,
  .t-button > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: #00abff;
    border-color: #00abff;
    color: #FFF; }

.t-button--brand {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  padding: 0 17.4px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  line-height: 55px;
  padding-bottom: 3px;
  background-color: #00abff;
  border-color: #00abff; }
  .t-button--brand[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--brand:hover, .t-button--brand:active, .t-button--brand:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--brand {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .t-button--brand {
      font-size: 36px; } }
  .t-button--brand > li,
  .t-button--brand > li a,
  .t-button--brand > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .t-button--brand:hover, .t-button--brand:active, .t-button--brand:focus {
    background-color: #00abff;
    border-color: #00abff;
    color: #FFF; }

.t-button--rev {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  border-radius: 3px;
  border-style: solid;
  border-width: 1px;
  padding: 0 17.4px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  line-height: 55px;
  padding-bottom: 3px;
  background-color: transparent;
  border-color: currentColor;
  border-width: 1px; }
  .t-button--rev[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: currentColor;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--rev {
      font-size: 32px; } }
  @media (min-width: 992px) {
    .t-button--rev {
      font-size: 36px; } }
  .t-button--rev > li,
  .t-button--rev > li a,
  .t-button--rev > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: #00abff;
    border-color: #00abff;
    color: #FFF; }

.t-button--full {
  text-align: center;
  width: 100%; }

.t-buttonClose {
  color: #00abff;
  position: fixed;
  right: 11.6px;
  top: 11.6px;
  z-index: 1000;
  right: 23.2px;
  top: 31px; }
  .t-buttonClose:hover, .t-buttonClose:active, .t-buttonClose:focus {
    outline: none; }

input:hover, input:active, input:focus,
textarea:hover,
textarea:active,
textarea:focus,
select:hover,
select:active,
select:focus,
label:hover,
label:active,
label:focus {
  outline: 0; }

input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
  background: transparent;
  border: 0;
  display: inline-block;
  resize: none;
  width: 100%;
  -webkit-appearance: none;
  color: #151515;
  font-family: "blond", -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.005em;
  line-height: 1.4;
  font-size: 27px;
  border-bottom: 1px solid rgba(0, 171, 255, 0.4);
  line-height: 55px;
  padding: 0 0 3px 0;
  -webkit-transition: all 500ms ease-out;
  -o-transition: all 500ms ease-out;
  transition: all 500ms ease-out; }
  @media (min-width: 544px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      font-size: 32px; } }
  @media (min-width: 992px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      font-size: 36px; } }
  input[type="text"] > li,
  input[type="text"] > li a,
  input[type="text"] > a,
  input[type="email"] > li,
  input[type="email"] > li a,
  input[type="email"] > a,
  input[type="tel"] > li,
  input[type="tel"] > li a,
  input[type="tel"] > a,
  textarea > li,
  textarea > li a,
  textarea > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      border: 1px solid rgba(0, 171, 255, 0.4);
      border-radius: 3px;
      padding-left: 11.6px; } }
  input[type="text"]:-webkit-autofill,
  input[type="email"]:-webkit-autofill,
  input[type="tel"]:-webkit-autofill,
  textarea:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 6.25rem #f7f7f7 inset;
    -webkit-text-fill-color: #00abff;
    background-clip: padding-box; }
  input[type="text"]::-webkit-input-placeholder,
  input[type="email"]::-webkit-input-placeholder,
  input[type="tel"]::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: #00abff; }
  input[type="text"]:-moz-placeholder,
  input[type="email"]:-moz-placeholder,
  input[type="tel"]:-moz-placeholder,
  textarea:-moz-placeholder {
    color: #00abff; }
  input[type="text"]::-moz-placeholder,
  input[type="email"]::-moz-placeholder,
  input[type="tel"]::-moz-placeholder,
  textarea::-moz-placeholder {
    color: #00abff; }
  input[type="text"]:-ms-input-placeholder,
  input[type="email"]:-ms-input-placeholder,
  input[type="tel"]:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: #00abff; }

/* uncss:ignore */

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGxpY2F0aW9uLmNzcyIsIl92ZW5kb3Iubm9ybWFsaXplLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYmFzZS5zY3NzIiwiX3Rvb2xzLmZ1bmN0aW9ucy5zY3NzIiwiX3Rvb2xzLnNldHRpbmdzLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYy1idXR0b24uc2NzcyIsIl92ZW5kb3Iuc3VpdGNzcy5jLWZsZXhlbWJlZC5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zY3NzIiwiX3Rvb2xzLm1peGlucy5icmVha3BvaW50cy5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zZXR0aW5ncy5zY3NzIiwiX2Jhc2UucGFnZS5zY3NzIiwiX2Jhc2UubGluay5zY3NzIiwiX3Rvb2xzLm1peGlucy5zY3NzIiwiX2Jhc2UuaW1hZ2Uuc2NzcyIsIl9iYXNlLnR5cGUuc2NzcyIsIl9vYmplY3QucG9zaXRpb24uc2NzcyIsIl9vYmplY3QuY29udGFpbmVyLnNjc3MiLCJfb2JqZWN0LmN1cnNvci5zY3NzIiwiX29iamVjdC5saXN0LnNjc3MiLCJfb2JqZWN0Lmxpbmsuc2NzcyIsIl9vYmplY3QuY292ZXJpbWFnZS5zY3NzIiwiX29iamVjdC5maXRpbWFnZS5zY3NzIiwiX3R5cGUudGV4dC5zY3NzIiwiX3R5cGUuaGVhZGxpbmUuc2NzcyIsIl90eXBlLmhlbHBlcnMuc2NzcyIsIl9sYXlvdXQuYm9keS5zY3NzIiwiX2xheW91dC5oZWFkZXIuc2NzcyIsIl9sYXlvdXQucG9zdC5zY3NzIiwiX2NvbXBvbmVudC5idXR0b24uc2NzcyIsIl9jb21wb25lbnQuZm9ybS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQ1FqQiw0RUFBNEU7QUFFNUU7OztHQUdHO0FBRUg7RUFDRSx3QkFBd0I7RUFBRSxPQUFPO0VBQ2pDLDJCQUEyQjtFQUFFLE9BQU87RUFDcEMsK0JBQStCO0VBQUUsT0FBTyxFQUN6Qzs7QUFFRDs7R0FFRztBQUVIO0VBQ0Us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ZnFLbUI7RWVwS25CLGdCZDBKd0IsRWN6SnhCOztBQUVEO0VBQ0MseUJBQXlCLEVBQ3pCOztBQUVEO0VBQ0MsaUJBQWlCLEVBTWpCO0VBUEQ7O0lBS0UsaUJBQWlCLEVBQ2pCOztBQVlGO0VBSkMsb0JmK0ltQjtFZTlJbkIsZ0Jkb0l3QixFY2pJSTs7QUFZN0I7RUFMQyxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGdCQUFnQixFQUdzQjs7QUFtQnZDO0VBeEJDLHNCQUFzQjtFQUN0QixlQUFlO0VBQ2YsZ0JBQWdCLEVBc0J3QjtFQVR4Qzs7SUFFQyxzQkFBc0IsRUFJdEI7SUFORDs7TUFJRSxvQmZpSGlCLEVlaEhqQjs7QUN2REg7RVBtSEMsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNSb0RxQjtFUXBEckIsOEJSb0RxQjtFUXBEckIsMkJSb0RxQjtFUW5EckIsNkNSeUR3QjtFUXpEeEIsd0NSeUR3QjtFUXpEeEIscUNSeUR3QixFZXRLeEI7RUFSRDtJUG1IQyxpQ0FGYztJQUVkLDRCQUZjO0lBRWQseUJBRmM7SUFHZCxtQ1JvRHFCO0lRcERyQiw4QlJvRHFCO0lRcERyQiwyQlJvRHFCO0lRbkRyQiw2Q1J5RHdCO0lRekR4Qix3Q1J5RHdCO0lRekR4QixxQ1J5RHdCLEVRbEd0Qjs7QU8zQ0g7RUFWQyxlQUFlO0VBQ2YsWUFBWTtFQVdaLHNCaEJvSW1CLEVnQm5JbkI7RUFUQztJQUNDLDBCZkFrQyxFZUNsQzs7QUFXSDtFUDJFQyxpQ0FGYztFQUVkLDRCQUZjO0VBRWQseUJBRmM7RUFHZCxtQ1JvRHFCO0VRcERyQiw4QlJvRHFCO0VRcERyQiwyQlJvRHFCO0VRbkRyQiw2Q1J5RHdCO0VRekR4Qix3Q1J5RHdCO0VRekR4QixxQ1J5RHdCO0VlcEl4QixlZjVCb0MsRWU2QnBDOztBQ1BEO0VSK0VDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DUm9EcUI7RVFwRHJCLDhCUm9EcUI7RVFwRHJCLDJCUm9EcUI7RVFuRHJCLDZDUnlEd0I7RVF6RHhCLHdDUnlEd0I7RVF6RHhC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QkM7SW9CcUJGO01ONUNvQyxnQmxCK0ZSLEV3QmpEM0IsRUFBQTtFTjNDRTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VNa0NGO0lBZlEsMEJ4QmxCNkI7SXdCbUI3QixzQnhCbkI2QjtJd0JvQjdCLFl4QnRDNkIsRVFrRWxDOztBZ0JYSDtFaEJrREMsaUNBRmM7RUFFZCw0QkFGYztFQUVkLHlCQUZjO0VBR2QsbUNSb0RxQjtFUXBEckIsOEJSb0RxQjtFUXBEckIsMkJSb0RxQjtFUW5EckIsNkNSeUR3QjtFUXpEeEIsd0NSeUR3QjtFUXpEeEIscUNSeUR3QjtFd0I5S3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsa0JBQWtCO0VBQ2xCLGtCekJvS21CO0VTcktoQixxQkFBcUI7RUFDeEIsbUJBQW1CO0VBQ25CLG9CQUFvQjtFVUtwQixlbEJLb0M7RWtCSnBDLGlKbEI2TGtKO0VrQjVMbEosd0JBc0NtQztFQXJDbkMsaUJBc0M0QjtFQW5DNUIsZ0JsQitGMkI7RXdCMUV4QixrQnhCb0h3QjtFd0JuSHhCLG9CQUFvQjtFQThCdkIsMEJ4QnZDb0M7RXdCd0NwQyxzQnhCeENvQyxFd0J5Q3BDO0VBSkQ7SUEvQ0Usc0J6QmtJVTtJeUJqSVYsMEJ6QmlJVTtJeUJoSVYsb0JBQW9CO0lBQ3BCLGFBQWEsRUFDYjtFQTJDRjtJQXhDRSwrQkFBK0I7SUFDL0IseUJBQXlCLEVoQmtEeEI7RUpwQ0Q7SW9CeUJGO01OakRvQyxnQmxCK0ZSLEV3QjFDM0IsRUFBQTtFcEI3QkM7SW9CeUJGO01OaERvQyxnQmxCK0ZSLEV3QjNDM0IsRUFBQTtFTmpERTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VNc0NGO0lBbkJRLDBCeEJsQjZCO0l3Qm1CN0Isc0J4Qm5CNkI7SXdCb0I3QixZeEJ0QzZCLEVRa0VsQzs7QWdCTEg7RWhCNENDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DUm9EcUI7RVFwRHJCLDhCUm9EcUI7RVFwRHJCLDJCUm9EcUI7RVFuRHJCLDZDUnlEd0I7RVF6RHhCLHdDUnlEd0I7RVF6RHhCLHFDUnlEd0I7RXdCOUt4QixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGtCQUFrQjtFQUNsQixrQnpCb0ttQjtFU3JLaEIscUJBQXFCO0VBQ3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RVVLcEIsZWxCS29DO0VrQkpwQyxpSmxCNkxrSjtFa0I1TGxKLHdCQXNDbUM7RUFyQ25DLGlCQXNDNEI7RUFuQzVCLGdCbEIrRjJCO0V3QjFFeEIsa0J4Qm9Id0I7RXdCbkh4QixvQkFBb0I7RUFvQ3ZCLDhCQUE4QjtFQUM5QiwyQkFBMkI7RUFDM0Isa0JBQWtCLEVBQ2xCO0VBTEQ7SUFyREUsc0J6QmtJVTtJeUJqSVYsMEJ6QmlJVTtJeUJoSVYsb0JBQW9CO0lBQ3BCLGFBQWEsRUFDYjtFQWlERjtJQTlDRSwrQkFBK0I7SUFDL0IseUJBQXlCLEVoQmtEeEI7RUpwQ0Q7SW9CK0JGO01OdkRvQyxnQmxCK0ZSLEV3Qm5DM0IsRUFBQTtFcEJwQ0M7SW9CK0JGO01OdERvQyxnQmxCK0ZSLEV3QnBDM0IsRUFBQTtFTnhERTs7O0lBR0Qsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsVUFBVSxFQUNWO0VNNENGO0lBekJRLDBCeEJsQjZCO0l3Qm1CN0Isc0J4Qm5CNkI7SXdCb0I3QixZeEJ0QzZCLEVRa0VsQzs7QWdCRUg7RUFFQyxtQkFBbUI7RUFDbkIsWUFBWSxFQUNaOztBQW1IRDtFQUNDLGV4QjFLb0M7RXdCMktwQyxnQkFBZ0I7RUFDaEIsY3pCakNtQjtFeUJrQ25CLFl6QmxDbUI7RXlCbUNuQixjeEJka0I7RXdCcUJqQixjekIxQ2tCO0V5QjJDbEIsVUFBVSxFQUVYO0VBZkQ7SUFRRSxjQUFjLEVoQmpJYjs7QWlCOUVIOzs7Ozs7Ozs7O0VBS0UsV0FBVyxFakJ5RVY7O0FpQmxFSDs7OztFQUlDLHdCQUF3QjtFQUNyQixVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLGFBQWE7RUFDYixZQUFZO0VBQ1oseUJBQXlCO0VQVjVCLGVsQktvQztFa0JKcEMsaUpsQjZMa0o7RWtCNUxsSix3QkFzQ21DO0VBckNuQyxpQkFzQzRCO0VBbkM1QixnQmxCK0YyQjtFeUJ2RnhCLGdEekJLaUM7RXlCSmpDLGtCekJnSXdCO0V5Qi9IM0IsbUJBQW1CO0VBQ25CLHVDekJvSndCO0V5QnBKeEIsa0N6Qm9Kd0I7RXlCcEp4QiwrQnpCb0p3QixFeUJ2SHhCO0VyQmZDO0lxQjlCRjs7OztNUE1vQyxnQmxCK0ZSLEV5QnhEM0IsRUFBQTtFckJmQztJcUI5QkY7Ozs7TVBPb0MsZ0JsQitGUixFeUJ6RDNCLEVBQUE7RVBuQ0U7Ozs7Ozs7Ozs7OztJQUdELG9CQUFvQjtJQUNwQixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLFVBQVUsRUFDVjtFZDBCQTtJcUIzQ0Y7Ozs7TUFtQlEseUN6QkQ2QjtNeUJFN0IsbUJBQW1CO01BQ3RCLHFCMUJ3SWUsRTBCaEhuQixFQUFBO0VBN0NEOzs7O0lBa0NFLGdEQUF1RDtJQUN2RCxpQ3pCakJtQztJeUJrQm5DLDZCQUE2QixFQUM3QjtFQXJDRjs7OztJQXlDZ0MsZXpCdkJLLEV5QnVCd0I7RUF6QzdEOzs7O0lBMENnQyxlekJ4QkssRXlCd0J3QjtFQTFDN0Q7Ozs7SUEyQ2dDLGV6QnpCSyxFeUJ5QndCO0VBM0M3RDs7OztJQTRDZ0MsZXpCMUJLLEV5QjBCd0I7O0FBZ0Y3RCxrQkFBa0IiLCJmaWxlIjoiYXBwbGljYXRpb24uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGxpbmUtaGVpZ2h0IGZvciBhbGwgaGVhZGluZ3MgaW4gQ2hyb21lIG1vYmlsZSwgRmlyZWZveCxcbiAqIGlPUyBTYWZhcmksIE1pY3Jvc29mdCBFZGdlIGFuZCBJRS5cbiAqL1xuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQSB0aGluIGxheWVyIG9uIHRvcCBvZiBub3JtYWxpemUuY3NzIHRoYXQgcHJvdmlkZXMgYSBzdGFydGluZyBwb2ludCBtb3JlXG4gKiBzdWl0YWJsZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy5cbiAqL1xuLyoqXG4gKiBQcmV2ZW50IG1hcmdpbiBhbmQgYm9yZGVyIGZyb20gYWZmZWN0aW5nIGVsZW1lbnQgd2lkdGguXG4gKiBodHRwczovL2dvby5nbC9wWXRiSzdcbiAqXG4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBSZW1vdmVzIHRoZSBkZWZhdWx0IHNwYWNpbmcgYW5kIGJvcmRlciBmb3IgYXBwcm9wcmlhdGUgZWxlbWVudHMuXG4gKi9cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxuZmlndXJlLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDsgfVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogV29yayBhcm91bmQgYSBGaXJlZm94L0lFIGJ1ZyB3aGVyZSB0aGUgdHJhbnNwYXJlbnQgYGJ1dHRvbmAgYmFja2dyb3VuZFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxuICovXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG5pZnJhbWUge1xuICBib3JkZXI6IDA7IH1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFN1cHByZXNzIHRoZSBmb2N1cyBvdXRsaW5lIG9uIGVsZW1lbnRzIHRoYXQgY2Fubm90IGJlIGFjY2Vzc2VkIHZpYSBrZXlib2FyZC5cbiAqIFRoaXMgcHJldmVudHMgYW4gdW53YW50ZWQgZm9jdXMgb3V0bGluZSBmcm9tIGFwcGVhcmluZyBhcm91bmQgZWxlbWVudHMgdGhhdFxuICogbWlnaHQgc3RpbGwgcmVzcG9uZCB0byBwb2ludGVyIGV2ZW50cy5cbiAqL1xuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cblxuLm1pc3QgLmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkY2ZhYzA7IH1cblxuLm1pc3QgLmNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA5NjhiOyB9XG5cbi5taXN0IC5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODVjNzljOyB9XG5cbi5zcHJpbmcgLmhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGZhYzc7IH1cblxuLnNwcmluZyAuY29udGVudCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjMjQ1NGU7IH1cblxuLnNwcmluZyAuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYjE1ODsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwidGhpblwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL3RoaW4uZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy90aGluLnN2ZyN0aGluXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwibGlnaHRcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbGlnaHQuZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbGlnaHQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9saWdodC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvbGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL2xpZ2h0LnN2ZyNsaWdodFwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCI7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL2Jsb25kLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL2Jsb25kLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvYmxvbmQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL2Jsb25kLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ibG9uZC5zdmcjYmxvbmRcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJub3JtYWxcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbm9ybWFsLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL25vcm1hbC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL25vcm1hbC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvbm9ybWFsLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ub3JtYWwuc3ZnI25vcm1hbFwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIm1lZGl1bVwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9tZWRpdW0uZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvbWVkaXVtLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvbWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9tZWRpdW0udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL21lZGl1bS5zdmcjbWVkaXVtXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiYm9sZFwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL2JvbGQuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ib2xkLnN2ZyNib2xkXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiYmxhY2tcIjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvYmxhY2suZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvYmxhY2suZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9ibGFjay53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvYmxhY2sudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL2JsYWNrLnN2ZyNibGFja1wiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuLyoqIEBkZWZpbmUgQnV0dG9uICovXG4vKipcbiAqIFRoZSBidXR0b24gY2xhc3NlcyBhcmUgYmVzdCBhcHBsaWVkIHRvIGxpbmtzIGFuZCBidXR0b25zLlxuICogVGhlc2UgY29tcG9uZW50cyBjYW4gYmUgdXNlZCBpbiBmb3JtcywgYXMgY2FsbHMgdG8gYWN0aW9uLCBvciBhcyBwYXJ0IG9mIHRoZVxuICogZ2VuZXJhbCBVSSBvZiB0aGUgc2l0ZS9hcHAuXG4gKi9cbi8qKlxuICogMS4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAyLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDMuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIFByZXZlbnQgYnV0dG9uIHRleHQgZnJvbSBiZWluZyBzZWxlY3RhYmxlLlxuICovXG4uQnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogY3VycmVudGNvbG9yO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMyAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuNGVtIDAuNzVlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC8qIDQgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBleGNlc3MgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCtcbiAqL1xuLkJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuLkJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQ7XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjsgfVxuXG4vKipcbiAqIFVJIHN0YXRlc1xuICovXG4uQnV0dG9uOmhvdmVyLFxuLkJ1dHRvbjpmb2N1cyxcbi5CdXR0b246YWN0aXZlIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBvcGFjaXR5OiB2YXIoLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eSk7IH1cblxuLyoqIEBkZWZpbmUgRmxleEVtYmVkICovXG4vKipcbiAqIEZsZXhpYmxlIG1lZGlhIGVtYmVkc1xuICpcbiAqIEZvciB1c2Ugd2l0aCBtZWRpYSBlbWJlZHMg4oCTIHN1Y2ggYXMgdmlkZW9zLCBzbGlkZXNob3dzLCBvciBldmVuIGltYWdlcyDigJNcbiAqIHRoYXQgbmVlZCB0byByZXRhaW4gYSBzcGVjaWZpYyBhc3BlY3QgcmF0aW8gYnV0IGFkYXB0IHRvIHRoZSB3aWR0aCBvZiB0aGVpclxuICogY29udGFpbmluZyBlbGVtZW50LlxuICpcbiAqIEJhc2VkIG9uOiBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9jcmVhdGluZy1pbnRyaW5zaWMtcmF0aW9zLWZvci12aWRlb1xuICovXG4uRmxleEVtYmVkIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4vKipcbiAqIFRoZSBhc3BlY3QtcmF0aW8gaGFjayBpcyBhcHBsaWVkIHRvIGFuIGVtcHR5IGVsZW1lbnQgYmVjYXVzZSBpdCBhbGxvd3NcbiAqIHRoZSBjb21wb25lbnQgdG8gcmVzcGVjdCBgbWF4LWhlaWdodGAuIERlZmF1bHQgYXNwZWN0IHJhdGlvIGlzIDE6MS5cbiAqL1xuLkZsZXhFbWJlZC1yYXRpbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLWJvdHRvbTogMTAwJTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogMzoxIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS0zYnkxIHtcbiAgcGFkZGluZy1ib3R0b206IGNhbGMoMTAwJSAvIDMpOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IDI6MSBhc3BlY3QgcmF0aW9cbiAqL1xuLkZsZXhFbWJlZC1yYXRpby0tMmJ5MSB7XG4gIHBhZGRpbmctYm90dG9tOiA1MCU7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogMTY6OSBhc3BlY3QgcmF0aW9cbiAqL1xuLkZsZXhFbWJlZC1yYXRpby0tMTZieTkge1xuICBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IDQ6MyBhc3BlY3QgcmF0aW9cbiAqL1xuLkZsZXhFbWJlZC1yYXRpby0tNGJ5MyB7XG4gIHBhZGRpbmctYm90dG9tOiA3NSU7IH1cblxuLyoqXG4gKiBGaXQgdGhlIGNvbnRlbnQgdG8gdGhlIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLWNvbnRlbnQge1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi8qKiBAZGVmaW5lIEdyaWQgKi9cbi8qKlxuICogQ29yZSBncmlkIGNvbXBvbmVudFxuICpcbiAqIERPIE5PVCBhcHBseSBkaW1lbnNpb24gb3Igb2Zmc2V0IHV0aWxpdGllcyB0byB0aGUgYEdyaWRgIGVsZW1lbnQuIEFsbCBjZWxsXG4gKiB3aWR0aHMgYW5kIG9mZnNldHMgc2hvdWxkIGJlIGFwcGxpZWQgdG8gY2hpbGQgZ3JpZCBjZWxscy5cbiAqL1xuLyogR3JpZCBjb250YWluZXJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFsbCBjb250ZW50IG11c3QgYmUgY29udGFpbmVkIHdpdGhpbiBjaGlsZCBgR3JpZC1jZWxsYCBlbGVtZW50cy5cbiAqXG4gKiAxLiBBY2NvdW50IGZvciBicm93c2VyIGRlZmF1bHRzIG9mIGVsZW1lbnRzIHRoYXQgbWlnaHQgYmUgdGhlIHJvb3Qgbm9kZSBvZlxuICogICAgdGhlIGNvbXBvbmVudC5cbiAqL1xuLkdyaWQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAvKiAxICovXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIG1hcmdpbjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBNb2RpZmllcjogY2VudGVyIGFsaWduIGFsbCBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IHJpZ2h0IGFsaWduIGFsbCBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBtaWRkbGUtYWxpZ24gZ3JpZCBjZWxsc1xuICovXG4uR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGJvdHRvbS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBhbGxvdyBjZWxscyB0byBlcXVhbCBkaXN0cmlidXRlIHdpZHRoXG4gKlxuICogMS4gUHJvdmlkZSBhbGwgdmFsdWVzIHRvIGF2b2lkIElFMTAgYnVnIHdpdGggc2hvcnRoYW5kIGZsZXhcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsQzdcbiAqXG4gKiAgICBVc2UgYDAlYCB0byBhdm9pZCBidWcgaW4gSUUxMC8xMSB3aXRoIHVuaXRsZXNzIGZsZXggYmFzaXNcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsV3hcbiAqL1xuLkdyaWQtLWZpdCA+IC5HcmlkLWNlbGwge1xuICBmbGV4OiAxIDEgMCU7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBhbGwgY2VsbHMgbWF0Y2ggaGVpZ2h0IG9mIHRhbGxlc3QgY2VsbCBpbiBhIHJvd1xuICovXG4uR3JpZC0tZXF1YWxIZWlnaHQgPiAuR3JpZC1jZWxsIHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBndXR0ZXJzXG4gKi9cbi5HcmlkLS13aXRoR3V0dGVyIHtcbiAgbWFyZ2luOiAwIGNhbGMoLTAuNSAqIDE3LjRweCk7IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqIDE3LjRweCk7IH1cblxuLyogR3JpZCBjZWxsXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBObyBleHBsaWNpdCB3aWR0aCBieSBkZWZhdWx0LiBSZWx5IG9uIGNvbWJpbmluZyBgR3JpZC1jZWxsYCB3aXRoIGEgZGltZW5zaW9uXG4gKiB1dGlsaXR5IG9yIGEgY29tcG9uZW50IGNsYXNzIHRoYXQgZXh0ZW5kcyAnR3JpZCcuXG4gKlxuICogMS4gU2V0IGZsZXggaXRlbXMgdG8gZnVsbCB3aWR0aCBieSBkZWZhdWx0XG4gKiAyLiBGaXggaXNzdWUgd2hlcmUgZWxlbWVudHMgd2l0aCBvdmVyZmxvdyBleHRlbmQgcGFzdCB0aGVcbiAqICAgIGBHcmlkLWNlbGxgIGNvbnRhaW5lciAtIGh0dHBzOi8vZ2l0LmlvL3Z3NW9GXG4gKi9cbi5HcmlkLWNlbGwge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICBmbGV4LWJhc2lzOiAxMDAlO1xuICAvKiAxICovXG4gIG1pbi13aWR0aDogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGhvcml6b250YWxseSBjZW50ZXIgb25lIHVuaXRcbiAqIFNldCBhIHNwZWNpZmljIHVuaXQgdG8gYmUgaG9yaXpvbnRhbGx5IGNlbnRlcmVkLiBEb2Vzbid0IGFmZmVjdFxuICogYW55IG90aGVyIHVuaXRzLiBDYW4gc3RpbGwgY29udGFpbiBhIGNoaWxkIGBHcmlkYCBvYmplY3QuXG4gKi9cbi5HcmlkLWNlbGwtLWNlbnRlciB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi54cy1HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi54cy1HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG4ueHMtR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi54cy1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuXG4ueHMtR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnNtLUdyaWQtLWFsaWduQ2VudGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuc20tR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAuc20tR3JpZC0tYWxpZ25NaWRkbGUge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnNtLUdyaWQtLWFsaWduQm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLnNtLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAubWQtR3JpZC0tYWxpZ25DZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5tZC1HcmlkLS1hbGlnblJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC5tZC1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubWQtR3JpZC0tYWxpZ25Cb3R0b20ge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAubWQtR3JpZC1jZWxsLS1jZW50ZXIge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIC5sZy1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmxnLUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLmxnLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5sZy1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5sZy1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC54bC1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnhsLUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnhsLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC54bC1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC54bC1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTcwMHB4KSB7XG4gIC5zdS1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnN1LUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnN1LUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5zdS1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5zdS1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlciB7XG4gIG1hcmdpbjogMCAtMTUuNDY2NjdweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlciB7XG4gICAgICBtYXJnaW46IDAgLTQ2LjRweDsgfSB9XG5cbi5HcmlkLS13aXRoR3V0dGVyID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgMTUuNDY2NjdweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlciA+IC5HcmlkLWNlbGwge1xuICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtIHtcbiAgbWFyZ2luOiAwIC01LjE1NTU2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXJTbSB7XG4gICAgICBtYXJnaW46IDAgLTE1LjQ2NjY3cHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgNS4xNTU1NnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5HcmlkLS13aXRoR3V0dGVyU20gPiAuR3JpZC1jZWxsIHtcbiAgICAgIHBhZGRpbmc6IDAgMTUuNDY2NjdweDsgfSB9XG5cbi8qKlxuICAqIFNpbXBsZSBwYWdlLWxldmVsIHNldHVwIGZyb20gSW51aXRDU1MuXG4gICpcbiAgKiAxLiBTZXQgdGhlIGRlZmF1bHQgYGZvbnQtc2l6ZWAgYW5kIGBsaW5lLWhlaWdodGAgZm9yIHRoZSBlbnRpcmUgcHJvamVjdCxcbiAgKiAgICBzb3VyY2VkIGZyb20gb3VyIGRlZmF1bHQgdmFyaWFibGVzLiBUaGUgYGZvbnQtc2l6ZWAgaXMgY2FsY3VsYXRlZCB0byBleGlzdFxuICAqICAgIGluIGVtcywgdGhlIGBsaW5lLWhlaWdodGAgaXMgY2FsY3VsYXRlZCB0byBleGlzdCB1bml0bGVzc2x5LlxuICAqIDIuIEZvcmNlIHNjcm9sbGJhcnMgdG8gYWx3YXlzIGJlIHZpc2libGUgdG8gcHJldmVudCBhd2t3YXJkIOKAmGp1bXBz4oCZIHdoZW5cbiAgKiAgICBuYXZpZ2F0aW5nIGJldHdlZW4gcGFnZXMgdGhhdCBkby9kbyBub3QgaGF2ZSBlbm91Z2ggY29udGVudCB0byBwcm9kdWNlXG4gICogICAgc2Nyb2xsYmFycyBuYXR1cmFsbHkuXG4gICogMy4gRW5zdXJlIHRoZSBwYWdlIGFsd2F5cyBmaWxscyBhdCBsZWFzdCB0aGUgZW50aXJlIGhlaWdodCBvZiB0aGUgdmlld3BvcnQuXG4gICovXG5odG1sIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRmZDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLyogMyAqL1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIC8qIDIgKi8gfVxuXG5hIHtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIGE6aG92ZXIsIGE6YWN0aXZlLCBhOmZvY3VzIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yOyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5nbS1zdHlsZSBpbWcsXG5pbWdbd2lkdGhdLFxuaW1nW2hlaWdodF0ge1xuICBtYXgtd2lkdGg6IG5vbmU7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuYmxvY2txdW90ZSxcbnVsLCBvbCwgbGksIGRsLCBkZFxucCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbixcbnRhYmxlLCB0aCwgdGQsIGNhcHRpb25cbnByZSwgc21hbGwsXG5lbSwgYiB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuaHRtbCB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJub3JtYWxcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB0ZXh0LXJlbmRlcmluZzogZ2VvbWV0cmljUHJlY2lzaW9uO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgfVxuXG4vKiB1bmNzczppZ25vcmUgKi9cbnVsLCBvbCwgbGksIGRsLFxuYmxvY2txdW90ZSwgcCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZmllbGRzZXQsXG5wcmUge1xuICBtYXJnaW4tYm90dG9tOiAyOXB4OyB9XG5cbi5vLXBvc0Fic29sdXRlQ2VudGVyIHtcbiAgbGVmdDogNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuXG4uby1wb3NGaXhlZENlbnRlciB7XG4gIGxlZnQ6IDUwJTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cblxuLm8tcG9zRnVsbFNjcmVlbiB7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7IH1cblxuLm8tcG9zQWJzb2x1dGVDZW50ZXJBbHQge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwOyB9XG5cbi5vLXBvc0Z1bGxTY3JlZW4sXG4uby1wb3NGaXhlZENlbnRlciB7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4uby1jb250YWluZXIge1xuICBoZWlnaHQ6IGluaGVyaXQ7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDgwMHB4O1xuICBwYWRkaW5nOiAwIDM0LjhweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5vLWNvbnRhaW5lcjpiZWZvcmUsIC5vLWNvbnRhaW5lcjphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLm8tY29udGFpbmVyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICAuby1jb250YWluZXIgcDpsYXN0LWNoaWxkLFxuICAuby1jb250YWluZXIgcDpsYXN0LWNoaWxkIGEsXG4gIC5vLWNvbnRhaW5lciBsaTpsYXN0LWNoaWxkLFxuICAuby1jb250YWluZXIgbGk6bGFzdC1jaGlsZCBhLFxuICAuby1jb250YWluZXIgb2w6bGFzdC1jaGlsZCxcbiAgLm8tY29udGFpbmVyIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuby1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuby1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMDsgfSB9XG4gIC5vLWNvbnRhaW5lci0tbWQge1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAwIDM0LjhweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuby1jb250YWluZXItLW1kOmJlZm9yZSwgLm8tY29udGFpbmVyLS1tZDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLm8tY29udGFpbmVyLS1tZDphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5vLWNvbnRhaW5lci0tbWQgcDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgcDpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS1tZCBsaTpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgbGk6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgb2w6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLW1kIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLW1kIHtcbiAgICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1tZCB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuby1jb250YWluZXItLWxnIHtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiA5NjBweDtcbiAgICBwYWRkaW5nOiAwIDM0LjhweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuby1jb250YWluZXItLWxnOmJlZm9yZSwgLm8tY29udGFpbmVyLS1sZzphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gICAgLm8tY29udGFpbmVyLS1sZzphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5vLWNvbnRhaW5lci0tbGcgcDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbGcgcDpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS1sZyBsaTpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbGcgbGk6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0tbGcgb2w6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLWxnIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLWxnIHtcbiAgICAgICAgcGFkZGluZzogMCA0Ni40cHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1sZyB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuICAuby1jb250YWluZXItLXhsIHtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMTAwcHg7XG4gICAgcGFkZGluZzogMCAzNC44cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLm8tY29udGFpbmVyLS14bDpiZWZvcmUsIC5vLWNvbnRhaW5lci0teGw6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAgIC5vLWNvbnRhaW5lci0teGw6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuby1jb250YWluZXItLXhsIHA6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXhsIHA6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0teGwgbGk6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXhsIGxpOmxhc3QtY2hpbGQgYSxcbiAgICAuby1jb250YWluZXItLXhsIG9sOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS14bCBvbDpsYXN0LWNoaWxkIGEge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8tY29udGFpbmVyLS14bCB7XG4gICAgICAgIHBhZGRpbmc6IDAgNDYuNHB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAgIC5vLWNvbnRhaW5lci0teGwge1xuICAgICAgICBwYWRkaW5nOiAwOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLm8tY29udGFpbmVyLS1oZXJvIHtcbiAgICAgIHBhZGRpbmc6IDAgOTIuOHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLm8tY29udGFpbmVyLS1oZXJvIHtcbiAgICAgIHBhZGRpbmc6IDAgNDYuNHB4OyB9IH1cbiAgLm8tY29udGFpbmVyLS1zdXBlciB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMzQuOHB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLXN1cGVyIHtcbiAgICAgICAgcGFkZGluZzogMCA5Mi44cHg7IH0gfVxuXG5bZGF0YS1tb2RhbC10b2dnbGVdLFxuW2RhdGEtdG9nZ2xlLWZvbGRdLFxuW2RhdGEtZGlzbWlzc10ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IHNxdWFyZTtcbiAgbWFyZ2luLWxlZnQ6IDM0LjhweDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbm9sIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsOyB9XG5cbmxpIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBsaSA+IHVsLFxuICBsaSA+IG9sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5vLWxpc3Qge1xuICBtYXJnaW4tbGVmdDogMzQuOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxuLm8tbGlzdENsZWFuIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbi5vLWxpc3RJbmxpbmUge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgLm8tbGlzdElubGluZSBsaSxcbiAgLm8tbGlzdElubGluZSBkaXYge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5vLWxpc3RJbmxpbmUgbGk6bm90KDpsYXN0LWNoaWxkKSxcbiAgICAuby1saXN0SW5saW5lIGRpdjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNS44cHg7IH1cblxuYSB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSwgYTpmb2N1cyB7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgfVxuXG4uby1saW5rQnVyaWVkIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxMS42cHg7IH1cbiAgLm8tbGlua0J1cmllZDpob3ZlciAuby1saW5rQnVyaWVkVGFyZ2V0LCAuby1saW5rQnVyaWVkOmFjdGl2ZSAuby1saW5rQnVyaWVkVGFyZ2V0LCAuby1saW5rQnVyaWVkOmZvY3VzIC5vLWxpbmtCdXJpZWRUYXJnZXQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGFiZmY7IH1cblxuLm8tbGlua0J1cmllZFRhcmdldCB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgY29sb3I6ICMxNTE1MTU7IH1cblxuLm8tY292ZXJJbWFnZSB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBjb250ZW50OiBub25lOyB9XG5cbi5vLWNvdmVySW1hZ2UtLWRhcmsge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTsgfVxuICAuby1jb3ZlckltYWdlLS1kYXJrOmJlZm9yZSB7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzAwYWJmZiAwJSwgcmdiYSgwLCAxNzEsIDI1NSwgMC4yKSAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIG9wYWNpdHk6IDE7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5vLWNvdmVySW1hZ2UtLWJsZW5kcyB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAwOyB9IH1cblxuLm8tY29udGFpbkltYWdlIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbnRlbnQ6IG5vbmU7XG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsgfVxuXG4uby1maXRJbWFnZUNvdmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLkZsZXhFbWJlZC1maXRJbWFnZSB7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5GbGV4RW1iZWQtY29udGVudC0tZGFyazpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjMDBhYmZmIDAlLCByZ2JhKDAsIDE3MSwgMjU1LCAwLjIpIDEwMCUpO1xuICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICBjb250ZW50OiBcIiBcIjtcbiAgb3BhY2l0eTogMTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7IH1cblxuLmMtdGV4dC0tc20ge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7IH0gfVxuICAuYy10ZXh0LS1zbSA+IGxpLFxuICAuYy10ZXh0LS1zbSA+IGxpIGEsXG4gIC5jLXRleHQtLXNtID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAxOXB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dCB7XG4gICAgICBmb250LXNpemU6IDI3cHg7IH0gfVxuICAuYy10ZXh0ID4gbGksXG4gIC5jLXRleHQgPiBsaSBhLFxuICAuYy10ZXh0ID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLW1lZGl1bSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE5cHg7XG4gIGNvbG9yOiBncmF5OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLW1lZGl1bSB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy10ZXh0LS1tZWRpdW0ge1xuICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgLmMtdGV4dC0tbWVkaXVtID4gbGksXG4gIC5jLXRleHQtLW1lZGl1bSA+IGxpIGEsXG4gIC5jLXRleHQtLW1lZGl1bSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LS1pbnRybyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE5cHg7XG4gIGNvbG9yOiBncmF5O1xuICBtYXJnaW4tYm90dG9tOiAxMS42cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC0taW50cm8ge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dC0taW50cm8ge1xuICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgLmMtdGV4dC0taW50cm8gPiBsaSxcbiAgLmMtdGV4dC0taW50cm8gPiBsaSBhLFxuICAuYy10ZXh0LS1pbnRybyA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LS1sZyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGZvbnQtc2l6ZTogMjdweDtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1sZyB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy10ZXh0LS1sZyB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAuYy10ZXh0LS1sZyA+IGxpLFxuICAuYy10ZXh0LS1sZyA+IGxpIGEsXG4gIC5jLXRleHQtLWxnID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLXRleHQtLWxnID4gc3Ryb25nIHtcbiAgICBmb250LWZhbWlseTogXCJleHRyYWJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgdGV4dC10cmFuc2Zvcm06IGluaXRpYWw7IH1cblxuLmMtdGV4dC0tbWV0YSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dC0tbWV0YSB7XG4gICAgICBmb250LXNpemU6IDE3cHg7IH0gfVxuICAuYy10ZXh0LS1tZXRhID4gbGksXG4gIC5jLXRleHQtLW1ldGEgPiBsaSBhLFxuICAuYy10ZXh0LS1tZXRhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLXRleHQtLW1ldGEgPiBhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7IH1cbiAgICAuYy10ZXh0LS1tZXRhID4gYTpob3ZlciwgLmMtdGV4dC0tbWV0YSA+IGE6YWN0aXZlLCAuYy10ZXh0LS1tZXRhID4gYTpmb2N1cyB7XG4gICAgICBib3JkZXItY29sb3I6IGdyYXkgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1tZXRhIHtcbiAgICAgIG1hcmdpbjogYXV0bzsgfSB9XG5cbi5jLWNpdGUge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAxOXB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFwic2VtaWJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMTJlbTtcbiAgbWFyZ2luLXRvcDogMTEuNnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWNpdGUge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtY2l0ZSB7XG4gICAgICBmb250LXNpemU6IDI3cHg7IH0gfVxuICAuYy1jaXRlID4gbGksXG4gIC5jLWNpdGUgPiBsaSBhLFxuICAuYy1jaXRlID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLWNpdGUgYSB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7IH1cblxuLmMtdGV4dC0tbGcgPiBzdHJvbmcge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIGZvbnQtZmFtaWx5OiBcImJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsOyB9XG5cbmEgPiBzdHJvbmcge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4uYy10ZXh0LWJsb2NrID4gKiB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE5cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC1ibG9jayA+ICoge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtdGV4dC1ibG9jayA+ICoge1xuICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgLmMtdGV4dC1ibG9jayA+ICogPiBsaSxcbiAgLmMtdGV4dC1ibG9jayA+ICogPiBsaSBhLFxuICAuYy10ZXh0LWJsb2NrID4gKiA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0LWJsb2NrLS1mb290ZXIge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG4gIG1hcmdpbjogMDsgfVxuICAuYy10ZXh0LWJsb2NrLS1mb290ZXI6OmJlZm9yZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTMsIDI1MywgMjUzLCAwLjIpO1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMXB4O1xuICAgIG1hcmdpbjogMjMuMnB4IDAgMjYuNjhweDtcbiAgICB3aWR0aDogMi41JTsgfVxuICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICBjb2xvcjogIzE1MTUxNTtcbiAgICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBsaW5lLWhlaWdodDogMS40NTtcbiAgICBmb250LXNpemU6IDE5cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqID4gbGksXG4gICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiA+IGxpIGEsXG4gICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiA+IGEge1xuICAgICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLWl0ZW1UYWcge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTcuNHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWxpc3QtLWl0ZW1UYWcge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtbGlzdC0taXRlbVRhZyB7XG4gICAgICBmb250LXNpemU6IDE3cHg7IH0gfVxuICAuYy1saXN0LS1pdGVtVGFnID4gbGksXG4gIC5jLWxpc3QtLWl0ZW1UYWcgPiBsaSBhLFxuICAuYy1saXN0LS1pdGVtVGFnID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLW1ldGEge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBjb2xvcjogZ3JheTtcbiAgbWFyZ2luLWJvdHRvbTogMjlweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1saXN0LS1tZXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLWxpc3QtLW1ldGEge1xuICAgICAgZm9udC1zaXplOiAxN3B4OyB9IH1cbiAgLmMtbGlzdC0tbWV0YSA+IGxpLFxuICAuYy1saXN0LS1tZXRhID4gbGkgYSxcbiAgLmMtbGlzdC0tbWV0YSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1saXN0LS1tZXRhLXRpdGxlIHtcbiAgY29sb3I6ICMxNTE1MTUgIWltcG9ydGFudDtcbiAgbWFyZ2luOiAyOXB4IDAgMTQuNXB4ICFpbXBvcnRhbnQ7IH1cbiAgLmMtbGlzdC0tbWV0YS10aXRsZTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbnVsLCBvbCwgZGwsXG5wLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCwgZmlnY2FwdGlvbixcbnByZSwgYSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE5cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgdWwsIG9sLCBkbCxcbiAgICBwLCBhZGRyZXNzLFxuICAgIHRhYmxlLCB0aW1lLFxuICAgIGZpZWxkc2V0LCBmaWdjYXB0aW9uLFxuICAgIHByZSwgYSB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICB1bCwgb2wsIGRsLFxuICAgIHAsIGFkZHJlc3MsXG4gICAgdGFibGUsIHRpbWUsXG4gICAgZmllbGRzZXQsIGZpZ2NhcHRpb24sXG4gICAgcHJlLCBhIHtcbiAgICAgIGZvbnQtc2l6ZTogMjdweDsgfSB9XG4gIHVsID4gbGksXG4gIHVsID4gbGkgYSxcbiAgdWwgPiBhLCBvbCA+IGxpLFxuICBvbCA+IGxpIGEsXG4gIG9sID4gYSwgZGwgPiBsaSxcbiAgZGwgPiBsaSBhLFxuICBkbCA+IGEsXG4gIHAgPiBsaSxcbiAgcCA+IGxpIGEsXG4gIHAgPiBhLCBhZGRyZXNzID4gbGksXG4gIGFkZHJlc3MgPiBsaSBhLFxuICBhZGRyZXNzID4gYSxcbiAgdGFibGUgPiBsaSxcbiAgdGFibGUgPiBsaSBhLFxuICB0YWJsZSA+IGEsIHRpbWUgPiBsaSxcbiAgdGltZSA+IGxpIGEsXG4gIHRpbWUgPiBhLFxuICBmaWVsZHNldCA+IGxpLFxuICBmaWVsZHNldCA+IGxpIGEsXG4gIGZpZWxkc2V0ID4gYSwgZmlnY2FwdGlvbiA+IGxpLFxuICBmaWdjYXB0aW9uID4gbGkgYSxcbiAgZmlnY2FwdGlvbiA+IGEsXG4gIHByZSA+IGxpLFxuICBwcmUgPiBsaSBhLFxuICBwcmUgPiBhLCBhID4gbGksXG4gIGEgPiBsaSBhLFxuICBhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbmVtLFxuLnUtdGV4dEVtIHtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1mYW1pbHk6IFwiYm9sZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuXG5iLFxuc3Ryb25nLFxuLnUtdGV4dEJvbGQge1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LWZhbWlseTogXCJib2xkXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG5cbmJsb2NrcXVvdGUsXG4uQmxvY2txdW90ZSB7XG4gIGNvbG9yOiBncmF5O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luLWJvdHRvbTogMjlweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICBibG9ja3F1b3RlLFxuICAgIC5CbG9ja3F1b3RlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDsgfSB9XG5cbi5jLWRpc3BsYXkge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMDVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDQwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtZGlzcGxheSB7XG4gICAgICBmb250LXNpemU6IDYwcHg7IH0gfVxuICAuYy1kaXNwbGF5ID4gbGksXG4gIC5jLWRpc3BsYXkgPiBsaSBhLFxuICAuYy1kaXNwbGF5ID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLkZvb3RlciAuYy1kaXNwbGF5IHtcbiAgICBtYXJnaW4tYm90dG9tOiAyOXB4OyB9XG5cbi5jLWhlYWRsaW5lIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDE1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDR2aDtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAuYy1oZWFkbGluZSA+IGxpLFxuICAuYy1oZWFkbGluZSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtaGVhZGxpbmUtLXNtIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRsaW5lLS1zbSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1oZWFkbGluZS0tc20ge1xuICAgICAgZm9udC1zaXplOiAzNnB4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXNtID4gbGksXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lLS1zbVNlbWkge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxMmVtO1xuICBsaW5lLWhlaWdodDogMS4zO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiA0dmg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtZmFtaWx5OiBcInNlbWlib2xkXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRsaW5lLS1zbVNlbWkge1xuICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLXNtU2VtaSB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAuYy1oZWFkbGluZS0tc21TZW1pID4gbGksXG4gIC5jLWhlYWRsaW5lLS1zbVNlbWkgPiBsaSBhLFxuICAuYy1oZWFkbGluZS0tc21TZW1pID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtaGVhZGxpbmUtLXhzIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLXhzIHtcbiAgICAgIGZvbnQtc2l6ZTogMjdweDsgfSB9XG4gIC5jLWhlYWRsaW5lLS14cyA+IGxpLFxuICAuYy1oZWFkbGluZS0teHMgPiBsaSBhLFxuICAuYy1oZWFkbGluZS0teHMgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1oZWFkbGluZS0teHNTZW1pIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMTJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWJvdHRvbTogNHZoO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtZmFtaWx5OiBcInNlbWlib2xkXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLWhlYWRsaW5lLS14c1NlbWkge1xuICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXhzU2VtaSA+IGxpLFxuICAuYy1oZWFkbGluZS0teHNTZW1pID4gbGkgYSxcbiAgLmMtaGVhZGxpbmUtLXhzU2VtaSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lIGVtIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTE5OXB4KSB7XG4gIHNwYW4udS1sZy1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiBhdXRvOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIHNwYW4udS1zbS1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiBhdXRvOyB9IH1cblxuLnUtdGV4dFd0THQge1xuICBmb250LWZhbWlseTogXCJsaWdodFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyB9XG5cbi51LXRleHRXdFJnIHtcbiAgZm9udC1mYW1pbHk6IFwibm9ybWFsXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dFd0TWQge1xuICBmb250LWZhbWlseTogXCJtZWRpdW1cIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgfVxuXG4udS10ZXh0V3RTZW1pIHtcbiAgZm9udC1mYW1pbHk6IFwic2VtaWJvbGRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgfVxuXG5oMiArIGgzIHtcbiAgbWFyZ2luLXRvcDogNC42NHB4OyB9XG5cbmgzICsgcCB7XG4gIG1hcmdpbi10b3A6IDkuMjhweDsgfVxuXG5odG1sIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjU5ZjsgfVxuXG4uYy1jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRmZDtcbiAgcGFkZGluZzogMTJ2aCAwOyB9XG5cbi5jLWhlYWRlciB7XG4gIHBhZGRpbmc6IDZ2aCAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmMtaGVhZGVyLXRleHQge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS40NTtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtaGVhZGVyLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyNXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmMtaGVhZGVyLXRleHQge1xuICAgICAgZm9udC1zaXplOiAyOHB4OyB9IH1cbiAgLmMtaGVhZGVyLXRleHQgPiBsaSxcbiAgLmMtaGVhZGVyLXRleHQgPiBsaSBhLFxuICAuYy1oZWFkZXItdGV4dCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICAuYy1oZWFkZXItdGV4dDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcqJztcbiAgICBmb250LWZhbWlseTogXCJsaWdodFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE5MCU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC02LjUlO1xuICAgIHRvcDogLTYuMjUlOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1oZWFkZXItdGV4dDpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtMy43NSU7XG4gICAgICAgIHRvcDogLTEzJTsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICAuYy1oZWFkZXItdGV4dDpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtNC41JTtcbiAgICAgICAgdG9wOiAtMTUlOyB9IH1cbiAgLmMtaGVhZGVyLXRleHQgYSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyMSwgMjEsIDIxLCAwKSA1MCUsIHJnYmEoMjEsIDIxLCAyMSwgMC43KSA1MCUpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLmMtaGVhZGVyLXRleHQgYTpob3ZlciwgLmMtaGVhZGVyLXRleHQgYTphY3RpdmUsIC5jLWhlYWRlci10ZXh0IGE6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5Qb3N0ICsgLlBvc3Qge1xuICBtYXJnaW4tdG9wOiAxMnZoOyB9XG5cbi5Qb3N0LWNvbnRlbnQgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjEsIDIxLCAyMSwgMCkgNTAlLCByZ2JhKDIxLCAyMSwgMjEsIDAuNykgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuUG9zdC1jb250ZW50IGE6aG92ZXIsIC5Qb3N0LWNvbnRlbnQgYTphY3RpdmUsIC5Qb3N0LWNvbnRlbnQgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLlBvc3QtY29udGVudCBmaWd1cmUge1xuICBtYXJnaW46IDM2LjI1cHggMCA0My41cHg7IH1cblxuLlBvc3QtY29udGVudCBibG9ja3F1b3RlIHAge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0MywgMjQyLCAyNDEsIDAuNyk7XG4gIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAwMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgcGFkZGluZzogMTMuOTJweCAxNy40cHggMTEuNnB4O1xuICBmb250LXNpemU6IDE2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtY29udGVudCBibG9ja3F1b3RlIHAge1xuICAgICAgZm9udC1zaXplOiAyMXB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLlBvc3QtY29udGVudCBibG9ja3F1b3RlIHAge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9IH1cblxuLlBvc3QtZGF0ZSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE5cHg7XG4gIGNvbG9yOiAjYjNiM2IzO1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiA2Ljk2cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtZGF0ZSB7XG4gICAgICBmb250LXNpemU6IDI0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuUG9zdC1kYXRlIHtcbiAgICAgIGZvbnQtc2l6ZTogMjdweDsgfSB9XG4gIC5Qb3N0LWRhdGUgPiBsaSxcbiAgLlBvc3QtZGF0ZSA+IGxpIGEsXG4gIC5Qb3N0LWRhdGUgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLlBvc3QtaW1hZ2Uge1xuICBtYXJnaW4tYm90dG9tOiAyMy4ycHg7IH1cblxuLlBvc3QtbWV0YSB7XG4gIGNvbG9yOiAjYjNiM2IzO1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGJkYmRiO1xuICBtYXJnaW4tdG9wOiAzMS45cHg7XG4gIHBhZGRpbmctdG9wOiAxMS42cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtbWV0YSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuUG9zdC1tZXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTdweDsgfSB9XG4gIC5Qb3N0LW1ldGEgPiBsaSxcbiAgLlBvc3QtbWV0YSA+IGxpIGEsXG4gIC5Qb3N0LW1ldGEgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLlBvc3QtbWV0YSBzcGFuIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiA3NSU7XG4gICAgbWFyZ2luOiAwIDUuOHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtM3B4KTsgfVxuXG4uUG9zdC10YWdzIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMmVtO1xuICBsaW5lLWhlaWdodDogMS42O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjYjNiM2IzO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLlBvc3QtdGFncyB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuUG9zdC10YWdzIHtcbiAgICAgIGZvbnQtc2l6ZTogMTdweDsgfSB9XG4gIC5Qb3N0LXRhZ3MgPiBsaSxcbiAgLlBvc3QtdGFncyA+IGxpIGEsXG4gIC5Qb3N0LXRhZ3MgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLlBvc3QtdGFncyA+IGEge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMTc5LCAxNzksIDE3OSwgMCkgNTAlLCAjYjNiM2IzIDUwJSk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMXB4IDFweDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuUG9zdC10YWdzID4gYTpob3ZlciwgLlBvc3QtdGFncyA+IGE6YWN0aXZlLCAuUG9zdC10YWdzID4gYTpmb2N1cyB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLlBvc3QtaGVybyB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBjb250ZW50OiBub25lOyB9XG4gIC5Qb3N0LWhlcm8gaDEge1xuICAgIG1hcmdpbi1ib3R0b206IDQuNjRweDsgfVxuICAuUG9zdC1oZXJvIHAge1xuICAgIG1hcmdpbi1ib3R0b206IDguMTJweDsgfVxuXG4uUG9zdC1oZXJvLS1pbnZlcnNlIGgxLFxuLlBvc3QtaGVyby0taW52ZXJzZSBwLFxuLlBvc3QtaGVyby0taW52ZXJzZSB1bCB7XG4gIGNvbG9yOiAjZjBmMGYwICFpbXBvcnRhbnQ7IH1cblxuLnQtYnV0dG9uIHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMXB4O1xuICBwYWRkaW5nOiAwIDE3LjRweDtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMDVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgZm9udC1zaXplOiAyN3B4O1xuICBsaW5lLWhlaWdodDogNTVweDtcbiAgcGFkZGluZy1ib3R0b206IDNweDsgfVxuICAudC1idXR0b25bZGlzYWJsZWRdIHtcbiAgICBib3JkZXItY29sb3I6ICNiM2IzYjM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2IzYjNiMztcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIG9wYWNpdHk6IDAuNDsgfVxuICAudC1idXR0b246aG92ZXIsIC50LWJ1dHRvbjphY3RpdmUsIC50LWJ1dHRvbjpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudC1idXR0b24ge1xuICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLnQtYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDsgfSB9XG4gIC50LWJ1dHRvbiA+IGxpLFxuICAudC1idXR0b24gPiBsaSBhLFxuICAudC1idXR0b24gPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLnQtYnV0dG9uOmhvdmVyLCAudC1idXR0b246YWN0aXZlLCAudC1idXR0b246Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGFiZmY7XG4gICAgYm9yZGVyLWNvbG9yOiAjMDBhYmZmO1xuICAgIGNvbG9yOiAjRkZGOyB9XG5cbi50LWJ1dHRvbi0tYnJhbmQge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIHBhZGRpbmc6IDAgMTcuNHB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFwiYmxvbmRcIiwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAwNWVtO1xuICBsaW5lLWhlaWdodDogMS40O1xuICBmb250LXNpemU6IDI3cHg7XG4gIGxpbmUtaGVpZ2h0OiA1NXB4O1xuICBwYWRkaW5nLWJvdHRvbTogM3B4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBhYmZmO1xuICBib3JkZXItY29sb3I6ICMwMGFiZmY7IH1cbiAgLnQtYnV0dG9uLS1icmFuZFtkaXNhYmxlZF0ge1xuICAgIGJvcmRlci1jb2xvcjogI2IzYjNiMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNiM2IzO1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC50LWJ1dHRvbi0tYnJhbmQ6aG92ZXIsIC50LWJ1dHRvbi0tYnJhbmQ6YWN0aXZlLCAudC1idXR0b24tLWJyYW5kOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC50LWJ1dHRvbi0tYnJhbmQge1xuICAgICAgZm9udC1zaXplOiAzMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLnQtYnV0dG9uLS1icmFuZCB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAudC1idXR0b24tLWJyYW5kID4gbGksXG4gIC50LWJ1dHRvbi0tYnJhbmQgPiBsaSBhLFxuICAudC1idXR0b24tLWJyYW5kID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC50LWJ1dHRvbi0tYnJhbmQ6aG92ZXIsIC50LWJ1dHRvbi0tYnJhbmQ6YWN0aXZlLCAudC1idXR0b24tLWJyYW5kOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBhYmZmO1xuICAgIGJvcmRlci1jb2xvcjogIzAwYWJmZjtcbiAgICBjb2xvcjogI0ZGRjsgfVxuXG4udC1idXR0b24tLXJldiB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgcGFkZGluZzogMCAxNy40cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogXCJibG9uZFwiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGZvbnQtc2l6ZTogMjdweDtcbiAgbGluZS1oZWlnaHQ6IDU1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7IH1cbiAgLnQtYnV0dG9uLS1yZXZbZGlzYWJsZWRdIHtcbiAgICBib3JkZXItY29sb3I6ICNiM2IzYjM7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2IzYjNiMztcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIG9wYWNpdHk6IDAuNDsgfVxuICAudC1idXR0b24tLXJldjpob3ZlciwgLnQtYnV0dG9uLS1yZXY6YWN0aXZlLCAudC1idXR0b24tLXJldjpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudC1idXR0b24tLXJldiB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAudC1idXR0b24tLXJldiB7XG4gICAgICBmb250LXNpemU6IDM2cHg7IH0gfVxuICAudC1idXR0b24tLXJldiA+IGxpLFxuICAudC1idXR0b24tLXJldiA+IGxpIGEsXG4gIC50LWJ1dHRvbi0tcmV2ID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC50LWJ1dHRvbi0tcmV2OmhvdmVyLCAudC1idXR0b24tLXJldjphY3RpdmUsIC50LWJ1dHRvbi0tcmV2OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBhYmZmO1xuICAgIGJvcmRlci1jb2xvcjogIzAwYWJmZjtcbiAgICBjb2xvcjogI0ZGRjsgfVxuXG4udC1idXR0b24tLWZ1bGwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi50LWJ1dHRvbkNsb3NlIHtcbiAgY29sb3I6ICMwMGFiZmY7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDExLjZweDtcbiAgdG9wOiAxMS42cHg7XG4gIHotaW5kZXg6IDEwMDA7XG4gIHJpZ2h0OiAyMy4ycHg7XG4gIHRvcDogMzFweDsgfVxuICAudC1idXR0b25DbG9zZTpob3ZlciwgLnQtYnV0dG9uQ2xvc2U6YWN0aXZlLCAudC1idXR0b25DbG9zZTpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuXG5pbnB1dDpob3ZlciwgaW5wdXQ6YWN0aXZlLCBpbnB1dDpmb2N1cyxcbnRleHRhcmVhOmhvdmVyLFxudGV4dGFyZWE6YWN0aXZlLFxudGV4dGFyZWE6Zm9jdXMsXG5zZWxlY3Q6aG92ZXIsXG5zZWxlY3Q6YWN0aXZlLFxuc2VsZWN0OmZvY3VzLFxubGFiZWw6aG92ZXIsXG5sYWJlbDphY3RpdmUsXG5sYWJlbDpmb2N1cyB7XG4gIG91dGxpbmU6IDA7IH1cblxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHJlc2l6ZTogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBcImJsb25kXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMDVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgZm9udC1zaXplOiAyN3B4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAxNzEsIDI1NSwgMC40KTtcbiAgbGluZS1oZWlnaHQ6IDU1cHg7XG4gIHBhZGRpbmc6IDAgMCAzcHggMDtcbiAgdHJhbnNpdGlvbjogYWxsIDUwMG1zIGVhc2Utb3V0OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICAgIHRleHRhcmVhIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICAgIHRleHRhcmVhIHtcbiAgICAgIGZvbnQtc2l6ZTogMzZweDsgfSB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdID4gbGksXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0gPiBhLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0gPiBsaSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdID4gYSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSA+IGxpLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdID4gbGkgYSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSA+IGEsXG4gIHRleHRhcmVhID4gbGksXG4gIHRleHRhcmVhID4gbGkgYSxcbiAgdGV4dGFyZWEgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gICAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICAgIGlucHV0W3R5cGU9XCJ0ZWxcIl0sXG4gICAgdGV4dGFyZWEge1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAxNzEsIDI1NSwgMC40KTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgIHBhZGRpbmctbGVmdDogMTEuNnB4OyB9IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06LXdlYmtpdC1hdXRvZmlsbCxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi13ZWJraXQtYXV0b2ZpbGwsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06LXdlYmtpdC1hdXRvZmlsbCxcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbCB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCA2LjI1cmVtICNmN2Y3ZjcgaW5zZXQ7XG4gICAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6ICMwMGFiZmY7XG4gICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICB0ZXh0YXJlYTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICMwMGFiZmY7IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgdGV4dGFyZWE6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICMwMGFiZmY7IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06Oi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgdGV4dGFyZWE6Oi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAjMDBhYmZmOyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIHRleHRhcmVhOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICMwMGFiZmY7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgTk9STUFMSVpFXG4vLyAgIDE2MDYyOVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBsaW5lLWhlaWdodCBmb3IgYWxsIGhlYWRpbmdzIGluIENocm9tZSBtb2JpbGUsIEZpcmVmb3gsXG4gKiBpT1MgU2FmYXJpLCBNaWNyb3NvZnQgRWRnZSBhbmQgSUUuXG4gKi9cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEJBU0Vcbi8vICAgVmVyc2lvbiAyLjAuMCAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy9iYXNlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8qKlxuICogQSB0aGluIGxheWVyIG9uIHRvcCBvZiBub3JtYWxpemUuY3NzIHRoYXQgcHJvdmlkZXMgYSBzdGFydGluZyBwb2ludCBtb3JlXG4gKiBzdWl0YWJsZSBmb3Igd2ViIGFwcGxpY2F0aW9ucy5cbiAqL1xuXG4vKipcbiAqIFByZXZlbnQgbWFyZ2luIGFuZCBib3JkZXIgZnJvbSBhZmZlY3RpbmcgZWxlbWVudCB3aWR0aC5cbiAqIGh0dHBzOi8vZ29vLmdsL3BZdGJLN1xuICpcbiAqL1xuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIHRoZSBkZWZhdWx0IHNwYWNpbmcgYW5kIGJvcmRlciBmb3IgYXBwcm9wcmlhdGUgZWxlbWVudHMuXG4gKi9cblxuYmxvY2txdW90ZSxcbmRsLFxuZGQsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5maWd1cmUsXG5wLFxucHJlIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG59XG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmlmcmFtZSB7XG4gIGJvcmRlcjogMDtcbn1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBTdXBwcmVzcyB0aGUgZm9jdXMgb3V0bGluZSBvbiBlbGVtZW50cyB0aGF0IGNhbm5vdCBiZSBhY2Nlc3NlZCB2aWEga2V5Ym9hcmQuXG4gKiBUaGlzIHByZXZlbnRzIGFuIHVud2FudGVkIGZvY3VzIG91dGxpbmUgZnJvbSBhcHBlYXJpbmcgYXJvdW5kIGVsZW1lbnRzIHRoYXRcbiAqIG1pZ2h0IHN0aWxsIHJlc3BvbmQgdG8gcG9pbnRlciBldmVudHMuXG4gKi9cblxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgRlVOQ1RJT05TXG4vLyAgIFRoZXNlIGFyZSBtb3N0bHkgcGFzc2VkIGludG8gbWl4aW5zLCBzbyBzb3VyY2UgdGhlbSBiZWZvcmUgbWl4aW5zLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBY2Nlc3MgbmVzdGVkIG1hcHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUT0RPOiBhZGQgYW4gZXJyb3IgbWVzc2FnZSwgbGlrZTpcbi8vIEBpZiAoJHZhbHVlID09IG51bGwpIHtcbi8vICBAZXJyb3IgXCJUaGUgdmFsdWUgJyN7JGtleX0nIGRvZXNuJ3QgZXhpc3QgaW4gdGhlIG1hcC5cIjsgfVxuLy8gU2VlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qbG9uZy84NzYwMjc1XG4vLyBTZWU6IE9VSTpwYXJ0aWFsczplbGVtZW50czpmdW5jdGlvbnNcbi8vIFNlZTogaHR0cDovL2NvZGVwZW4uaW8vamFrZWFsYmF1Z2gvcG9zdC91c2luZy1zYXNzLWZ1bmN0aW9ucy10by1hY2Nlc3MtY29tcGxleC12YXJpYWJsZS1tYXBzXG5cbkBmdW5jdGlvbiBtYXAtZmV0Y2goJG1hcCwgJGtleXMuLi4pIHtcblx0JHZhbHVlOiAkbWFwO1xuXHRAZWFjaCAka2V5IGluICRrZXlzIHtcblx0XHQkdmFsdWU6IG1hcC1nZXQoJHZhbHVlLCAka2V5KTtcblx0fVxuXHRAcmV0dXJuICR2YWx1ZTtcbn1cblxuLy8gRXhhbXBsZTpcblxuJGNvbmZpZzogKFxuICB0aGVtZXM6IChcblx0bWlzdDogKFxuXHQgIGhlYWRlcjogI2RjZmFjMCxcblx0ICBjb250ZW50OiAjMDA5NjhiLFxuXHQgIGZvb3RlcjogIzg1Yzc5Y1xuXHQpLFxuXHRzcHJpbmc6IChcblx0ICBoZWFkZXI6ICNmNGZhYzcsXG5cdCAgY29udGVudDogI2MyNDU0ZSxcblx0ICBmb290ZXI6ICNmZmIxNThcblx0KVxuICApXG4pO1xuXG4vLyBnZXQgdGhlIG1pc3QgaGVhZGVyIGNvbG9yICNkY2ZhYzA6XG4vLyBtYXAtZmV0Y2goJGNvbmZpZywgXCJ0aGVtZXNcIiwgXCJtaXN0XCIsIFwiaGVhZGVyXCIpXG5cbi8vIHByaW50IGVhY2ggdmFsdWUgZnJvbSB0aGUgbWFwIHRvIGEgY2xhc3M6XG5AZWFjaCAkdGhlbWUgaW4gbWFwLWtleXMoIG1hcC1nZXQoJGNvbmZpZywgXCJ0aGVtZXNcIikgKSB7XG5cbiAgLiN7JHRoZW1lfSB7XG5cdC5oZWFkZXIgIHsgYmFja2dyb3VuZC1jb2xvcjogbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsICR0aGVtZSwgXCJoZWFkZXJcIiAgKTsgfVxuXHQuY29udGVudCB7IGJhY2tncm91bmQtY29sb3I6IG1hcC1mZXRjaCgkY29uZmlnLCBcInRoZW1lc1wiLCAkdGhlbWUsIFwiY29udGVudFwiICk7IH1cblx0LmZvb3RlciAgeyBiYWNrZ3JvdW5kLWNvbG9yOiBtYXAtZmV0Y2goJGNvbmZpZywgXCJ0aGVtZXNcIiwgJHRoZW1lLCBcImZvb3RlclwiICApOyB9XG4gIH1cblxufVxuXG4vLyBPVUkgbWFwLWZldGNoXG4vLyBAZnVuY3Rpb24gbWFwLWZldGNoKCRtYXAsICRrZXlzKSB7XG4vLyAgICRrZXk6IG50aCgka2V5cywgMSk7XG4vLyAgICRsZW5ndGg6IGxlbmd0aCgka2V5cyk7XG4vLyAgICR2YWx1ZTogbWFwLWdldCgkbWFwLCAka2V5KTtcbi8vICAgQGlmICgkbGVuZ3RoID4gMSkge1xuLy8gICAgICRyZXN0OiAoKTtcbi8vICAgICBAZm9yICRpIGZyb20gMiB0aHJvdWdoICRsZW5ndGgge1xuLy8gICAgICAgJHJlc3Q6IGFwcGVuZCgkcmVzdCwgbnRoKCRrZXlzLCAkaSkpO1xuLy8gICAgIH1cbi8vICAgICBAaWYgKCR2YWx1ZSA9PSBudWxsKSB7XG4vLyAgICAgICBAZXJyb3IgXCJUaGUgdmFsdWUgJyN7JGtleX0nIGRvZXNuJ3QgZXhpc3QgaW4gdGhlIG1hcC5cIjtcbi8vICAgICB9XG4vLyAgICAgQHJldHVybiBtYXAtZmV0Y2goJHZhbHVlLCAkcmVzdClcbi8vICAgfSBAZWxzZSB7XG4vLyAgICAgQGlmICgkdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7XG4vLyAgICAgfVxuLy8gICAgIEByZXR1cm4gJHZhbHVlO1xuLy8gICB9XG4vLyB9XG5cbi8vIERlYnVnZ2luIHNhc3MgbWFwc1xuLy8gQ2FuJ3QgZ2V0IHRoaXMgdG8gd29yayBBVE0gYnV0IGNvdWxkIGJlIHVzZWZ1bC5cbi8vIGh0dHA6Ly93d3cuc2l0ZXBvaW50LmNvbS9kZWJ1Z2dpbmctc2Fzcy1tYXBzL1xuXG5AbWl4aW4gZGVidWctbWFwKCRtYXApIHtcblx0QGF0LXJvb3Qge1xuXHRcdEBkZWJ1Zy1tYXAge1xuXHRcdFx0X190b1N0cmluZ19fOiBpbnNwZWN0KCRtYXApO1xuXHRcdFx0X19sZW5ndGhfXzogbGVuZ3RoKCRtYXApO1xuXHRcdFx0X19kZXB0aF9fOiBkZXB0aCgkbWFwKTtcblx0XHRcdF9fa2V5c19fOiBtYXAta2V5cygkbWFwKTtcblx0XHRcdF9fcHJvcGVydGllc19fIHtcblx0XHRcdFx0QGVhY2ggJGtleSwgJHZhbHVlIGluICRtYXAge1xuXHRcdFx0XHRcdCN7JygnICsgdHlwZS1vZigkdmFsdWUpICsgJykgJyArICRrZXl9OiBpbnNwZWN0KCR2YWx1ZSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuXG4vLyBTcGluLW91dCBtYXAtZmV0Y2ggZnVuY3Rpb25zIGZvciBtb3N0LXVzZWQgc3R5bGVzLlxuLy8gRG9uZSBhcyBmdW5jdGlvbnMsIG5vdCBtaXhpbnMsIHNvIHdlIGNhbiB1c2UgdGhlbSB3aXRoaW5cbi8vIHN0YW5kYXJkIHN0eWxlIGxpc3RzLCBlLmcuIGNvbG9yOiBwYWxldHRlKCk7XG4vLyBTZWU6XG4vLyBodHRwOi8vd3d3LmJpZ2VuZy5pby9ob3ctd2UtdXNlLXNhc3MtbWFwcy1mb3ItZGVzaWduLXRva2Vucy1hbmQtZGV2ZWxvcGVyLWhhcHBpbmVzcy9cbi8vIGh0dHA6Ly9lcnNraW5lZGVzaWduLmNvbS9ibG9nL2ZyaWVuZGxpZXItY29sb3VyLW5hbWVzLXNhc3MtbWFwcy9cbi8vIEBmdW5jdGlvbiBwYWxldHRlKCRwYWxldHRlLCAkdG9uZTogJ2Jhc2UnKSB7XG4vLyAgICAgQHJldHVybiBtYXAtZ2V0KG1hcC1nZXQoJHBhbGV0dGVzLCAkcGFsZXR0ZSksICR0b25lKTtcbi8vIH1cblxuLy8gQGZ1bmN0aW9uIGNvbG9yKCR0eXBlOiAndWknLCAkaW5jcmVtZW50OiAnYmFzZScpIHtcbi8vICAgICBAcmV0dXJuIG1hcC1mZXRjaCgkY29sb3IsICR0eXBlLCAkaW5jcmVtZW50KTtcbi8vIH1cblxuQGZ1bmN0aW9uIHBhbGV0dGUoJGh1ZTogJ2dyZXktMjUnKSB7XG5cdEByZXR1cm4gbWFwLWZldGNoKCRwYWxldHRlLCAkaHVlKTtcbn1cblxuQGZ1bmN0aW9uIHNpemUoJHR5cGU6ICdmb250JywgJGluY3JlbWVudDogJ3RleHQnKSB7XG5cdEByZXR1cm4gbWFwLWZldGNoKCRzaXplLCAkdHlwZSwgJGluY3JlbWVudCk7XG59XG5cbkBmdW5jdGlvbiBjb250YWluZXItd2lkdGgoJHdpZHRoOiAnbGcnKSB7XG5cdEByZXR1cm4gbWFwLWdldCgkY29udGFpbmVyLW1heC13aWR0aHMsICR3aWR0aCk7XG59XG5cbkBmdW5jdGlvbiBmb250c2l6ZSgkaW5jcmVtZW50OiAnVGV4dCcsICRyZXNwb25zZTogJ3NtJykge1xuXHQvLyBAcmV0dXJuIG1hcC1mZXRjaCgkc2l6ZSwgZm9udCwgJGluY3JlbWVudCwgJHJlc3BvbnNlKTtcblx0QHJldHVybiBtYXAtZmV0Y2goJGZvbnRzaXplcywgJGluY3JlbWVudCwgJHJlc3BvbnNlKTtcbn1cblxuQGZ1bmN0aW9uIHRyYW5zaXRpb24oJHByb3BlcnR5OiAnZHVyYXRpb24nLCAkcmVzcG9uc2U6ICdzaG9ydCcpIHtcblx0QHJldHVybiBtYXAtZmV0Y2goJHRyYW5zaXRpb24sICRwcm9wZXJ0eSwgJHJlc3BvbnNlKTtcbn1cblxuLy8gSSB0aGluayB0aGlzIGlzIGEgR2lyYXVkZWwgZnVuY3Rpb27igKZcbi8vIEBsaW5rIGh0dHA6Ly9zYXNzLWd1aWRlbGluLmVzLyNlcnJvcnNcbi8vIEBsaW5rIGh0dHBzOi8vam9uc3VoLmNvbS9ibG9nL29yZ2FuaXppbmctei1pbmRleC13aXRoLXNhc3MvXG5cbkBmdW5jdGlvbiBmb250LXdlaWdodCgka2V5KSB7XG5cdEBpZiBub3QgbWFwLWhhcy1rZXkoJGZvbnQtd2VpZ2h0LCAka2V5KSB7XG5cdFx0QGVycm9yICdUaGVyZSBpcyBubyBrZXkgbmFtZWQgYCN7JGtleX1gIGluICRmb250LXdlaWdodHMuICdcblx0XHRcdCArICdLZXkgc2hvdWxkIGJlIG9uZSBvZiAje21hcC1rZXlzKCRmb250LXdlaWdodCl9Lic7XG5cdH1cblxuXHRAcmV0dXJuIG1hcC1nZXQoJGZvbnQtd2VpZ2h0LCAka2V5KTtcbn1cblxuQG1peGluIGZvbnQtd2VpZ2h0KCRrZXkpIHtcblx0Ly8gZm9udC1mYW1pbHk6ICRmb250O1xuXHRmb250LXdlaWdodDogZm9udC13ZWlnaHQoJGtleSk7XG59XG5cblxuLy8gVGludFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGZ1bmN0aW9uIHRpbnQoJGN1cnJlbnQtY29sb3IsICRwZXJjZW50KSB7XG5cdEByZXR1cm4gbWl4KCNGRkYsICRjdXJyZW50LWNvbG9yLCAkcGVyY2VudCk7XG59XG5cblxuLy8gU3BhY2VyIGNvbXB1dGF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2VlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9qbG9uZy84NzYwMjc1XG4vLyBTZWU6IE9VSTpwYXJ0aWFsczplbGVtZW50czpmdW5jdGlvbnNcblxuLy8gQGZ1bmN0aW9uIHNwYWNlcigkdmFsdWUpIHtcbi8vICAgQGlmICgkdmFsdWUgKiAyKSAlIDEgIT0gMCB7XG4vLyAgICAgQHdhcm4gJ1NwYWNlciB2YWx1ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMC41Jztcbi8vICAgICBAcmV0dXJuICdTcGFjZXIgdmFsdWUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDAuNSc7XG4vLyAgIH0gQGVsc2Uge1xuLy8gICAgIEByZXR1cm4gJHNwYWNlci11bml0ICogJHZhbHVlO1xuLy8gICB9XG4vLyB9XG5cbkBmdW5jdGlvbiBzcGFjZSgkdmFsdWUpIHtcblx0QHJldHVybiAkc3BhY2UtdW5pdCAqICR2YWx1ZTtcbn1cblxuXG4vLyBTY3V0IHN0cmlwIHVuaXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBodHRwOi8vZGF2aWR0aGVjbGFyay5naXRodWIuaW8vc2N1dC9zdHJpcC11bml0Lmh0bWxcblxuQGZ1bmN0aW9uIHNjdXQtc3RyaXAtdW5pdCAoXG5cdCRudW1cbikge1xuXG5cdEByZXR1cm4gJG51bSAvICgkbnVtICogMCArIDEpO1xuXG59XG5cblxuLy8gU2N1dCBweCB0byByZW1cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBodHRwOi8vZGF2aWR0aGVjbGFyay5naXRodWIuaW8vc2N1dC9yZW0uaHRtbFxuLy8gUmVxdWlyZXM6IGBzY3V0LXN0cmlwLXVuaXRgLlxuLy8gUmVuYW1lZCByZW0oKSBmcm9tIHNjdXQtcmVtKCkgZm9yIGVhc2Ugb2YgdXNlLlxuXG4kc2N1dC1yZW0tYmFzZTogMTYgIWRlZmF1bHQ7XG5cbkBmdW5jdGlvbiByZW0gKFxuXHQkcGl4ZWxzXG4pIHtcblxuXHQkcmVtLXZhbHM6ICgpO1xuXHRAZWFjaCAkdmFsIGluICRwaXhlbHMge1xuXHRcdCR2YWwtaW4tcmVtczogc2N1dC1zdHJpcC11bml0KCR2YWwpIC8gJHNjdXQtcmVtLWJhc2UgKiAxcmVtO1xuXHRcdCRyZW0tdmFsczogYXBwZW5kKCRyZW0tdmFscywgJHZhbC1pbi1yZW1zKTtcblx0fVxuXG5cdEBpZiBsZW5ndGgoJHJlbS12YWxzKSA9PSAxIHtcblx0XHQvLyByZXR1cm4gYSBzaW5nbGUgdmFsdWUgaW5zdGVhZCBvZiBhIGxpc3QsXG5cdFx0Ly8gc28gaXQgY2FuIGJlIHVzZWQgaW4gY2FsY3VsYXRpb25zXG5cdFx0QHJldHVybiBudGgoJHJlbS12YWxzLCAxKTtcblx0fVxuXHRAZWxzZSB7XG5cdFx0QHJldHVybiAkcmVtLXZhbHM7XG5cdH1cblxufVxuXG5cbi8vIFNjdXQgZm9udC1mYWNlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvZm9udC1mYWNlLmh0bWxcbi8vIFJlbmFtZWQgZm9udC1mYWNlKCkgZnJvbSBzY3V0LWZvbnQtZmFjZSgpIGZvciBlYXNlIG9mIHVzZS5cbi8vIE9yaWdpbmFsICRmb3JtYXRzOiBlb3Qgd29mZjIgd29mZiB0dGYgc3ZnXG5cbkBmdW5jdGlvbiBtYWluLXNyYygkZm9ybWF0cywgJGZpbGUtcGF0aCwgJGZvbnQtZmFtaWx5KSB7XG5cdC8vIFJldHVybiB0aGUgbGlzdCBvZiBgc3JjYCB2YWx1ZXMsIGluIG9yZGVyLCB0aGF0XG5cdC8vIGEgZ29vZCBgQGZvbnQtZmFjZWAgd2lsbCBuZWVkLCBpbmNsdWRpbmcgb25seVxuXHQvLyB0aG9zZSBmb3JtYXRzIHNwZWNpZmllZCBpbiB0aGUgbGlzdCBgJGZvcm1hdHNgLlxuXHQkcmVzdWx0OiAoKTtcblx0QGlmIGluZGV4KCRmb3JtYXRzLCBlb3QpIHtcblx0XHQkZW90LXZhbDogdXJsKCcjeyRmaWxlLXBhdGh9LmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICRlb3QtdmFsLCBjb21tYSk7XG5cdH1cblx0QGlmIGluZGV4KCRmb3JtYXRzLCB3b2ZmMikge1xuXHRcdCR3b2ZmMi12YWw6IHVybCgnI3skZmlsZS1wYXRofS53b2ZmMicpIGZvcm1hdCgnd29mZjInKTtcblx0XHQkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHdvZmYyLXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgd29mZikge1xuXHRcdCR3b2ZmLXZhbDogdXJsKCcjeyRmaWxlLXBhdGh9LndvZmYnKSBmb3JtYXQoJ3dvZmYnKTtcblx0XHQkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHdvZmYtdmFsLCBjb21tYSk7XG5cdH1cblx0QGlmIGluZGV4KCRmb3JtYXRzLCB0dGYpIHtcblx0XHQkdHRmLXZhbDogdXJsKCcjeyRmaWxlLXBhdGh9LnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcblx0XHQkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHR0Zi12YWwsIGNvbW1hKTtcblx0fVxuXHRAaWYgaW5kZXgoJGZvcm1hdHMsIHN2Zykge1xuXHRcdCRzdmctdmFsOiB1cmwoJyN7JGZpbGUtcGF0aH0uc3ZnIyN7JGZvbnQtZmFtaWx5fScpIGZvcm1hdCgnc3ZnJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICRzdmctdmFsLCBjb21tYSk7XG5cdH1cblx0QHJldHVybiAkcmVzdWx0O1xufVxuXG5AbWl4aW4gZm9udC1mYWNlIChcblx0JGZvbnQtZmFtaWx5LFxuXHQkZmlsZS1wYXRoLFxuXHQkd2VpZ2h0OiBub3JtYWwsXG5cdCRzdHlsZTogbm9ybWFsLFxuXHQkZm9ybWF0czogZW90IHdvZmYgdHRmIHN2Z1xuKSB7XG5cblx0QGlmIGluZGV4KCdpdGFsaWMnICdvYmxpcXVlJywgJHdlaWdodCkge1xuXHRcdCRzdHlsZTogJHdlaWdodDtcblx0XHQkd2VpZ2h0OiBub3JtYWw7XG5cdH1cblxuXHRAZm9udC1mYWNlIHtcblx0XHRmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xuXHRcdGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuXHRcdGZvbnQtc3R5bGU6ICRzdHlsZTtcblxuXHRcdEBpZiBpbmRleCgkZm9ybWF0cywgZW90KSB7XG5cdFx0XHRzcmM6IHVybCgnI3skZmlsZS1wYXRofS5lb3QnKTtcblx0XHR9XG5cblx0XHRzcmM6IG1haW4tc3JjKCAkZm9ybWF0cywgJGZpbGUtcGF0aCwgJGZvbnQtZmFtaWx5ICk7XG5cdH1cblxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFZBUklBQkxFIFNFVFRJTkdTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIE5hbWVzcGFjZSBmb3IgdGhlbWVpbmcgJiB0ZXN0aW5nXG4vLyBBcHBseTogLiN7JG5hbWVzcGFjZX10ZXh0YXJlYVxuLy8gRG9uJ3QgdXNlIHRoaXMgbWV0aG9kIHRvIG5hbWVzcGFjZSB2YXJpYWJsZXPigKZcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRuYW1lc3BhY2UgICAgICAgICAgICAgOiAnJztcblxuXG4vLyBDb2xvdXJzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kYmFzZS1ibGFjayAgICAgICAgICAgICAgICAgICAgOiAjMDAwO1xuJGJhc2Utd2hpdGUgICAgICAgICAgICAgICAgICAgIDogI0ZGRjtcblxuJHBhbGV0dGU6IChcblx0YmxhY2sgICAgICAgICAgICAgICAgICAgICAgOiAkYmFzZS1ibGFjayxcblx0dGV4dCAgICAgICAgICAgICAgICAgICAgICAgOiAjMTUxNTE1LFxuXHRkYXJrICAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDE1JSksXG5cdGFzaCAgICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgMjIlKSxcblx0Y2hhcmNvYWwgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCAzOSUpLFxuXHRtZWRpdW0gICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDUwJSksXG5cdG11dGVkICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgNzAlKSxcblx0YmFzZSAgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA4NiUpLFxuXHRsaWdodCAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDk0JSksXG5cdGZhaW50ICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgOTclKSxcblx0d2hpdGUgICAgICAgICAgICAgICAgICAgICAgOiAkYmFzZS13aGl0ZSxcblx0YmFja2dyb3VuZCAgICAgICAgICAgICAgICAgOiAjZmRmZGZkLFxuXHRuZXV0cmFsICAgICAgICAgICAgICAgICAgICA6ICNGM0YyRjEsXG5cdG5ldXRyYWwtZGFyayAgICAgICAgICAgICAgIDogZGFya2VuKCNmMGVlZWIsIDklKSxcblx0bmV1dHJhbC1saWdodCAgICAgICAgICAgICAgOiBsaWdodGVuKCNmMGVlZWIsIDQlKSxcblx0YnJhbmQgICAgICAgICAgICAgICAgICAgICAgOiAjMDBhYmZmLFxuXHRicmFuZC1jb21wbGVtZW50ICAgICAgICAgICA6ICNmZmY1OWYsXG5cdGJyYW5kLWNvdW50ZXIgICAgICAgICAgICAgIDogIzg4N0U3Myxcblx0bW9kYWwtYmFja2dyb3VuZCAgICAgICAgICAgOiAjMTUxNTE1LFxuXHR3YXJuaW5nICAgICAgICAgICAgICAgICAgICA6ICNGRkQ0MEMsXG5cdGJhZC1uZXdzICAgICAgICAgICAgICAgICAgIDogI0M2MEMwQyxcblx0Z29vZC1uZXdzICAgICAgICAgICAgICAgICAgOiBicmFuZC1jb21wbGVtZW50XG4pO1xuXG5cbi8vIEJhc2Ugc2l6ZSBtZWFzdXJlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGJhc2UtZm9udC1zaXplLXVuaXQgICAgICAgICAgIDogMTY7XG4kYmFzZS1saW5lLWhlaWdodC11bml0ICAgICAgICAgOiAxLjQ1O1xuJGJhc2UtZm9udC1zaXplICAgICAgICAgICAgICAgIDogJGJhc2UtZm9udC1zaXplLXVuaXQgKiAxcHg7XG4kYmFzZS1saW5lLWhlaWdodCAgICAgICAgICAgICAgOiAoJGJhc2UtZm9udC1zaXplLXVuaXQgKiAkYmFzZS1saW5lLWhlaWdodC11bml0KSAqIDFweDsgLy8gMjQuNjVcbiRzcGFjZS11bml0ICAgICAgICAgICAgICAgICAgICA6ICRiYXNlLWxpbmUtaGVpZ2h0O1xuJHNwYWNlICAgICAgICAgICAgICAgICAgICAgICAgIDogJHNwYWNlLXVuaXQgKiAxO1xuXG4kZ3V0dGVyU3BhY2UgICAgICAgICAgICAgICAgICAgOiBzcGFjZSgyKTtcbiRwYXJhZ3JhcGhTcGFjZSAgICAgICAgICAgICAgICA6IHNwYWNlKDEuMjUpO1xuJGJsb2NrU3BhY2UgICAgICAgICAgICAgICAgICAgIDogMTJ2aDtcblxuXG5cbi8vIFdpZHRocyAoYmFzZWQgb24gQlM0KVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQlM0IGRlZmF1bHRzOlxuLy8gUmVtb3ZlZCB0aGUgQlM0IGFzY2VuZGluZyBtaXhpbjpcbi8vIEBpbmNsdWRlIF9hc3NlcnQtYXNjZW5kaW5nKCRncmlkLWJyZWFrcG9pbnRzLCBcIiRncmlkLWJyZWFrcG9pbnRzXCIpOyksXG4vLyAkY29udGFpbmVyLW1heC13aWR0aHM6IChcbi8vIFx0c206IDU3NnB4LFxuLy8gXHRtZDogNzIwcHgsXG4vLyBcdGxnOiA5NDBweCxcbi8vIFx0eGw6IDExNDBweFxuLy8gKSAhZGVmYXVsdDtcblxuJGdyaWQtYnJlYWtwb2ludHM6IChcblx0eHM6IDAsXG5cdHNtOiA1NDRweCxcblx0bWQ6IDc2OHB4LFxuXHRsZzogOTkycHgsXG5cdHhsOiAxMjAwcHgsXG5cdHN1OiAxNzAwcHhcbikgIWRlZmF1bHQ7XG5cbiRjb250YWluZXItbWF4LXdpZHRoczogKFxuXHRzbTogNTc2cHgsXG5cdHJnOiA4MDBweCxcblx0bGc6IDk2MHB4LFxuXHR4bDogMTEwMHB4LFxuXHRzdTogMTcwMHB4LFxuKSAhZGVmYXVsdDtcblxuXG4vLyBGb250IHNpemVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kZm9udHNpemVzOiAoXG5cdHRleHQtLXNtOiAoXG5cdFx0c20gICAgICAgICAgICA6IDE0cHgsXG5cdFx0cmcgICAgICAgICAgICA6ICRiYXNlLWZvbnQtc2l6ZSxcbiAgICAgICAgbGcgICAgICAgICAgICA6IDE3cHhcblx0KSxcblx0dGV4dC0tcXVvdGU6IChcblx0XHRzbSAgICAgICAgICAgIDogMTZweCxcblx0XHRyZyAgICAgICAgICAgIDogMjFweCxcblx0XHRsZyAgICAgICAgICAgIDogMjRweFxuXHQpLFxuXHR0ZXh0OiAoXG5cdFx0c20gICAgICAgICAgICA6IDE5cHgsXG5cdFx0cmcgICAgICAgICAgICA6IDI0cHgsXG5cdFx0bGcgICAgICAgICAgICA6IDI3cHhcblx0KSxcblx0dGV4dC0tcGx1czogKFxuXHRcdHNtICAgICAgICAgICAgOiAyMHB4LFxuXHRcdHJnICAgICAgICAgICAgOiAyNXB4LFxuXHRcdGxnICAgICAgICAgICAgOiAyOHB4XG5cdCksXG5cdHRleHQtLWxnOiAoXG4gICAgICAgIHNtICAgICAgICAgICAgOiAyN3B4LFxuICAgICAgICByZyAgICAgICAgICAgIDogMzJweCxcbiAgICAgICAgbGcgICAgICAgICAgICA6IDM2cHhcblx0KSxcblxuICAgIC8vIHVudXNlZOKAplxuXG5cdGhlYWRsaW5lLS14czogKFxuXHRcdHhzICAgICAgICAgICAgOiAxOHB4LFxuXHRcdHNtICAgICAgICAgICAgOiAyMnB4LFxuXHRcdGxnICAgICAgICAgICAgOiAyN3B4XG5cdCksXG5cdGhlYWRsaW5lLS1zbTogKFxuXHRcdHhzICAgICAgICAgICAgOiAyMXB4LFxuXHRcdHNtICAgICAgICAgICAgOiAzMnB4LFxuXHRcdGxnICAgICAgICAgICAgOiAzOXB4XG5cdCksXG5cdGhlYWRsaW5lOiAoXG5cdFx0eHMgICAgICAgICAgICA6IDM5cHgsXG5cdFx0c20gICAgICAgICAgICA6IDQ0cHgsXG5cdFx0bGcgICAgICAgICAgICA6IDUwcHhcblx0KSxcblx0ZGlzcGxheTogKFxuXHRcdHhzICAgICAgICAgICAgOiA0MHB4LFxuXHRcdHNtICAgICAgICAgICAgOiA1NHB4LFxuXHRcdGxnICAgICAgICAgICAgOiA2MHB4XG5cdClcbik7XG5cblxuLy8gT3RoZXIgc2l6ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRib3JkZXItcmFkaXVzOiAoXG4gICAgc21hbGwgICAgICAgICAgICAgOiAzcHgsXG4gICAgYmFzZSAgICAgICAgICAgICAgOiA0cHgsXG4gICAgbGFyZ2UgICAgICAgICAgICAgOiA2cHhcbik7XG5cbiRidXR0b24taGVpZ2h0OiAoXG4gICAgY29uY2lzZSAgICAgICAgICAgOiAzNnB4LFxuICAgIGJhc2UgICAgICAgICAgICAgIDogNDRweCxcbiAgICBsZyAgICAgICAgICAgICAgICA6IDU1cHhcbik7XG5cbiRsaXN0LWluc2V0OiAoXG4gICAgbWFyZ2luICAgICAgICAgICAgOiBzcGFjZSgxLjUpLFxuICAgIHBhZGRpbmcgICAgICAgICAgIDogMFxuKTtcblxuXG4vLyBUcmFuc2l0aW9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJHRyYW5zaXRpb246IChcblx0ZHVyYXRpb246IChcblx0XHRmYXN0ICAgICAgICAgOiA1MG1zLFxuXHRcdHNob3J0ICAgICAgICA6IDE1MG1zLFxuXHRcdGxvbmcgICAgICAgICA6IDUwMG1zXG5cdCksXG5cdHR5cGU6IChcblx0XHR0aGlzYWxzbyAgICAgOiBjdWJpYy1iZXppZXIoMC4xOSwgMSwgMC4yMiwgMSksXG5cdFx0Y3ViaWMtc3RhdGljIDogY3ViaWMtYmV6aWVyKDAsIC0wLjEsIDEsIC0wLjEpLFxuXHRcdGN1YmljLXN0YXRlICA6IGN1YmljLWJlemllcigwLCAxLjEsIDEsIDEuMSksXG5cdFx0YmFzZSAgICAgICAgIDogZWFzZS1vdXQsXG5cdFx0ZmluZSAgICAgICAgIDogZWFzZS1pbi1vdXRcblx0KVxuKTtcblxuXG4vLyBaLWluZGV4ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiR6LWluZGV4OiAoXG5cdCdtb2RhbCcgICAgIDogODAwMSxcblx0J292ZXJsYXknICAgOiA4MDAwLFxuXHQnZHJvcGRvd24nICA6IDcwMDAsXG5cdCdzZWNvbmQnICAgIDogMjAwMCxcblx0J2ZpcnN0JyAgICAgOiAxMDAwLFxuXHQnZGVmYXVsdCcgICA6IDEsXG5cdCdiZWxvdycgICAgIDogLTEsXG4pO1xuXG5cbi8vIEZvbnRzIHVzaW5nIGRhdGEtVVJJc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gZGVmaW5lIHN0YWNrc1xuJGZvbnQtbW9uby1zdGFjayAgICAgICA6IE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkxpYmVyYXRpb24gTW9ub1wiLCAnQ291cmllciBOZXcnLCAnQW5kYWxlIE1vbm8nLCAnTHVjaWRhIFNhbiBUeXBld3JpdGVyJywgJ0x1Y2lkYSBDb25zb2xlJywgbW9ub3NwYWNlO1xuJHNhbnMtZm9udC1zdGFjayAgICAgICA6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuJHNlcmlmLWZvbnQtc3RhY2sgICAgICA6IEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFwiVGltZXNcIiwgc2VyaWY7XG4kZGlzcGxheS1mb250LXN0YWNrICAgIDogJHNhbnMtZm9udC1zdGFjaztcblxuLy8gQXJlIHlvdSByZWZlcmVuY2luZyB0aGUgZm9udCBmaWxlcyByYXRoZXIgdGhhbiB1c2luZyBhIGJhc2U2NCBzdHJpbmc/XG4kZm9udHMtcGF0aCAgICAgICAgICAgOiAnL2Fzc2V0cy9mb250cy8nO1xuXG4vLyBpcyB0aGUgaHRtbC1sZXZlbCBmb250IHN0YWNrIHNhbnMgb3Igc2VyaWY/XG4kbWFpbi1mb250LXN0YWNrICAgICAgIDogJHNhbnMtZm9udC1zdGFjaztcblxuLy8gd291bGQgeW91IGxpa2UgdG8gbmFtZXNwYWNlIHlvdXIgZm9udD9cbiRmb250LW5hbWVzcGFjZSAgICAgICAgOiAnJztcblxuLy8gZmlsbCBlbSBvdXRcbiRzYW5zLWhhaXIgICAgICAgIDogJ2hhaXInO1xuJHNhbnMtdGhpbiAgICAgICAgOiAndGhpbic7XG4kc2Fucy1saWdodCAgICAgICA6ICdsaWdodCc7XG4kc2Fucy1ib29rICAgICAgICA6ICdibG9uZCc7XG4kc2Fucy1yZWd1bGFyICAgICA6ICdub3JtYWwnO1xuJHNhbnMtbWVkaXVtICAgICAgOiAnbWVkaXVtJztcbiRzYW5zLXNlbWlib2xkICAgIDogJ3NlbWlib2xkJztcbiRzYW5zLWJvbGQgICAgICAgIDogJ2JvbGQnO1xuJHNhbnMtZXh0cmFib2xkICAgOiAnZXh0cmFib2xkJztcbiRzYW5zLWJsYWNrICAgICAgIDogJ2JsYWNrJztcbiRzYW5zLWRpc3BsYXkgICAgIDogJ2Rpc3BsYXknO1xuXG4vLyBpdGFsaWNzIHBsYWNlaG9sZGVyc1xuJHNhbnMtdGhpbi1pICAgICAgOiAkc2Fucy10aGluO1xuJHNhbnMtbGlnaHQtaSAgICAgOiAkc2Fucy1saWdodDtcbiRzYW5zLWJvb2staSAgICAgIDogJHNhbnMtYm9vaztcbiRzYW5zLXJlZ3VsYXItaSAgIDogJHNhbnMtcmVndWxhcjtcbiRzYW5zLW1lZGl1bS1pICAgIDogJHNhbnMtbWVkaXVtO1xuJHNhbnMtc2VtaWJvbGQtaSAgOiAkc2Fucy1zZW1pYm9sZDtcbiRzYW5zLWJvbGQtaSAgICAgIDogJHNhbnMtYm9sZDtcbiRzYW5zLWV4dHJhYm9sZC1pIDogJHNhbnMtZXh0cmFib2xkO1xuJHNhbnMtYmxhY2staSAgICAgOiAkc2Fucy1ib2xkO1xuJHNhbnMtZGlzcGxheS1pICAgOiAkc2Fucy1kaXNwbGF5O1xuXG5cbi8vIE1ha2UgYWxsIGZvbnQgZmlsZXMgYXZhaWxhYmxlXG4vLyBNaXhpbiBvcHRpb25zOiAkZm9udC1mYW1pbHksICRmaWxlLXBhdGgsICR3ZWlnaHQsICRzdHlsZSwgJGZvcm1hdHNcbi8vIFBzLiBUaGlzIGJlbG93IHByaW50cyBhbiB1bndhbnRlZCBzcGFjZSBiZXR3ZWVuIHRoZSBwYXRoIHZhciBhbmQgdGhlIGZvbnQgdmFyOlxuLy8gQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXRoaW4sIGpvaW4oJGZvbnRzLXBhdGgsJHNhbnMtdGhpbikgKTtcblxuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXRoaW4sICcjeyRmb250cy1wYXRofSN7JHNhbnMtdGhpbn0nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtbGlnaHQsICcjeyRmb250cy1wYXRofSN7JHNhbnMtbGlnaHR9JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLWJvb2ssICcjeyRmb250cy1wYXRofSN7JHNhbnMtYm9va30nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtcmVndWxhciwgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1yZWd1bGFyfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1tZWRpdW0sICcjeyRmb250cy1wYXRofSN7JHNhbnMtbWVkaXVtfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1ib2xkLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLWJvbGR9JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLWJsYWNrLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLWJsYWNrfScgKTtcblxuLy8gVW51c2VkLCBzbyBhcHBseSBhIGRlZmF1bHQgdG8gYXZvaWQgZ3VscCBmdWNrdXBzXG4vL0BpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy14Ym9sZCwgICAnI3skZm9udHMtcGF0aH0jeyRzYW5zLXhib2xkfScgKTtcbi8vQGluY2x1ZGUgZm9udC1mYWNlKCRkaXNwbGF5LCAnI3skZm9udHMtcGF0aH0jeyRkaXNwbGF5fScgKTtcbi8vQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXJlZ3VsYXItaXRhbGljLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLXJlZ3VsYXItaXRhbGljfScgKTtcblxuXG4vLyBBcHBseSBmb250LWZpbGUgdmFyaWFibGVzIHRvIGEgZm9udC1zdGFjay5cbi8vIFdlIG9ubHkgdXNlIHRoZXNlIHZhcmlhYmxlcyBpbiBvdXIgY2xhc3Nlcy5cblxuJGZvbnQtdGV4dC10aGluICAgICAgIDogam9pbigkc2Fucy10aGluLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtbGlnaHQgICAgICA6IGpvaW4oJHNhbnMtbGlnaHQsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1ib29rICAgICAgIDogam9pbigkc2Fucy1ib29rLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtcmVndWxhciAgICA6IGpvaW4oJHNhbnMtcmVndWxhciwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LW1lZGl1bSAgICAgOiBqb2luKCRzYW5zLW1lZGl1bSwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LXNlbWlib2xkICAgOiBqb2luKCRzYW5zLXNlbWlib2xkLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtYm9sZCAgICAgICA6IGpvaW4oJHNhbnMtYm9sZCwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LWV4dHJhYm9sZCAgOiBqb2luKCRzYW5zLWV4dHJhYm9sZCwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LWJsYWNrICAgICAgOiBqb2luKCRzYW5zLWJsYWNrLCAkbWFpbi1mb250LXN0YWNrKTtcblxuLy8gVW51c2VkLCBzbyBhcHBseSBhIGRlZmF1bHQgdG8gYXZvaWQgZ3VscCBmdWNrdXBzXG4vLyRmb250LXRleHQtcmVndWxhci1pICA6IGpvaW4oJHNhbnMtcmVndWxhciwgJG1haW4tZm9udC1zdGFjayk7XG4vLyRmb250LXRleHQtbWVkaXVtLWkgICA6IGpvaW4oJHNhbnMtbWVkaXVtLWl0YWxpYywgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LWJvbGQtaSAgIDogam9pbigkc2Fucy1ib2xkLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LWRpc3BsYXkgICAgICAgICA6ICRmb250LXRleHQtcmVndWxhcjtcbi8vJGZvbnQtc2Fucy14Ym9sZCAgICAgIDogam9pbigkc2Fucy14Ym9sZCwgJG1haW4tZm9udC1zdGFjayk7XG4vLyRmb250LXNhbnMtcmVndWxhci1pICA6IGpvaW4oJHNhbnMtcmVndWxhci1pdGFsaWMsICRtYWluLWZvbnQtc3RhY2spO1xuLy8kZm9udC1kaXNwbGF5ICAgICAgICAgOiBqb2luKCRkaXNwbGF5LCAkZGlzcGxheS1mb250LXN0YWNrKTtcblxuXG5cblxuXG5cblxuLy8gT2JqZWN0L2NvbXBvbmVudCBkZWZhdWx0IGZvbnRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kZm9udC1idXR0b24gICAgICAgICAgIDogJGZvbnQtdGV4dC1ib2xkO1xuXG5cbi8vIFN1aXQgYnJlYWtwb2ludCBzd2l0Y2hlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJHN1aXQtdGV4dC1icmVha3BvaW50cyAgICAgIDogZmFsc2UgIWRlZmF1bHQ7XG4kc3VpdC1mbGV4LWJyZWFrcG9pbnRzICAgICAgOiBmYWxzZSAhZGVmYXVsdDtcbiRzdWl0LWZsZXhlbWJlZC1icmVha3BvaW50cyA6IGZhbHNlICFkZWZhdWx0O1xuJHN1aXQtZ3JpZC1icmVha3BvaW50cyAgICAgIDogdHJ1ZSAhZGVmYXVsdDtcbiRzdWl0LXNpemUtYnJlYWtwb2ludHMgICAgICA6IHRydWUgIWRlZmF1bHQ7XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBCVVRUT05cbi8vICAgVmVyc2lvbiA1LjAuMCAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy9jb21wb25lbnRzLWJ1dHRvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIEJ1dHRvblxuLy8gQnV0dG9uLmlzLWRpc2FibGVkXG5cblxuLyoqIEBkZWZpbmUgQnV0dG9uICovXG5cbi8vIDpyb290IHtcbi8vICAgLS1CdXR0b24tYm9yZGVyLWNvbG9yOiBjdXJyZW50Y29sb3I7XG4vLyAgIC0tQnV0dG9uLWJvcmRlci13aWR0aDogMXB4O1xuLy8gICAtLUJ1dHRvbi1jb2xvcjogaW5oZXJpdDtcbi8vICAgLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eTogMC42O1xuLy8gICAtLUJ1dHRvbi1mb250OiBpbmhlcml0O1xuLy8gICAtLUJ1dHRvbi1wYWRkaW5nOiAwLjRlbSAwLjc1ZW07XG4vLyB9XG5cbiRCdXR0b246IChcblx0QnV0dG9uLWJvcmRlci1jb2xvcjogY3VycmVudGNvbG9yLFxuXHRCdXR0b24tYm9yZGVyLXdpZHRoOiAxcHgsXG5cdEJ1dHRvbi1jb2xvcjogaW5oZXJpdCxcblx0QnV0dG9uLWRpc2FibGVkLW9wYWNpdHk6IDAuNixcblx0QnV0dG9uLWZvbnQ6IGluaGVyaXQsXG5cdEJ1dHRvbi1wYWRkaW5nOiAwLjRlbSAwLjc1ZW1cbik7XG5cbi8qKlxuICogVGhlIGJ1dHRvbiBjbGFzc2VzIGFyZSBiZXN0IGFwcGxpZWQgdG8gbGlua3MgYW5kIGJ1dHRvbnMuXG4gKiBUaGVzZSBjb21wb25lbnRzIGNhbiBiZSB1c2VkIGluIGZvcm1zLCBhcyBjYWxscyB0byBhY3Rpb24sIG9yIGFzIHBhcnQgb2YgdGhlXG4gKiBnZW5lcmFsIFVJIG9mIHRoZSBzaXRlL2FwcC5cbiAqL1xuXG4vKipcbiAqIDEuIE5vcm1hbGl6ZSBgYm94LXNpemluZ2AgYWNyb3NzIGFsbCBlbGVtZW50cyB0aGF0IHRoaXMgY29tcG9uZW50IGNvdWxkIGJlXG4gKiAgICBhcHBsaWVkIHRvLlxuICogMi4gSW5oZXJpdCB0ZXh0IGNvbG9yIGZyb20gYW5jZXN0b3IuXG4gKiAzLiBJbmhlcml0IGZvbnQgc3R5bGVzIGZyb20gYW5jZXN0b3IuXG4gKiA0LiBQcmV2ZW50IGJ1dHRvbiB0ZXh0IGZyb20gYmVpbmcgc2VsZWN0YWJsZS5cbiAqL1xuXG4uQnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1ib3JkZXItY29sb3IpO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IG1hcC1mZXRjaCgkQnV0dG9uLCBCdXR0b24tYm9yZGVyLXdpZHRoKTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1jb2xvcik7IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQ6IG1hcC1mZXRjaCgkQnV0dG9uLCBCdXR0b24tZm9udCk7IC8qIDMgKi9cbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLXBhZGRpbmcpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTsgLyogNCAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSBleGNlc3MgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCtcbiAqL1xuXG4uQnV0dG9uOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuXG4uQnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xufVxuXG4vKipcbiAqIFVJIHN0YXRlc1xuICovXG5cbi5CdXR0b246aG92ZXIsXG4uQnV0dG9uOmZvY3VzLFxuLkJ1dHRvbjphY3RpdmUge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBvcGFjaXR5OiB2YXIoLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eSk7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBGTEVYIEVNQkVEXG4vLyAgIFZlcnNpb24gMi4wLjQgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvY29tcG9uZW50cy1mbGV4LWVtYmVkXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gRmxleEVtYmVkXG4vLyBGbGV4RW1iZWQtLTJieTFcbi8vIEZsZXhFbWJlZC0tM2J5MVxuLy8gRmxleEVtYmVkLS00YnkzXG4vLyBGbGV4RW1iZWQtLTE2Ynk5XG4vLyBGbGV4RW1iZWQtaXRlbVxuXG5cbi8qKiBAZGVmaW5lIEZsZXhFbWJlZCAqL1xuXG4vKipcbiAqIEZsZXhpYmxlIG1lZGlhIGVtYmVkc1xuICpcbiAqIEZvciB1c2Ugd2l0aCBtZWRpYSBlbWJlZHMg4oCTIHN1Y2ggYXMgdmlkZW9zLCBzbGlkZXNob3dzLCBvciBldmVuIGltYWdlcyDigJNcbiAqIHRoYXQgbmVlZCB0byByZXRhaW4gYSBzcGVjaWZpYyBhc3BlY3QgcmF0aW8gYnV0IGFkYXB0IHRvIHRoZSB3aWR0aCBvZiB0aGVpclxuICogY29udGFpbmluZyBlbGVtZW50LlxuICpcbiAqIEJhc2VkIG9uOiBodHRwOi8vYWxpc3RhcGFydC5jb20vYXJ0aWNsZS9jcmVhdGluZy1pbnRyaW5zaWMtcmF0aW9zLWZvci12aWRlb1xuICovXG5cbi5GbGV4RW1iZWQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4vKipcbiAqIFRoZSBhc3BlY3QtcmF0aW8gaGFjayBpcyBhcHBsaWVkIHRvIGFuIGVtcHR5IGVsZW1lbnQgYmVjYXVzZSBpdCBhbGxvd3NcbiAqIHRoZSBjb21wb25lbnQgdG8gcmVzcGVjdCBgbWF4LWhlaWdodGAuIERlZmF1bHQgYXNwZWN0IHJhdGlvIGlzIDE6MS5cbiAqL1xuXG4uRmxleEVtYmVkLXJhdGlvIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogMzoxIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTNieTEge1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gMyk7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IDI6MSBhc3BlY3QgcmF0aW9cbiAqL1xuXG4uRmxleEVtYmVkLXJhdGlvLS0yYnkxIHtcbiAgcGFkZGluZy1ib3R0b206IDUwJTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogMTY6OSBhc3BlY3QgcmF0aW9cbiAqL1xuXG4uRmxleEVtYmVkLXJhdGlvLS0xNmJ5OSB7XG4gIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IDQ6MyBhc3BlY3QgcmF0aW9cbiAqL1xuXG4uRmxleEVtYmVkLXJhdGlvLS00YnkzIHtcbiAgcGFkZGluZy1ib3R0b206IDc1JTtcbn1cblxuLyoqXG4gKiBGaXQgdGhlIGNvbnRlbnQgdG8gdGhlIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtY29udGVudCB7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cblxuLy8gQXQgbWVkaWEtcXVlcmllcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBpZiAoJHN1aXQtZmxleGVtYmVkLWJyZWFrcG9pbnRzID09IHRydWUpIHtcbiAgICBAZWFjaCAkYnJlYWtwb2ludCBpbiBtYXAta2V5cygkZ3JpZC1icmVha3BvaW50cykge1xuICAgIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tRmxleEVtYmVkLXJhdGlvLS0zYnkxIHsgcGFkZGluZy1ib3R0b206IGNhbGMoMTAwJSAvIDMpOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTJieTEgeyBwYWRkaW5nLWJvdHRvbTogNTAlOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTE2Ynk5IHsgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tRmxleEVtYmVkLXJhdGlvLS00YnkzIHsgcGFkZGluZy1ib3R0b206IDc1JTsgfVxuICAgIFx0fVxuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEdSSURcbi8vICAgVmVyc2lvbiAzLjAuMyAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy9jb21wb25lbnRzLWdyaWRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyBHcmlkXG4vLyBHcmlkLS1hbGlnbkNlbnRlclxuLy8gR3JpZC0tYWxpZ25SaWdodFxuLy8gR3JpZC0tYWxpZ25NaWRkbGVcbi8vIEdyaWQtLWFsaWduQm90dG9tXG4vLyBHcmlkLS1maXRcbi8vIEdyaWQtLWVxdWFsSGVpZ2h0XG4vLyBHcmlkLWNlbGxcbi8vIEdyaWQtY2VsbC0tY2VudGVyXG5cblxuLyoqIEBkZWZpbmUgR3JpZCAqL1xuXG4vLyA6cm9vdCB7XG4vLyAgIC0tR3JpZC1ndXR0ZXItc2l6ZTogMjBweDtcbi8vIH1cblxuJEdyaWQtZ3V0dGVyLXNpemU6IHNwYWNlKDAuNzUpO1xuXG4vKipcbiAqIENvcmUgZ3JpZCBjb21wb25lbnRcbiAqXG4gKiBETyBOT1QgYXBwbHkgZGltZW5zaW9uIG9yIG9mZnNldCB1dGlsaXRpZXMgdG8gdGhlIGBHcmlkYCBlbGVtZW50LiBBbGwgY2VsbFxuICogd2lkdGhzIGFuZCBvZmZzZXRzIHNob3VsZCBiZSBhcHBsaWVkIHRvIGNoaWxkIGdyaWQgY2VsbHMuXG4gKi9cblxuLyogR3JpZCBjb250YWluZXJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWxsIGNvbnRlbnQgbXVzdCBiZSBjb250YWluZWQgd2l0aGluIGNoaWxkIGBHcmlkLWNlbGxgIGVsZW1lbnRzLlxuICpcbiAqIDEuIEFjY291bnQgZm9yIGJyb3dzZXIgZGVmYXVsdHMgb2YgZWxlbWVudHMgdGhhdCBtaWdodCBiZSB0aGUgcm9vdCBub2RlIG9mXG4gKiAgICB0aGUgY29tcG9uZW50LlxuICovXG5cbi5HcmlkIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZmxleDsgLyogMSAqL1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBtYXJnaW46IDA7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMSAqL1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiBjZW50ZXIgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25DZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogcmlnaHQgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25SaWdodCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IG1pZGRsZS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cblxuLkdyaWQtLWFsaWduTWlkZGxlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYm90dG9tLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25Cb3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGFsbG93IGNlbGxzIHRvIGVxdWFsIGRpc3RyaWJ1dGUgd2lkdGhcbiAqXG4gKiAxLiBQcm92aWRlIGFsbCB2YWx1ZXMgdG8gYXZvaWQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgaHR0cDovL2dpdC5pby92bGxDN1xuICpcbiAqICAgIFVzZSBgMCVgIHRvIGF2b2lkIGJ1ZyBpbiBJRTEwLzExIHdpdGggdW5pdGxlc3MgZmxleCBiYXNpc1xuICogICAgaHR0cDovL2dpdC5pby92bGxXeFxuICovXG5cbi5HcmlkLS1maXQgPiAuR3JpZC1jZWxsIHtcbiAgZmxleDogMSAxIDAlOyAvKiAxICovXG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGFsbCBjZWxscyBtYXRjaCBoZWlnaHQgb2YgdGFsbGVzdCBjZWxsIGluIGEgcm93XG4gKi9cblxuLkdyaWQtLWVxdWFsSGVpZ2h0ID4gLkdyaWQtY2VsbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGd1dHRlcnNcbiAqL1xuXG4uR3JpZC0td2l0aEd1dHRlciB7XG4gIG1hcmdpbjogMCBjYWxjKC0wLjUgKiAjeyRHcmlkLWd1dHRlci1zaXplfSk7XG59XG5cbi5HcmlkLS13aXRoR3V0dGVyID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgY2FsYygwLjUgKiAjeyRHcmlkLWd1dHRlci1zaXplfSk7XG59XG5cbi8qIEdyaWQgY2VsbFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBObyBleHBsaWNpdCB3aWR0aCBieSBkZWZhdWx0LiBSZWx5IG9uIGNvbWJpbmluZyBgR3JpZC1jZWxsYCB3aXRoIGEgZGltZW5zaW9uXG4gKiB1dGlsaXR5IG9yIGEgY29tcG9uZW50IGNsYXNzIHRoYXQgZXh0ZW5kcyAnR3JpZCcuXG4gKlxuICogMS4gU2V0IGZsZXggaXRlbXMgdG8gZnVsbCB3aWR0aCBieSBkZWZhdWx0XG4gKiAyLiBGaXggaXNzdWUgd2hlcmUgZWxlbWVudHMgd2l0aCBvdmVyZmxvdyBleHRlbmQgcGFzdCB0aGVcbiAqICAgIGBHcmlkLWNlbGxgIGNvbnRhaW5lciAtIGh0dHBzOi8vZ2l0LmlvL3Z3NW9GXG4gKi9cblxuLkdyaWQtY2VsbCB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIGZsZXgtYmFzaXM6IDEwMCU7IC8qIDEgKi9cbiAgbWluLXdpZHRoOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGhvcml6b250YWxseSBjZW50ZXIgb25lIHVuaXRcbiAqIFNldCBhIHNwZWNpZmljIHVuaXQgdG8gYmUgaG9yaXpvbnRhbGx5IGNlbnRlcmVkLiBEb2Vzbid0IGFmZmVjdFxuICogYW55IG90aGVyIHVuaXRzLiBDYW4gc3RpbGwgY29udGFpbiBhIGNoaWxkIGBHcmlkYCBvYmplY3QuXG4gKi9cblxuLkdyaWQtY2VsbC0tY2VudGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cblxuXG4vLyBBdCBtZWRpYS1xdWVyaWVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGlmICgkc3VpdC1ncmlkLWJyZWFrcG9pbnRzID09IHRydWUpIHtcbiAgICBAZWFjaCAkYnJlYWtwb2ludCBpbiBtYXAta2V5cygkZ3JpZC1icmVha3BvaW50cykge1xuICAgIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25DZW50ZXIgIHsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUdyaWQtLWFsaWduUmlnaHQgICB7IGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUdyaWQtLWFsaWduTWlkZGxlICB7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUdyaWQtLWFsaWduQm90dG9tICB7IGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC1jZWxsLS1jZW50ZXIgIHsgbWFyZ2luOiAwIGF1dG87IH1cbiAgICBcdH1cbiAgICB9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi92NC1kZXYvc2Nzcy9taXhpbnMvX2JyZWFrcG9pbnRzLnNjc3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQnJlYWtwb2ludHMgYXJlIGRlZmluZWQgYXMgYSBtYXAgb2YgKG5hbWU6IG1pbmltdW0gd2lkdGgpLFxuLy8gb3JkZXIgZnJvbSBzbWFsbCB0byBsYXJnZTpcbi8vICAgKHhzOiAwLCBzbTogNTQ0cHgsIG1kOiA3NjhweClcbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGVcbi8vIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgKHhzOiAwLCBzbTogNTQ0cHgsIG1kOiA3NjhweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuXHQkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcblx0QHJldHVybiBpZigkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vICAgID4+IGJyZWFrcG9pbnQtbWluKHNtLCAoeHM6IDAsIHNtOiA1NDRweCwgbWQ6IDc2OHB4KSlcbi8vICAgIDU0NHB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0JG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcblx0QHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBsYXJnZXN0IChsYXN0KSBicmVha3BvaW50LlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgY2FsY3VsYXRlZCBhcyB0aGUgbWluaW11bSBvZiB0aGUgbmV4dCBvbmUgbGVzcyAwLjEuXG4vLyAgICA+PiBicmVha3BvaW50LW1heChzbSwgKHhzOiAwLCBzbTogNTQ0cHgsIG1kOiA3NjhweCkpXG4vLyAgICA3NjdweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdCRuZXh0OiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50cyk7XG5cdEByZXR1cm4gaWYoJG5leHQsIGJyZWFrcG9pbnQtbWluKCRuZXh0LCAkYnJlYWtwb2ludHMpIC0gMXB4LCBudWxsKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCB3aWRlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdCRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuXHRAaWYgJG1pbiB7XG5cdFx0QG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcblx0XHRcdEBjb250ZW50O1xuXHRcdH1cblx0fSBAZWxzZSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdCRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuXHRAaWYgJG1heCB7XG5cdFx0QG1lZGlhIChtYXgtd2lkdGg6ICRtYXgpIHtcblx0XHRcdEBjb250ZW50O1xuXHRcdH1cblx0fSBAZWxzZSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuLy8gTWVkaWEgYmV0d2VlbiB0aGUgYnJlYWtwb2ludCdzIG1pbmltdW0gYW5kIG1heGltdW0gd2lkdGhzLlxuLy8gTm8gbWluaW11bSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQsIGFuZCBubyBtYXhpbXVtIGZvciB0aGUgbGFyZ2VzdCBvbmUuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgb25seSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCwgbm90IHZpZXdwb3J0cyBhbnkgd2lkZXIgb3IgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1vbmx5KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50cykge1xuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH1cbn1cblxuLy8gTWVkaWEgdGhhdCBzcGFucyBtdWx0aXBsZSBicmVha3BvaW50IHdpZHRocy5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBiZXR3ZWVuIHRoZSBtaW4gYW5kIG1heCBicmVha3BvaW50c1xuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtYmV0d2VlbigkbG93ZXIsICR1cHBlciwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRsb3dlciwgJGJyZWFrcG9pbnRzKSB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCR1cHBlciwgJGJyZWFrcG9pbnRzKSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICAgU1VJVCBHUklEIFNFVFRJTkdTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcblx0bWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZSAvIDN9O1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXJnaW46IDAgLSN7JGd1dHRlclNwYWNlfTsgfVxufVxuXG4uR3JpZC0td2l0aEd1dHRlciA+IC5HcmlkLWNlbGwge1xuXHRwYWRkaW5nOiAwICRndXR0ZXJTcGFjZSAvIDM7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IHBhZGRpbmc6IDAgJGd1dHRlclNwYWNlOyB9XG59XG5cbi8vJGd1dHRlclNwYWNlTmVnYXRpdmUgOiAtKCRndXR0ZXJTcGFjZSk7XG5cbi8vLkdyaWQtLXdpdGhHdXR0ZXJMZyB7XG4vL1x0bWFyZ2luOiAwICRndXR0ZXJTcGFjZU5lZ2F0aXZlO1xuLy9cdHBhZGRpbmc6IDAgKCRndXR0ZXJTcGFjZSAqIDIpO1xuLy9cbi8vXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhzKSB7IG1hcmdpbjogMCAkZ3V0dGVyU3BhY2VOZWdhdGl2ZTsgfVxuLy99XG4vL1xuLy8uR3JpZC0td2l0aEd1dHRlckxnID4gLkdyaWQtY2VsbCB7XG4vL1x0cGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7IH1cbi8vfVxuXG4uR3JpZC0td2l0aEd1dHRlclNtIHtcblx0bWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZSAvIDl9O1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgbWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZSAvIDN9OyB9XG59XG5cbi5HcmlkLS13aXRoR3V0dGVyU20gPiAuR3JpZC1jZWxsIHtcblx0cGFkZGluZzogMCAkZ3V0dGVyU3BhY2UgLyA5O1xuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2UgLyAzOyB9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQkFTRTogUEFHRVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4gLyoqXG4gICogU2ltcGxlIHBhZ2UtbGV2ZWwgc2V0dXAgZnJvbSBJbnVpdENTUy5cbiAgKlxuICAqIDEuIFNldCB0aGUgZGVmYXVsdCBgZm9udC1zaXplYCBhbmQgYGxpbmUtaGVpZ2h0YCBmb3IgdGhlIGVudGlyZSBwcm9qZWN0LFxuICAqICAgIHNvdXJjZWQgZnJvbSBvdXIgZGVmYXVsdCB2YXJpYWJsZXMuIFRoZSBgZm9udC1zaXplYCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0XG4gICogICAgaW4gZW1zLCB0aGUgYGxpbmUtaGVpZ2h0YCBpcyBjYWxjdWxhdGVkIHRvIGV4aXN0IHVuaXRsZXNzbHkuXG4gICogMi4gRm9yY2Ugc2Nyb2xsYmFycyB0byBhbHdheXMgYmUgdmlzaWJsZSB0byBwcmV2ZW50IGF3a3dhcmQg4oCYanVtcHPigJkgd2hlblxuICAqICAgIG5hdmlnYXRpbmcgYmV0d2VlbiBwYWdlcyB0aGF0IGRvL2RvIG5vdCBoYXZlIGVub3VnaCBjb250ZW50IHRvIHByb2R1Y2VcbiAgKiAgICBzY3JvbGxiYXJzIG5hdHVyYWxseS5cbiAgKiAzLiBFbnN1cmUgdGhlIHBhZ2UgYWx3YXlzIGZpbGxzIGF0IGxlYXN0IHRoZSBlbnRpcmUgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydC5cbiAgKi9cblxuaHRtbCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbiAgICBtaW4taGVpZ2h0OiAxMDAlOyAvKiAzICovXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsOyAvKiAyICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQkFTRTogTElOS1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5hIHtcblx0Y29sb3I6IGN1cnJlbnRDb2xvcjtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdH1cbn1cblxuLy9wIGEsXG4vL2xpIGEge1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdH1cbi8vfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE1JWElOU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBVc2luZyBmb250LWZhY2U/IFVzZSB0aGlzIHdpdGggaXQuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gdHlwZVJlc2V0KCkge1xuICAgIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cblxuLy8gTWVkaWEgcXVlcmllc1xuLy8gSSBsb3ZlIHRoaXMgdmVyc2lvbiwgYnV0IEkgbmVlZCBtb3JlIGZsZXhpYmlsaXR5LiBUaGlzIHdpbGwgYmUgZGVwcmVjYXRlZFxuLy8gYnkgQlM0J3MgYnJlYWtwb2ludHMgbWl4aW4uIFNlZTogYHRvb2xzLm1peGlucy5icmVha3BvaW50c2Bcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBAbGluayBodHRwOi8vc2Fzcy1ndWlkZWxpbi5lcy8jYnJlYWtwb2ludC1tYW5hZ2VyIFNhc3MgR3VpZGVsaW5lcyAtIEJyZWFrcG9pbnQgTWFuYWdlclxuLy8gQGxpbmsgaHR0cDovL3d3dy5zaXRlcG9pbnQuY29tL21hbmFnaW5nLXJlc3BvbnNpdmUtYnJlYWtwb2ludHMtc2Fzcy9cblxuLy9AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuLy9cdC8vICRyYXctcXVlcnk6IG1hcC1nZXQoJGdyaWQtYnJlYWtwb2ludHMsICRicmVha3BvaW50KTtcbi8vXHQvLyAkcmF3LXF1ZXJ5OiBtYXAtZmV0Y2goJHNpemUsIGJyZWFrcG9pbnQsICRicmVha3BvaW50KTtcbi8vXHQkcmF3LXF1ZXJ5OiBzaXplKGJyZWFrcG9pbnQsICRicmVha3BvaW50KTtcbi8vXG4vL1x0QGlmICRyYXctcXVlcnkge1xuLy9cdFx0JHF1ZXJ5OiBpZih0eXBlLW9mKCRyYXctcXVlcnkpID09ICdzdHJpbmcnLCB1bnF1b3RlKCRyYXctcXVlcnkpLCBpbnNwZWN0KCRyYXctcXVlcnkpKTtcbi8vXG4vL1x0XHRAbWVkaWEgI3skcXVlcnl9IHtcbi8vXHRcdFx0QGNvbnRlbnQ7XG4vL1x0XHR9XG4vL1xuLy9cdH0gQGVsc2Uge1xuLy9cdFx0QGVycm9yICdObyB2YWx1ZSBmb3VuZCBmb3IgYCN7JGJyZWFrcG9pbnR9YC4gJ1xuLy9cdFx0XHQgKyAnUGxlYXNlIG1ha2Ugc3VyZSBpdCBpcyBkZWZpbmVkIGluIGAkYnJlYWtwb2ludHNgIG1hcC4nO1xuLy9cdH1cbi8vfVxuXG5cbi8vIENsZWFyZml4XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gMS4gVGhlIHNwYWNlIGNvbnRlbnQgaXMgb25lIHdheSB0byBhdm9pZCBhbiBPcGVyYSBidWcgd2hlbiB0aGVcbi8vICAgIGNvbnRlbnRlZGl0YWJsZSBhdHRyaWJ1dGUgaXMgaW5jbHVkZWQgYW55d2hlcmUgZWxzZSBpbiB0aGUgZG9jdW1lbnQuXG4vLyAgICBPdGhlcndpc2UgaXQgY2F1c2VzIHNwYWNlIHRvIGFwcGVhciBhdCB0aGUgdG9wIGFuZCBib3R0b20gb2YgZWxlbWVudHNcbi8vICAgIHRoYXQgYXJlIGNsZWFyZml4ZWQuXG4vLyAyLiBUaGUgdXNlIG9mIGB0YWJsZWAgcmF0aGVyIHRoYW4gYGJsb2NrYCBpcyBvbmx5IG5lY2Vzc2FyeSBpZiB1c2luZ1xuLy8gICAgYDpiZWZvcmVgIHRvIGNvbnRhaW4gdGhlIHRvcC1tYXJnaW5zIG9mIGNoaWxkIGVsZW1lbnRzLlxuXG5AbWl4aW4gY2xlYXJmaXgoKSB7XG5cdCY6YmVmb3JlLFxuXHQmOmFmdGVyIHtcblx0XHRjb250ZW50OiBcIiBcIjsgLy8gMVxuXHRcdGRpc3BsYXk6IHRhYmxlOyAvLyAyXG5cdH1cblxuXHQmOmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG5cbi8vIEV2ZW50IHdyYXBwZXJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBAYXV0aG9yIEhhcnJ5IFJvYmVydHNcbi8vIEBwYXJhbSB7Qm9vbH0gJHNlbGYgW2ZhbHNlXSAtIFdoZXRoZXIgb3Igbm90IHRvIGluY2x1ZGUgY3VycmVudCBzZWxlY3RvclxuLy8gQGxpbmsgaHR0cHM6Ly90d2l0dGVyLmNvbS9jc3N3aXphcmRyeS9zdGF0dXMvNDc4OTM4NTMwMzQyMDA2Nzg0XG4vLyBAbGluayBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL3Nhc3Mvc2ltcGxpZnlpbmctY29udGV4dHMtZXZlbnRzL1xuXG5AbWl4aW4gb24tZXZlbnQoJHNlbGY6IGZhbHNlKSB7XG5cdEBpZiAkc2VsZiB7XG5cdFx0Jixcblx0XHQmOmhvdmVyLFxuXHRcdCY6YWN0aXZlLFxuXHRcdCY6Zm9jdXMge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9IEBlbHNlIHtcblx0XHQmOmhvdmVyLFxuXHRcdCY6YWN0aXZlLFxuXHRcdCY6Zm9jdXMge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG5cblxuLy8gQ29udGV4dC1iYXNlZCBzZWxlY3RvclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIE1ha2UgYSBjb250ZXh0LWJhc2VkIHNlbGVjdG9yIGEgbGl0dGxlIG1vcmUgZnJpZW5kbHlcbi8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8gQHBhcmFtIHtTdHJpbmd9ICRjb250ZXh0XG4vLyBAbGluayBodHRwczovL2Nzcy10cmlja3MuY29tL3NuaXBwZXRzL3Nhc3Mvc2ltcGxpZnlpbmctY29udGV4dHMtZXZlbnRzL1xuLy8gLm15LWVsZW1lbnQge1xuLy8gICAgIGRpc3BsYXk6IGZsZXg7XG4vLyAgICAgQGluY2x1ZGUgd2hlbi1pbnNpZGUoJy5uby1mbGV4Ym94Jykge1xuLy8gICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vICAgICB9XG4vLyB9XG4vLyBSZXBsYWNpbmfigKZcbi8vIC5teS1lbGVtZW50IHtcbi8vICAgICBkaXNwbGF5OiBmbGV4O1xuLy8gICAgIC5uby1mbGV4Ym94ICYge1xuLy8gICAgICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vICAgICB9XG4vLyB9XG5cbkBtaXhpbiB3aGVuLWluc2lkZSgkY29udGV4dCkge1xuXHQjeyRjb250ZXh0fSAmIHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG5cbi8vIFRyYW5zaXRpb24gYmFzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFF1aWNrIGFuZCBlYXN5LiBDb3VsZCBleHRlbmQgdGhpc+KAplxuXG5AbWl4aW4gYmFzZVRyYW5zaXRpb24oXG5cdCRwcm9wZXJ0eTogYWxsXG4pIHtcblx0dHJhbnNpdGlvbi1wcm9wZXJ0eTogJHByb3BlcnR5O1xuXHR0cmFuc2l0aW9uLWR1cmF0aW9uOiBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBsb25nKTtcblx0dHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgYmFzZSk7XG59XG5cblxuLy8gU2N1dCByZW0gZmFsbGJhY2tcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBodHRwOi8vZGF2aWR0aGVjbGFyay5naXRodWIuaW8vc2N1dC9yZW1GYWxsYmFjay5odG1sXG4vLyBSZXF1aXJlczogc2N1dC1yZW0gYW5kIHNjdXQtc3RyaXAtdW5pdC5cbi8vIFJlbmFtZWQgcmVtRmFsbGJhY2soKSBmcm9tIHNjdXQtcmVtRmFsbGJhY2soKSBmb3IgZWFzZSBvZiB1c2UuXG5cbkBtaXhpbiByZW1GYWxsYmFjayAoXG5cdCRwaXhlbHMsXG5cdCRwcm9wZXJ0eTogZm9udC1zaXplXG4pIHtcblxuXHQkcHgtdmFsczogbnVsbDtcblx0QGVhY2ggJHZhbCBpbiAkcGl4ZWxzIHtcblx0XHQkdmFsLWluLXB4OiBzY3V0LXN0cmlwLXVuaXQoJHZhbCkgKiAxcHg7XG5cdFx0JHB4LXZhbHM6IGFwcGVuZCgkcHgtdmFscywgJHZhbC1pbi1weCk7XG5cdH1cblx0JHJlbS12YWxzOiByZW0oJHBpeGVscyk7XG5cblx0I3skcHJvcGVydHl9OiAkcHgtdmFscztcblx0I3skcHJvcGVydHl9OiAkcmVtLXZhbHM7XG5cbn1cblxuXG4vLyBUcmFuc2Zvcm0gc21vb3RoaW5nIGhhY2tzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQXMgaXMgb2Z0ZW4gdGhlIGNhc2UsIHNvbWUgZGV2aWNlcy9icm93c2VycyBuZWVkIGFkZGl0aW9uYWwgY29kZSB0byBnZXQgQ1NTIHRvIHdvcmtcbi8vIGluIHRoZSBtb3N0IGRlc2lyZWQgd2F5LiBUaGVzZSBtaXhpbnMgYXJlIHVzZWQgdG8gcXVpY2tseSBkcm9wIGluIGhhY2tzIGZvciBlYWNoIGVsZW1lbnRcbi8vIEZpbmQgb3V0IG1vcmUgaGVyZTogaHR0cHM6Ly9naXRodWIuY29tL0lhbkx1bm4vSG92ZXIvd2lraS9IYWNrcy1FeHBsYWluZWRcbi8vIDEuIEltcHJvdmUgcGVyZm9ybWFuY2Ugb24gbW9iaWxlL3RhYmxldCBkZXZpY2VzXG4vLyAyLiBJbXByb3ZlIGFsaWFzaW5nIG9uIG1vYmlsZS90YWJsZXQgZGV2aWNlc1xuLy8gMy4gVHJhbnNmb3JtcyBuZWVkIHRvIGJlIGJsb2NrLWxldmVsIHRvIHdvcmtcbi8vIDQuIEBDRjogJ3dpbGwtY2hhbmdlJyBpcyBhbG1vc3QgYXZhaWxhYmxlLiBTZWU6IGh0dHBzOi8vZGV2Lm9wZXJhLmNvbS9hcnRpY2xlcy9jc3Mtd2lsbC1jaGFuZ2UtcHJvcGVydHkvXG5cbkBtaXhpbiBoYXJkd2FyZUFjY2VsKCkge1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7IC8vMS5cbn1cblxuQG1peGluIGltcHJvdmVBbnRpQWxpYXMoKSB7XG5cdGJveC1zaGFkb3c6IDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwKTsgLy8gMi5cbn1cblxuQG1peGluIGZvbnRTbW9vdGgoKSB7XG5cdGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuQG1peGluIGZvcmNlQmxvY2tMZXZlbCgpIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLzMuXG5cdC8vIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbkBtaXhpbiBhbnRpY2lwYXRlUGFpbnRpbmcge1xuXHR3aWxsLWNoYW5nZTogYWxsOyAvLyA0LlxufVxuXG5AbWl4aW4gc21vb3RoVHJhbnNpdGlvbigpIHtcblx0Ly9AaW5jbHVkZSBmb3JjZUJsb2NrTGV2ZWwoKTtcblx0QGluY2x1ZGUgaGFyZHdhcmVBY2NlbCgpO1xuXHQvKiBAaW5jbHVkZSBpbXByb3ZlQW50aUFsaWFzKCk7ICovXG5cdEBpbmNsdWRlIGZvbnRTbW9vdGgoKTtcblx0LyogQGluY2x1ZGUgYW50aWNpcGF0ZVBhaW50aW5nKCk7ICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgSU1BR0VTXG4vLyAgIFRPRE86IGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vb24tb2JqZWN0LWZpdC1hbmQtb2JqZWN0LXBvc2l0aW9uL1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyAxLiBGbHVpZCBpbWFnZXMgZm9yIHJlc3BvbnNpdmUgcHVycG9zZXMuXG4vLyAyLiBPZmZzZXQgYGFsdGAgdGV4dCBmcm9tIHN1cnJvdW5kaW5nIGNvcHkuXG4vLyAzLiBTZXR0aW5nIGB2ZXJ0aWNhbC1hbGlnbmAgcmVtb3ZlcyB0aGUgd2hpdGVzcGFjZSB0aGF0IGFwcGVhcnMgdW5kZXIgYGltZ2Bcbi8vICAgIGVsZW1lbnRzIHdoZW4gdGhleSBhcmUgZHJvcHBlZCBpbnRvIGEgcGFnZSBhcy1pcy4gU2FmZXIgYWx0ZXJuYXRpdmUgdG9cbi8vICAgIHVzaW5nIGBkaXNwbGF5OiBibG9jaztgLlxuXG5pbWcge1xuICAgIG1heC13aWR0aDogMTAwJTsgICAgICAgIC8vIDEuXG4gICAgZm9udC1zdHlsZTogaXRhbGljOyAgICAgLy8gMi5cbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvLyAzLlxufVxuXG5cbi8vIDEuIEdvb2dsZSBNYXBzIGJyZWFrcyBpZiBgbWF4LXdpZHRoOiAxMDAlYCBhY3RzIHVwb24gaXQ7IHVzZSB0aGVpciBzZWxlY3RvclxuLy8gICAgdG8gcmVtb3ZlIHRoZSBlZmZlY3RzLlxuLy8gMi4gSWYgYSBgd2lkdGhgIGFuZC9vciBgaGVpZ2h0YCBhdHRyaWJ1dGUgaGF2ZSBiZWVuIGV4cGxpY2l0bHkgZGVmaW5lZCwgbGV04oCZc1xuLy8gICAgbm90IG1ha2UgdGhlIGltYWdlIGZsdWlkLlxuXG4uZ20tc3R5bGUgaW1nLCAvLyAxLlxuaW1nW3dpZHRoXSwgICAgLy8gMi5cbmltZ1toZWlnaHRdIHsgIC8vIDIuXG4gICAgbWF4LXdpZHRoOiBub25lO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgICBUWVBPR1JBUEhZIEVMRU1FTlQgU0VUVElOR1Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLyogdW5jc3M6aWdub3JlICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuYmxvY2txdW90ZSxcbnVsLCBvbCwgbGksIGRsLCBkZFxucCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbixcbnRhYmxlLCB0aCwgdGQsIGNhcHRpb25cbnByZSwgc21hbGwsXG5lbSwgYiB7XG5cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xufVxuXG5cbi8vIFJvb3Qgc3R5bGluZyB0byBjYXNjYWRlIHRocnVcbi8vIE1vdmVkIHRvIGJvZHksIG5vdCA6cm9vdCwgc28gdGhhdCBpdCdzIGVhc2llciB0byB1c2UgZm9udGZhY2VvbmxvYWQuanNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmh0bWwge1xuXHRAaW5jbHVkZSB0eXBlUmVzZXQoKTtcblx0Y29sb3I6IHBhbGV0dGUodGV4dCk7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXIsICRtYWluLWZvbnQtc3RhY2s7XG5cdGZvbnQtc2l6ZTogMTAwJTtcblx0bGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0LXVuaXQ7XG5cdHRleHQtYWxpZ246IGxlZnQ7XG5cdC8vdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgICB0ZXh0LXJlbmRlcmluZzogZ2VvbWV0cmljUHJlY2lzaW9uO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuXG4vLyBDb25zaXN0ZW50IHZlcnRpY2FsIHJoeXRobVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyogdW5jc3M6aWdub3JlICovXG4vLyBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBsaSwgZGwsXG5ibG9ja3F1b3RlLCBwLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCxcbnByZSB7XG5cdG1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGhTcGFjZTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBESVNQTEFZIE9CSkVDVFNcbi8vICAgRnJvbTogU1VJVCBQT1NJVElPTiBVVElMU1xuLy8gICBWZXJzaW9uIDEuMC4xIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL3V0aWxzLXBvc2l0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gdS1wb3NBYnNvbHV0ZVxuLy8gdS1wb3NGaXhlZFxuLy8gby1wb3NBYnNvbHV0ZUNlbnRlclxuLy8gby1wb3NGaXhlZENlbnRlclxuLy8gby1wb3NGdWxsU2NyZWVuXG5cbi8vIHBvc0Fic29sdXRlQ2VudGVyIGxlZ2FjeTpcbi8vIGJvdHRvbTogMCAhaW1wb3J0YW50O1xuLy8gbGVmdDogMCAhaW1wb3J0YW50O1xuLy8gbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XG4vLyBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbi8vIHJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4vLyB0b3A6IDAgIWltcG9ydGFudDtcblxuXG5AbWl4aW4gdS1wb3NBYnNvbHV0ZSB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuQG1peGluIHUtcG9zRml4ZWQge1xuXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuQG1peGluIG8tcG9zQ2VudGVyKFxuXHQkcG9zQ2VudGVyUG9zaXRpb246IGFic29sdXRlXG4pIHtcblx0bGVmdDogNTAlO1xuXHRwb3NpdGlvbjogJHBvc0NlbnRlclBvc2l0aW9uO1xuXHR0b3A6IDUwJTtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbkBtaXhpbiBvLXBvc0Z1bGxTY3JlZW4oXG5cdCRwb3NGdWxsU2NyZWVuOiBmaXhlZFxuKSB7XG5cdGJvdHRvbTogMDtcblx0bGVmdDogMDtcblx0bWFyZ2luOiBhdXRvO1xuXHRwb3NpdGlvbjogJHBvc0Z1bGxTY3JlZW47XG5cdHJpZ2h0OiAwO1xuXHR0b3A6IDA7XG59XG5cbi5vLXBvc0Fic29sdXRlQ2VudGVyICAgIHsgQGluY2x1ZGUgby1wb3NDZW50ZXIoKTsgfVxuLm8tcG9zRml4ZWRDZW50ZXIgICAgICAgeyBAaW5jbHVkZSBvLXBvc0NlbnRlcihmaXhlZCk7IH1cbi5vLXBvc0Z1bGxTY3JlZW4gICAgICAgIHsgQGluY2x1ZGUgby1wb3NGdWxsU2NyZWVuKCk7IH1cbi5vLXBvc0Fic29sdXRlQ2VudGVyQWx0IHsgQGluY2x1ZGUgby1wb3NGdWxsU2NyZWVuKGFic29sdXRlKTsgfVxuXG4vLyAxLiBNYWtlIHN1cmUgZml4ZWQgZWxlbWVudHMgYXJlIHByb21vdGVkIGludG8gYSBuZXcgbGF5ZXIsXG4vLyAgICBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucy5cblxuLm8tcG9zRnVsbFNjcmVlbixcbi5vLXBvc0ZpeGVkQ2VudGVyIHtcblx0YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyAvLyAxXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQ09OVEFJTkVSIE9CSkVDVFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5AbWl4aW4gY29udGFpbmVyKFxuXHQkd2lkdGg6IGNvbnRhaW5lci13aWR0aChyZylcbikge1xuXHRAaW5jbHVkZSBjbGVhcmZpeCgpO1xuXHRoZWlnaHQ6IGluaGVyaXQ7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRtYXgtd2lkdGg6ICR3aWR0aDtcblx0cGFkZGluZzogMCBzcGFjZSgxLjUpO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAvLyBtYW5hZ2UgZW5kIHNwYWNpbmdcblx0cCxcblx0bGksXG5cdG9sIHtcblx0XHQmOmxhc3QtY2hpbGQsXG5cdFx0JjpsYXN0LWNoaWxkIGEge1xuXHRcdFx0bWFyZ2luLWJvdHRvbTogMDtcblx0XHR9XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0cGFkZGluZzogMCBzcGFjZSgyKTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG59XG5cbi5vLWNvbnRhaW5lciB7XG5cdEBpbmNsdWRlIGNvbnRhaW5lcigpO1xuXG5cdCYtLW1kIHtcblx0XHRAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aChtZCkgKTtcblx0fVxuXG5cdCYtLWxnIHtcblx0XHRAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aChsZykgKTtcblx0fVxuXG5cdCYtLXhsIHtcblx0XHRAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aCh4bCkgKTtcblx0fVxuXG5cdCYtLWhlcm8ge1xuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIHNwYWNlKDQpO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuICAgICAgICAgICAgcGFkZGluZzogMCBzcGFjZSgyKTtcbiAgICAgICAgfVxuXHR9XG5cbiAgICAmLS1zdXBlciB7XG4gICAgICAgIC8vQGluY2x1ZGUgY29udGFpbmVyKCBjb250YWluZXItd2lkdGgoc3UpICk7XG5cdFx0bWF4LXdpZHRoOiAxMDAlO1xuXHRcdHBhZGRpbmc6IDAgc3BhY2UoMS41KTtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgICAgICBwYWRkaW5nOiAwIHNwYWNlKDQpO1xuICAgICAgICB9XG5cdH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBPQkpFQ1Q6IENVUlNPUiBTVEFURVNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hdHRyaWJ1dGUtc2VsZWN0b3JzL1xuLy8gaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3NlbGVjdG9ycy9hL2F0dHJpYnV0ZS9cbi8vIEFsc286IEF0dHJpYnV0ZSBOb3QgRXF1YWwgU2VsZWN0b3IgW25hbWUhPeKAnXZhbHVl4oCdXVxuXG4vLyBbZGF0YS12YWx1ZSo9XCJkaXNtaXNzXCJdLFxuLy8gW2RhdGEtKj1cInRvZ2dsZVwiXSxcbi8vIFtkYXRhLXRvZ2dsZV0sXG4vLyBbcmVsXj1cImRhdGEtdG9nZ2xlXCJdLFxuW2RhdGEtbW9kYWwtdG9nZ2xlXSxcbltkYXRhLXRvZ2dsZS1mb2xkXSxcbltkYXRhLWRpc21pc3NdXG57XG5cdGN1cnNvcjogcG9pbnRlcjtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBPQkpFQ1Q6IExJU1Rcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gMS4gUmVtb3ZlIGV4dHJhIHZlcnRpY2FsIHNwYWNpbmcgd2hlbiBuZXN0aW5nIGxpc3RzLlxuXG51bCB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogc3F1YXJlO1xuXHRtYXJnaW4tbGVmdDogbWFwLWZldGNoKCRsaXN0LWluc2V0LCBtYXJnaW4pO1xuXHRwYWRkaW5nLWxlZnQ6IG1hcC1mZXRjaCgkbGlzdC1pbnNldCwgcGFkZGluZyk7XG59XG5cbm9sIHtcblx0bGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsO1xufVxuXG5saSB7XG5cdG1hcmdpbi1ib3R0b206IDA7XG5cblx0PiB1bCxcblx0PiBvbCB7XG5cdFx0bWFyZ2luLWJvdHRvbTogMDsgLy8gMS5cblx0fVxufVxuXG5cbi8vIExpc3Qgb2JqZWN0OiBkZWZhdWx0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gbGlzdCgpIHtcblx0bWFyZ2luLWxlZnQ6IG1hcC1mZXRjaCgkbGlzdC1pbnNldCwgbWFyZ2luKTtcblx0cGFkZGluZy1sZWZ0OiBtYXAtZmV0Y2goJGxpc3QtaW5zZXQsIHBhZGRpbmcpO1xufVxuXG4uby1saXN0IHsgQGluY2x1ZGUgbGlzdCgpOyB9XG5cblxuLy8gQ2xlYW4gbGlzdCBvYmplY3Q6IHJlbW92ZSBhbGwgZGVmYXVsdCBzcGFjaW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AbWl4aW4gbGlzdENsZWFuKCkge1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdG1hcmdpbi1sZWZ0OiAwO1xuXHRwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5vLWxpc3RDbGVhbiB7IEBpbmNsdWRlIGxpc3RDbGVhbigpOyB9XG5cblxuLy8gSW5saW5lIGxpc3Qgb2JqZWN0OlxuLy8gQXBwbHkgdG8gdGhlIHVsL29sIHRhZywgYnV0IGl0J3Mgc2V0dXAgZm9yIHVzZSBvbiBhbnkgZGl2LlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGxpc3RJbmxpbmUoKSB7XG5cdEBpbmNsdWRlIGxpc3RDbGVhbigpO1xuXG5cdGxpLFxuXHRkaXYge1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHQmOm5vdCg6bGFzdC1jaGlsZCkge1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiBzcGFjZSgwLjI1KTtcblx0XHR9XG5cdH1cbn1cblxuLm8tbGlzdElubGluZSB7IEBpbmNsdWRlIGxpc3RJbmxpbmUoKTsgfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogTElOS1Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gVGhlbWU6IGxpbmtcblxuYSB7XG5cdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG5cdC8vYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoIHBhbGV0dGUodGV4dCksIDAuMiApO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG5cdFx0Ly9ib3JkZXItY29sb3I6IHJnYmEoIHBhbGV0dGUodGV4dCksIDEgKTtcblx0fVxufVxuXG5wIGEsXG5saSBhIHtcblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0Ly8gYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdH1cbn1cblxuXG4vLyBPYmplY3Q6IGJ1cmllZCBhbmNob3JzXG4vLyBTYW1lIHBhdHRlcm4gYXMgU3VpdCdzIHUtbGlua0NvbXBsZXgsIGJ1dCBkaWZmZXJlbnQgc3R5bGluZy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBjb21wbGV4TGluayB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHR3aWR0aDogMTAwJTtcblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHQuby1saW5rQnVyaWVkVGFyZ2V0IHtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuXHRcdH1cblx0fVxufVxuXG4uby1saW5rQnVyaWVkIHtcblx0QGluY2x1ZGUgY29tcGxleExpbmsoKTtcblx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMC41KTtcbn1cblxuLy8gRG9uJ3QgZm9yZ2V0OiB0aGlzIGlzIGEgc3Bhbiwgbm90IGFuIDxhPixcbi8vIHNvIGl0IG5lZWRzIHRoZXNlIHN0eWxlcy5cbi5vLWxpbmtCdXJpZWRUYXJnZXQge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuXHRjb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbn1cblxuXG4vLyBDb21wb25lbnQ6IGNvbnRyb2wgdW5kZXJsaW5lcyB3aXRoIGxpbmVhci1ncmFkaWVudFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGxpbmtSdWxlQmxhY2s6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZShkYXJrKSwwKSA1MCUsICByZ2JhKHBhbGV0dGUoZGFyayksMC40KSA1MCUpO1xuJGxpbmtSdWxlVGV4dDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKHRleHQpLDApIDUwJSwgIHJnYmEocGFsZXR0ZSh0ZXh0KSwwLjcpIDUwJSk7XG4kbGlua1J1bGVHcmV5OiAgbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKG11dGVkKSwwKSA1MCUsIHBhbGV0dGUobXV0ZWQpIDUwJSk7XG4kbGlua1J1bGVMaXRlOiAgbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGxpZ2h0KSwwKSA1MCUsIHBhbGV0dGUobGlnaHQpIDUwJSk7XG4kbGlua1J1bGVXaGl0ZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKHdoaXRlKSwwKSA1MCUsIHBhbGV0dGUod2hpdGUpIDUwJSk7XG4kbGlua1J1bGVCcmFuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGJyYW5kKSwwKSA1MCUsIHBhbGV0dGUoYnJhbmQpIDUwJSk7XG4kbGlua1J1bGVOb25lOiAgbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYShwYWxldHRlKGRhcmspLDApIDUwJSwgIHJnYmEocGFsZXR0ZShkYXJrKSwwKSA1MCUpO1xuXG5AbWl4aW4gdW5kZXJsaW5lTGluayhcblx0JG1peGluLXJ1bGU6ICRsaW5rUnVsZUJsYWNrLFxuXHQkbWl4aW4taG92ZXItcnVsZTogbm9uZSxcblx0JG1peGluLWNvbG9yOiBjdXJyZW50Q29sb3IsXG5cdCRtaXhpbi1ob3Zlci1jb2xvcjogaW5oZXJpdCxcblx0Ly8gJG1peGluLWhvdmVyLWNvbG9yOiBjdXJyZW50Q29sb3IsXG5cdCRtaXhpbi1pbnZlcnNlOiBmYWxzZVxuXG4pIHtcblxuXHRAaWYgJG1peGluLXJ1bGUgPT0gJ25vbmUnIHtcblx0XHRiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuXHRcdHBhZGRpbmctYm90dG9tOiAwO1xuXHR9XG5cblx0QGVsc2Uge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6ICRtaXhpbi1ydWxlO1xuXHRcdGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IDFweCAxcHg7XG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuXHRcdGNvbG9yOiAkbWl4aW4tY29sb3I7XG5cdFx0cGFkZGluZy1ib3R0b206IDA7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR9XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogJG1peGluLWhvdmVyLXJ1bGU7XG5cdFx0Y29sb3I6ICRtaXhpbi1ob3Zlci1jb2xvcjtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cbn1cblxuLy8uby1saW5rIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpOyB9XG4vLy5vLWNoaWxkTGluayB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCk7IH0gfVxuLy9cbi8vLm8tbGlua1RleHQgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVUZXh0KTsgfVxuLy8uby1jaGlsZExpbmtUZXh0IHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZVRleHQpOyB9IH1cbi8vXG4vLy5vLWxpbmtHcmV5IHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlR3JleSk7IH1cbi8vLm8tY2hpbGRMaW5rR3JleSB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVHcmV5KTsgfSB9XG4vL1xuLy8uby1saW5rTGl0ZSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUxpdGUpOyB9XG4vLy5vLWNoaWxkTGlua0xpdGUgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlTGl0ZSk7IH0gfVxuLy9cbi8vLm8tbGlua0JyYW5kIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlQnJhbmQpOyB9XG4vLy5vLWNoaWxkTGlua0JyYW5kIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUJyYW5kKTsgfSB9XG4vL1xuLy8uby1saW5rV2hpdGUgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVXaGl0ZSk7IH1cbi8vLm8tY2hpbGRMaW5rV2hpdGUgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlV2hpdGUpOyB9IH1cbi8vXG4vLy5vLWxpbmtJbnZpc2libGUgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKG5vbmUpOyB9XG4vLy5vLWNoaWxkTGlua0ludmlzaWJsZSB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKG5vbmUpOyB9IH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ09NUE9ORU5UOiBDT1ZFUiBJTUFHRVxuLy8gQFVSTDogaHR0cDovL25pY29sYXNnYWxsYWdoZXIuY29tL2ZsZXhpYmxlLWNzcy1jb3Zlci1pbWFnZXMvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIDEuIFRvIGVuYWJsZSB1c2Ugdy8gJy5GbGV4RW1iZWQnXG5AbWl4aW4gY292ZXJJbWFnZSgkZGFya0luc2lkZTogZmFsc2UpIHtcblx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb247XG5cdGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDEwMCU7IC8vIDEuXG5cdC8vIG1heC1oZWlnaHQ6IHJlbSg2MDApO1xuXHRtYXJnaW46IDAgYXV0bztcblx0Ly8gcG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblxuXHRAaWYgJGRhcmtJbnNpZGUge1xuXHRcdCY6YmVmb3JlIHtcblx0XHRcdEBpbmNsdWRlIG8tcG9zRnVsbFNjcmVlbihhYnNvbHV0ZSk7XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMSApIDAlLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4yICkgMTAwJSk7XG5cdFx0XHRiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuXHRcdFx0Y29udGVudDogXCIgXCI7XG5cdFx0XHRvcGFjaXR5OiAxO1xuXHRcdFx0Ly8gei1pbmRleDogLTE7XG5cdFx0fVxuXG5cdH0gQGVsc2Uge1xuXHRcdGNvbnRlbnQ6IG5vbmU7XG5cdH1cblxuXHQvLyBpbiBjYXNlIHRoZSAuby1jb3ZlckltYWdlIGlzIGl0c2VsZiBhIGxpbmtcblx0JiN7YX0ge1xuXHRcdC8vIEBpbmNsdWRlIHUtbGluayhub25lKTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblxuXHR9XG59XG5cbi5vLWNvdmVySW1hZ2Uge1xuXHRAaW5jbHVkZSBjb3ZlckltYWdlKCk7XG59XG5cbi5vLWNvdmVySW1hZ2UtLWRhcmsge1xuXHRAaW5jbHVkZSBjb3ZlckltYWdlKHRydWUpO1xufVxuXG4uby1jb3ZlckltYWdlLS1ibGVuZHMge1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcblx0ICAgIGJhY2tncm91bmQtcG9zaXRpb24teDogMDtcblx0fVxufVxuXG4uby1jb250YWluSW1hZ2Uge1xuXHRAaW5jbHVkZSBjb3ZlckltYWdlKCk7XG5cdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbn1cbiIsIlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIE9CSkVDVDogT0JKRUNULUZJVCBJTUFHRVxuLy8gQFVSTDogaHR0cDovL2NvZGVwZW4uaW8vcm9iaW5yZW5kbGUvcGVuL0J5d05WWD9lZGl0b3JzPTAxMDBcbi8vIFJlcXMgSUUvRWRnZSBmYWxsYmFja+KAplxuLy8gQFVSTDogaHR0cHM6Ly9tZWRpdW0uY29tL0Bwcmltb3pjaWdsZXIvbmVhdC10cmljay1mb3ItY3NzLW9iamVjdC1maXQtZmFsbGJhY2stb24tZWRnZS1hbmQtb3RoZXItYnJvd3NlcnMtYWZiYzUzYmJiMmMzIy5iczgwOWpyOGdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEFQSVxuLy8ub2JqZWN0LWZpdF9maWxsIHsgb2JqZWN0LWZpdDogZmlsbCB9XG4vLy5vYmplY3QtZml0X2NvbnRhaW4geyBvYmplY3QtZml0OiBjb250YWluIH1cbi8vLm9iamVjdC1maXRfY292ZXIgeyBvYmplY3QtZml0OiBjb3ZlciB9XG4vLy5vYmplY3QtZml0X25vbmUgeyBvYmplY3QtZml0OiBub25lIH1cbi8vLm9iamVjdC1maXRfc2NhbGUtZG93biB7IG9iamVjdC1maXQ6IHNjYWxlLWRvd24gfVxuXG5AbWl4aW4gT2JqZWN0Rml0KFxuICAgICRNaXhpbkZpdDogY292ZXJcbikge1xuXHQvL0BpbmNsdWRlIGJhc2VUcmFuc2l0aW9uO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvYmplY3QtZml0OiAkTWl4aW5GaXQ7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5vLWZpdEltYWdlQ292ZXIgeyBAaW5jbHVkZSBPYmplY3RGaXQoKTsgfVxuXG4vLyBGb3IgdXNlIHdpdGggRmxleEVtYmVkXG4uRmxleEVtYmVkLWZpdEltYWdlIHsgQGluY2x1ZGUgT2JqZWN0Rml0KCk7IH1cblxuLy8gVG8gZGFya2VuIGxpa2UgJ0NvdmVySW1hZ2UtLWRhcmsnXG4uRmxleEVtYmVkLWNvbnRlbnQtLWRhcmsge1xuICAgICY6YmVmb3JlIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSggcGFsZXR0ZShicmFuZCksIDEgKSAwJSwgcmdiYSggcGFsZXR0ZShicmFuZCksIDAuMiApIDEwMCUpO1xuICAgICAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICAgICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIC8vIHotaW5kZXg6IC0xO1xuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBURVhUIFRZUE9HUkFQSFlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQ29tbW9uIHRoZW1l4oCmXG5cbkBtaXhpbiB0ZXh0VGVtcGxhdGUoXG5cdCRtaXhpblNpemU6IHRleHQsXG5cdCRtaXhpbkNvbG9yOiBwYWxldHRlKHRleHQpLFxuXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LWJvb2ssXG5cdCRtaXhpbkxldHRlclNwYWNpbmc6IDAsXG5cdCRtaXhpbkxpbmVIZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0LXVuaXRcbikge1xuXG5cdC8vIHN0YW5kYXJkc1xuXHRjb2xvcjogJG1peGluQ29sb3I7XG5cdGZvbnQtZmFtaWx5OiAkbWl4aW5Gb250O1xuXHRsZXR0ZXItc3BhY2luZzogJG1peGluTGV0dGVyU3BhY2luZztcblx0bGluZS1oZWlnaHQ6ICRtaXhpbkxpbmVIZWlnaHQ7XG5cblx0Ly8gc2l6ZXNcblx0Zm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCBzbSk7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCByZyk7IH1cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIGxnKTsgfVxuXG5cdC8vIGNoaWxkcmVuXG5cdD4gbGksXG5cdD4gbGkgYSxcblx0PiBhIHtcblx0XHRjb2xvcjogY3VycmVudENvbG9yO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdGZvbnQtc2l6ZTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdH1cbn1cblxuXG4vLyBUZXh0IGNvbXBvbmVudHMgYnkgc2l6ZeKAplxuXG5AbWl4aW4gdGV4dFJnKCkge1xuXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgKTtcbn1cblxuQG1peGluIHRleHRTbSgpIHtcblx0QGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuXHRcdCRtaXhpblNpemU6IHRleHQtLXNtLFxuXHRcdCRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDJlbSxcbiAgICAgICAgJG1peGluTGluZUhlaWdodDogMS42IFxuXHQpO1xufVxuXG5AbWl4aW4gdGV4dExnKCkge1xuXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG5cdFx0JG1peGluU2l6ZTogdGV4dC0tbGcsXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDA1ZW0sXG4gICAgICAgICRtaXhpbkxpbmVIZWlnaHQ6IDEuNFxuXHQpO1xufVxuXG5cblxuLy8gQ29tcG9uZW50OiBUZXh0XG4vLyBJbml0aWF0ZSBtaXhpbnMgaW4gY2xhc3Nlcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXRleHQtLXNtICAgICAgIHsgQGluY2x1ZGUgdGV4dFNtKCk7IH1cbi5jLXRleHQgICAgICAgICAgIHsgQGluY2x1ZGUgdGV4dFJnKCk7IH1cbi5jLXRleHQtLW1lZGl1bSAgIHsgQGluY2x1ZGUgdGV4dFJnKCk7IGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7IH1cbi5jLXRleHQtLWludHJvICAgIHsgQGluY2x1ZGUgdGV4dFJnKCk7IGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7IG1hcmdpbi1ib3R0b206IHNwYWNlKDAuNSk7IH1cbi5jLXRleHQtLWxnICAgICAgIHsgQGluY2x1ZGUgdGV4dExnKCk7IG1hcmdpbi1ib3R0b206IDA7ID4gc3Ryb25nIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtZXh0cmFib2xkOyB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDsgfSB9XG5cblxuLmMtdGV4dC0tbWV0YSB7XG5cdEBpbmNsdWRlIHRleHRTbSgpO1xuXHRjb2xvcjogcGFsZXR0ZShtZWRpdW0pICFpbXBvcnRhbnQ7XG5cdC8vIHRleHQtYWxpZ246IGNlbnRlcjtcblxuXHQ+IGEge1xuXHRcdGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcblxuXHRcdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdFx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKG1lZGl1bSkgIWltcG9ydGFudDtcblx0XHR9XG5cdH1cblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0bWFyZ2luOiBhdXRvO1xuXHRcdC8vIHdpZHRoOiA3MCU7XG5cdH1cbn1cblxuLmMtY2l0ZSB7XG4gICAgQGluY2x1ZGUgdGV4dFJnKCk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtc2VtaWJvbGQ7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjEyZW07XG4gICAgbWFyZ2luLXRvcDogc3BhY2UoMC41KTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgYSB7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiBpbmhlcml0O1xuICAgIH1cbn1cblxuXG4vLyBGYXN0IHByb2plY3QgaGFja3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXRleHQtLWxnID4gc3Ryb25nIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcbn1cblxuYSA+IHN0cm9uZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cblxuXG4vLyBDb21wb25lbnQ6IFRleHQgYmxvY2tzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy10ZXh0LWJsb2NrIHsgPiAqIHsgQGluY2x1ZGUgdGV4dFJnKCk7IH0gfVxuXG4uYy10ZXh0LWJsb2NrLS1mb290ZXIge1xuXHRAaW5jbHVkZSBsaXN0Q2xlYW4oKTtcblx0bWFyZ2luOiAwO1xuXG5cdCY6OmJlZm9yZSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSggcGFsZXR0ZShiYWNrZ3JvdW5kKSwgMC4yKTtcblx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRoZWlnaHQ6IDFweDtcblx0XHRtYXJnaW46IHNwYWNlKDEpIDAgc3BhY2UoMS4xNSk7XG5cdFx0d2lkdGg6IDIuNSU7XG5cdH1cblxuXHQ+ICoge1xuXHRcdEBpbmNsdWRlIHRleHRSZygpO1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdH1cbn1cblxuXG5cblxuLy8gQ29tcG9uZW50OiBsaXN0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL2xpc3QgY2VsbCBvZiBmaXhlZCB3aWR0aCwgbGlrZSBhIHRhYmJlZCBpbmZvIGVsZW1lbnRcbi5jLWxpc3QtLWl0ZW1UYWcge1xuXHRAaW5jbHVkZSB0ZXh0U20oKTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR3aWR0aDogc3BhY2UoMC43NSk7XG59XG5cbi5jLWxpc3QtLW1ldGEge1xuXHRAaW5jbHVkZSB0ZXh0U20oKTtcblx0QGluY2x1ZGUgbGlzdENsZWFuKCk7XG5cdGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG5cdG1hcmdpbi1ib3R0b206IHNwYWNlKDEuMjUpO1xufVxuXG4uYy1saXN0LS1tZXRhLXRpdGxlIHtcblx0Y29sb3I6IHBhbGV0dGUodGV4dCkgIWltcG9ydGFudDtcblx0bWFyZ2luOiBzcGFjZSgxLjI1KSAwIHNwYWNlKDAuNjI1KSAhaW1wb3J0YW50O1xuXG5cdCY6Zmlyc3QtY2hpbGQge1xuXHRcdG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcblx0fVxufVxuXG5cblxuLy8gVXRpbGl0eTogSFRNTCBlbGVtZW50c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gaDEsIGgyLCBoMywgaDQsIGg1LCBoNixcbi8vIGJsb2NrcXVvdGUsIGZpZ3VyZVxuLy8gbGlcbnVsLCBvbCwgZGwsXG5wLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCwgZmlnY2FwdGlvbixcbnByZSwgYSB7XG5cdEBpbmNsdWRlIHRleHRSZygpO1xufVxuXG5lbSxcbi51LXRleHRFbSB7XG5cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuXHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkLWk7XG59XG5cbmIsXG5zdHJvbmcsXG4udS10ZXh0Qm9sZCB7XG5cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuXHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xufVxuXG5ibG9ja3F1b3RlLFxuLkJsb2NrcXVvdGUge1xuXHQvLyBpcyB0aGlzIHJlcSdkP1xuXHQvLyBAaW5jbHVkZSB0eXBlUmVzZXQoKTtcblx0Y29sb3I6IHBhbGV0dGUobWVkaXVtKTtcblx0Zm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9vaztcblx0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LCB4cyk7XG5cdG1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGhTcGFjZTtcblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LCBzbSk7XG5cdFx0Ly9tYXJnaW4tYm90dG9tOiBzcGFjZSgxKTtcblx0fVxufVxuXG4vLyAuTGVkZSB7XG4vLyBcdEBpbmNsdWRlIHRleHRSZygpO1xuLy8gXHRjb2xvcjogY29sb3IodGV4dCwgYnJhbmQpICFpbXBvcnRhbnQ7XG4vLyBcdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXI7XG4vLyBcdGZvbnQtc2l6ZTogZm9udHNpemUoaGVhZGxpbmUsIHhzKTtcbi8vIFx0bGluZS1oZWlnaHQ6IDEuNDU7XG4vLyBcdC8vIG1hcmdpbi1ib3R0b206IHNwYWNlKDEpO1xuLy9cbi8vIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuLy8gXHRcdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4vLyBcdFx0Zm9udC1zaXplOiBmb250c2l6ZShoZWFkbGluZSwgYmFzZSk7XG4vLyBcdFx0bGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0LXVuaXQ7XG4vLyBcdH1cbi8vIH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBIRUFETElORSBUWVBPR1JBUEhZXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIENvbW1vbiB0aGVtZeKAplxuXG5AbWl4aW4gaGVhZGxpbmVUZW1wbGF0ZShcblx0JG1peGluU2l6ZTogaGVhZGxpbmUsXG5cdCRtaXhpbkNvbG9yOiBwYWxldHRlKHRleHQpLFxuXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LWJvb2ssXG5cdCRtaXhpbkxldHRlclNwYWNpbmc6IC0wLjAxNWVtLFxuXHQkbWl4aW5MaW5lSGVpZ2h0OiAxLjMsXG5cdCRtaXhpbk1hcmdpbkJvdHRvbTogJGJsb2NrU3BhY2UgKiAxLzNcbikge1xuXG5cdC8vIHN0YW5kYXJkc1xuXHRjb2xvcjogJG1peGluQ29sb3I7XG5cdGZvbnQtZmFtaWx5OiAkbWl4aW5Gb250O1xuXHRsZXR0ZXItc3BhY2luZzogJG1peGluTGV0dGVyU3BhY2luZztcblx0bGluZS1oZWlnaHQ6ICRtaXhpbkxpbmVIZWlnaHQ7XG5cdG1hcmdpbi1sZWZ0OiBhdXRvO1xuXHRtYXJnaW4tcmlnaHQ6IGF1dG87XG5cdG1hcmdpbi1ib3R0b206ICRtaXhpbk1hcmdpbkJvdHRvbTtcblx0dGV4dC1hbGlnbjogbGVmdDtcblxuXHQvLyBzaXplc1xuXHRmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHhzKTtcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHJnKTsgfVxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgbGcpOyB9XG5cblx0Ly8gY2hpbGRyZW5cblx0PiBsaSxcblx0PiBsaSBhLFxuXHQ+IGEge1xuXHRcdGJvcmRlci1ib3R0b206IDA7XG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjtcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRmb250LXNpemU6IGluaGVyaXQ7XG5cdFx0bWFyZ2luOiAwO1xuXHR9XG59XG5cblxuLy8gQ29tcG9uZW50IGJ5IHNpemXigKZcblxuQG1peGluIGRpc3BsYXkoKSB7XG4gICAgQGluY2x1ZGUgaGVhZGxpbmVUZW1wbGF0ZShcbiAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAtMC4wMDVlbSxcbiAgICAkbWl4aW5MaW5lSGVpZ2h0OiAxLjEsXG4gICAgJG1peGluU2l6ZTogZGlzcGxheVxuICAgICk7XG5cbiAgICBAaW5jbHVkZSB3aGVuLWluc2lkZShcIi5Gb290ZXJcIikge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiBzcGFjZSgxLjI1KTtcbiAgICB9XG59XG5cbkBtaXhpbiBoZWFkbGluZSgpIHtcblx0QGluY2x1ZGUgaGVhZGxpbmVUZW1wbGF0ZShcblx0XHQkbWl4aW5TaXplOiB0ZXh0LS1sZ1xuXHQpO1xufVxuXG5AbWl4aW4gaGVhZGxpbmVTbSgpIHtcbiAgICBAaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuICAgIC8vJG1peGluU2l6ZTogaGVhZGxpbmUtLXNtLFxuICAgICRtaXhpblNpemU6IHRleHQtLWxnLFxuICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDEyZW1cbiAgICApO1xufVxuXG5AbWl4aW4gaGVhZGxpbmVYcygpIHtcbiAgICBAaW5jbHVkZSBoZWFkbGluZVRlbXBsYXRlKFxuICAgICRtaXhpblNpemU6IGhlYWRsaW5lLS14cyxcbiAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjAxMmVtXG4gICAgKTtcbn1cblxuXG5cblxuLy8gQ29tcG9uZW50OiBoZWFkbGluZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtZGlzcGxheSAgICAgICAgICB7IEBpbmNsdWRlIGRpc3BsYXkoKTsgfVxuLy8uYy1oZWFkbGluZSAgICAgICAgIHsgQGluY2x1ZGUgaGVhZGxpbmUoKTsgZm9udC1mYW1pbHk6ICdqdXBpdGVyJzsgfVxuLmMtaGVhZGxpbmUgICAgICAgICB7IEBpbmNsdWRlIGhlYWRsaW5lKCk7IH1cbi5jLWhlYWRsaW5lLS1zbSAgICAgeyBAaW5jbHVkZSBoZWFkbGluZVNtKCk7IH1cbi5jLWhlYWRsaW5lLS1zbVNlbWkgeyBAaW5jbHVkZSBoZWFkbGluZVNtKCk7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXNlbWlib2xkOyB9XG4uYy1oZWFkbGluZS0teHMgICAgIHsgQGluY2x1ZGUgaGVhZGxpbmVYcygpOyB9XG4uYy1oZWFkbGluZS0teHNTZW1pIHsgQGluY2x1ZGUgaGVhZGxpbmVYcygpOyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1zZW1pYm9sZDsgfVxuXG4uYy1oZWFkbGluZSBlbSB7XG5cdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cblxuLy8gQ29tcG9uZW50OiBoZWFkbGluZSBibG9ja3MuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyAuSGVhZGxpbmUtYmxvY2sgeyA+ICogeyBAaW5jbHVkZSBoZWFkbGluZSgpOyB9IH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBUWVBFIE1JWElOIEhFTFBFUlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gVXRpbGl0eTogUmVzcG9uc2l2ZSBsaW5lIGJyZWFrXG4vLyBodHRwczovL2Nzcy10cmlja3MuY29tL2luamVjdGluZy1saW5lLWJyZWFrL1xuLy8gMS4gZW11bGF0ZXMgdGV4dC1hbGlnbjogY2VudGVyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24obGcpIHtcbiAgICBzcGFuLnUtbGctbGluZUJyZWFrIHtcbiAgICAgICAgZGlzcGxheTogdGFibGUgIWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luOiBhdXRvOyAvLyAxLlxuICAgIH1cbn1cblxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgc3Bhbi51LXNtLWxpbmVCcmVhayB7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgICAgIG1hcmdpbjogYXV0bzsgLy8gMS5cbiAgICB9XG59XG5cblxuXG4vLyBVdGlsaXR5OiB3ZWlnaHRzICYgaXRhbGljc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnUtdGV4dFd0THQgICAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtbGlnaHQgIWltcG9ydGFudDsgfVxuLnUtdGV4dFd0UmcgICAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhciAhaW1wb3J0YW50OyB9XG4udS10ZXh0V3RNZCAgICAgICAgeyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1tZWRpdW0gIWltcG9ydGFudDsgfVxuLnUtdGV4dFd0U2VtaSAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtc2VtaWJvbGQgIWltcG9ydGFudDsgfVxuXG4vLy51LXRleHRFbVJnICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXItaSAhaW1wb3J0YW50OyB9XG4vLy51LXRleHRFbU1kICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LW1lZGl1bS1pICFpbXBvcnRhbnQ7IH1cblxuXG5cblxuLy8gVGV4dCBzaXplc+KAplxuLy8gTWFwIGtleSBtdXN0IGVxdWFsIGNsYXNzIG5hbWUuXG4vLyBUT0RPIDE2MDYzMDogaWYgbm8gb3RoZXIgYnJlYWtwb2ludHMsIG51bGwuXG5cbkBtaXhpbiB0ZXh0U2l6ZShcblx0JG1peGluU2l6ZTogVGV4dFxuKSB7XG5cdGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgeHMpO1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgc20pOyB9XG59XG5cblxuLy8gVGV4dCBibG9jayBtaXhpbnPigKZcblxuQG1peGluIHJldmVyc2VUZXh0QmxvY2sge1xuXHRoMSxcblx0cCxcblx0dWwge1xuXHRcdGNvbG9yOiBwYWxldHRlKGxpZ2h0KSAhaW1wb3J0YW50O1xuXHR9XG59XG5cbi8vLmMtdGV4dC1ibG9jay0tcmV2ZXJzZSB7IEBpbmNsdWRlIHJldmVyc2VUZXh0QmxvY2soKTsgfVxuXG5AbWl4aW4gY2VudGVyVGV4dEJsb2NrIHtcblx0aDEsXG5cdHAsXG5cdHVsIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcblx0fVxufVxuXG4vLy5jLXRleHQtYmxvY2stLWNlbnRlciB7IEBpbmNsdWRlIGNlbnRlclRleHRCbG9jaygpOyB9XG5cbkBtaXhpbiBoZWFkZXJUZXh0QmxvY2sge1xuXHRoMSB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDAuMik7IH1cblx0cCAgeyBtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjM1KTsgfVxufVxuXG4vLy5jLXRleHQtYmxvY2stLWhlYWRlciB7IEBpbmNsdWRlIGhlYWRlclRleHRCbG9jaygpOyB9XG5cblxuLy8gQmFzZSBzcGFjZXIgcnVsZXM/XG4vLyBwICsgaDIgeyBtYXJnaW4tdG9wOiAkc3BhY2UgKiAxLjc1OyB9XG5cbi51LXBTcGFjZSB7XG4gICAgLy9tYXJnaW4tdG9wOlxufVxuXG4vL3AgKyBjaXRlIHsgbWFyZ2luLXRvcDogc3BhY2UoMSk7IH1cbmgyICsgaDMgIHsgbWFyZ2luLXRvcDogc3BhY2UoMC4yKTsgfVxuaDMgKyBwICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjQpOyB9XG5cblxuXG5cblxuXG5cblxuXG5cblxuLy8gQXR0ZW1wdHMgYXQgQGVhY2ggbG9vcHMgb24gc2FzcyBtYXBzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBMb29wIHRocnUgc2l6ZXPigKZcblxuLy8gQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJGdyaWQtYnJlYWtwb2ludHMpIHtcbi8vIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkYnJlYWtwb2ludCkge1xuLy8gXHRcdC51LSN7JGJyZWFrcG9pbnR9LXRleHRMZWZ0ICAgICAgICAgICAgIHsgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9XG4vLyBAZWFjaCAkdGhlbWUgaW4gbWFwLWtleXMoIG1hcC1nZXQoJGNvbmZpZywgXCJ0aGVtZXNcIikgKSB7XG5cbi8vIHRoaXMgZGlkbid0IHdvcmtcblxuLy8gQGVhY2ggJGluY3JlbWVudCBpbiBtYXAta2V5cygkZm9udHNpemUpIHtcbi8vXG4vLyBcdC4jeyRpbmNyZW1lbnR9IHtcbi8vXG4vLyBcdFx0QGVhY2ggJHJlc3BvbnNlIGluIG1hcC12YWx1ZXMoIG1hcC1nZXQoJGZvbnRzaXplLCAkaW5jcmVtZW50KSApIHtcbi8vXG4vLyBcdFx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRyZXNwb25zZSkgeyBmb250LXNpemU6IGZvbnRzaXplKCRpbmNyZW1lbnQsICRyZXNwb25zZSk7IH1cbi8vIFx0XHRcdC8vIGZvbnQtc2l6ZTogZm9udHNpemUoJGluY3JlbWVudCwgJHJlc3BvbnNlKTtcbi8vIFx0XHRcdC8vIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHsgZm9udC1zaXplOiBmb250c2l6ZSgkaW5jcmVtZW50LCBtZCk7IH1cbi8vXG4vLyBcdFx0fVxuLy8gXHR9XG4vL1xuLy8gfVxuXG5cbi8vIExvb3AgdGhydSBzaXplc+KApiBCdXQgSSBuZWVkIG1peGlucyBmaXJzdCwgbm90IGNsYXNzZXPigKZcblxuLy8gQGVhY2ggJHNpemUgaW4gbWFwLWtleXMoJGZvbnRzaXplKSB7XG4vL1xuLy8gXHQuI3skc2l6ZX0ge1xuLy8gXHRcdGZvbnQtc2l6ZTogbWFwLWZldGNoKCRmb250c2l6ZSwgJHNpemUsIHhzKTtcbi8vIFx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogbWFwLWZldGNoKCRmb250c2l6ZSwgJHNpemUsIHNtKTsgfVxuLy8gXHR9XG4vL1xuLy8gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIExBWU9VVDogQk9EWVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5odG1sIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kLWNvbXBsZW1lbnQpO1xufVxuXG4uYy1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlIDA7XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgSEVBREVSIExBWU9VVFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4uYy1oZWFkZXIge1xuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShmYWludCk7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kLWNvbXBsZW1lbnQpO1xuICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlICogMC41IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmMtaGVhZGVyLXRleHQge1xuICAgIC8vQGluY2x1ZGUgaGVhZGxpbmVUZW1wbGF0ZShcblx0Ly9cdCRtaXhpbkNvbG9yOiBwYWxldHRlKHRleHQpLFxuICAgIC8vXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LWJvb2ssXG5cdC8vXHQkbWl4aW5TaXplOiB0ZXh0LS1sZyxcblx0Ly9cdCRtaXhpbk1hcmdpbkJvdHRvbTogMFxuXHQvLyk7XG5cbiAgICBAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgICAgICRtaXhpbkZvbnQ6ICRmb250LXRleHQtYm9vayxcbiAgICAgICAgJG1peGluU2l6ZTogdGV4dC0tcGx1c1xuICAgICk7XG5cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcqJztcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtbGlnaHQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTkwJTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAtNi41JTtcbiAgICAgICAgdG9wOiAtNi4yNSU7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAgICAgbGVmdDogLTMuNzUlO1xuICAgICAgICAgICAgdG9wOiAtMTMlO1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuICAgICAgICAgICAgbGVmdDogLTQuNSU7XG4gICAgICAgICAgICB0b3A6IC0xNSU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhIHtcbiAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlVGV4dCk7XG4gICAgfVxufVxuXG5cblxuXG5cblxuXG4vLy5jLXNlY3Rpb24ge1xuLy8gICAgcGFkZGluZzogJGJsb2NrU3BhY2UgMDtcbi8vfVxuLy9cbi8vLmMtYmxvY2sge1xuLy8gICAgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2U7XG4vLyAgICAmOmZpcnN0LW9mLXR5cGUgeyBtYXJnaW46IDA7IH1cbi8vXG4vL31cbi8vXG4vLy5jLWJsb2NrLWNlbGwge1xuLy8gICAgZGlzcGxheTogYmxvY2s7XG4vL31cbi8vXG4vLy5jLWJsb2NrLWNlbGwgcCB7XG4vLyAgICBtYXJnaW46IHNwYWNlKDEpIDAgMDtcbi8vICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbi8vfVxuLy9cbi8vLmMtbG9nbyB7XG4vLyAgICB3aWR0aDogOTBweDtcbi8vICAgIG1hcmdpbi1ib3R0b206IHNwYWNlKDAuNzUpO1xuLy9cbi8vICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbi8vICAgICAgICB3aWR0aDogMTMwcHg7XG4vLyAgICB9XG4vL31cbi8vXG4vLy5jLWZvb3RlciB7XG4vLyAgICBwYWRkaW5nOiAkYmxvY2tTcGFjZSAwICRibG9ja1NwYWNlIC8gMjtcbi8vICAgIC8vcGFkZGluZzogMCAwICRibG9ja1NwYWNlIC8gMjtcbi8vfVxuLy9cbi8vXG4vL1xuLy9cbi8vXG4vLy8vIHF1aWNrIHNwYWNlcnNcbi8vXG4vLy51LXNwYWNlVEQyICAgIHsgbWFyZ2luLXRvcDogc3BhY2UoMC41KTsgfVxuLy8udS1zcGFjZVQgICAgICB7IG1hcmdpbi10b3A6IHNwYWNlKDEpOyB9XG4vLy51LXNwYWNlVDIgICAgIHsgbWFyZ2luLXRvcDogc3BhY2UoMik7IH1cbi8vLnUtc3BhY2VCICAgICAgeyBtYXJnaW4tYm90dG9tOiBzcGFjZSgxKTsgfVxuLy8udS1zcGFjZUIyICAgICB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDIpOyB9XG4vL1xuLy8udS1zbS1zcGFjZVQgICB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfSB9XG4vLy51LXNtLXNwYWNlVDIgIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7IG1hcmdpbi10b3A6IHNwYWNlKDIpOyB9IH1cbi8vLnUtc20tc3BhY2VURDIgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHsgbWFyZ2luLXRvcDogc3BhY2UoMC41KTsgfSB9XG4vL1xuLy8udS1sZy1zcGFjZVQgICB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihsZykgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfSB9XG4vLy51LWxnLXNwYWNlVEQyIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKGxnKSB7IG1hcmdpbi10b3A6IHNwYWNlKDAuNSk7IH0gfVxuLy9cbi8vLnUteGwtc3BhY2VUICAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oeGwpIHsgbWFyZ2luLXRvcDogc3BhY2UoMSk7IH0gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIENPTVBPTkVOVDogQkxPRyBQT1NUU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBQb3N0IGJsb2NrIGluIGEgbGlzdC5cbi8vIFdoZW4gYSBwb3N0IGlzIGFsc28gYSBsaW5rLlxuLy8gVGhlc2UgYXJlIHZlcnRpY2FsbHkgJiBob3Jpem9udGFsbHkgY2VudGVyZWQuXG4vLyBTZWU6IGh0dHBzOi8vcGhpbGlwd2FsdG9uLmdpdGh1Yi5pby9zb2x2ZWQtYnktZmxleGJveC9kZW1vcy92ZXJ0aWNhbC1jZW50ZXJpbmcvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL2EuUG9zdC0taW5MaXN0IHtcbi8vXHRAaW5jbHVkZSBjb21wbGV4TGluaygpO1xuLy9cdEBpbmNsdWRlIG8tYWxpZ25lcjtcbi8vXHRib3JkZXI6IDA7XG4vL1x0bWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgLyAzO1xuLy9cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vXG4vL1x0KyAuUG9zdC0taW5MaXN0IHtcbi8vXHRcdC8vIG1hcmdpbi10b3A6IHNwYWNlKDMuMjUpO1xuLy9cdFx0bWFyZ2luLXRvcDogJGJsb2NrU3BhY2UgLyAyO1xuLy9cdH1cbi8vXG4vL1x0PiAuUG9zdC1hbGlnbmVyIHtcbi8vXHRcdEBpbmNsdWRlIG8tYWxpZ25lci1pdGVtO1xuLy9cdH1cbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0XHQuby1jb3ZlckltYWdlLFxuLy9cdFx0LlBvc3QtaW1hZ2UsXG4vL1x0XHQuUG9zdC1jb3ZlckltYWdlIHtcbi8vXHRcdFx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcbi8vXHRcdFx0b3BhY2l0eTogMC41O1xuLy9cdFx0fVxuLy9cdH1cbi8vfVxuXG4uUG9zdCArIC5Qb3N0IHtcbiAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZTtcbn1cblxuLy8gbWFya2Rvd24gc2NvcGVcbi5Qb3N0LWNvbnRlbnQge1xuICAgIGEge1xuICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVUZXh0KTtcbiAgICB9XG5cbiAgICBmaWd1cmUge1xuICAgICAgICBtYXJnaW46ICgkcGFyYWdyYXBoU3BhY2UgKiAxLjI1KSAwICgkcGFyYWdyYXBoU3BhY2UgKiAxLjUpO1xuICAgIH1cblxuICAgIGJsb2NrcXVvdGUgcCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoIHBhbGV0dGUobmV1dHJhbCksIDAuNyk7XG4gICAgICAgIC8vYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBwYWxldHRlKHRleHQpO1xuICAgICAgICBjb2xvcjogcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMC43KTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDAyNWVtO1xuICAgICAgICBsaW5lLWhlaWdodDogMS42O1xuICAgICAgICBwYWRkaW5nOiBzcGFjZSgwLjYpIHNwYWNlKDAuNzUpIHNwYWNlKDAuNSk7XG5cbiAgICAgICAgLy8gZm9udCBzaXplc1xuICAgIFx0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LS1xdW90ZSwgc20pO1xuICAgIFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmb250LXNpemU6IGZvbnRzaXplKHRleHQtLXF1b3RlLCByZyk7IH1cbiAgICBcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgZm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LS1xdW90ZSwgbGcpOyB9XG5cbiAgICB9XG59XG5cbi8vIFdoZW4gaW5zaWRlIC5Qb3N0LWNvbnRlbnQgbWFya2Rvd246XG4uUG9zdC1kYXRlIHtcbiAgICBAaW5jbHVkZSB0ZXh0UmcoKTtcbiAgICBjb2xvcjogcGFsZXR0ZShtdXRlZCk7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLXJpZ2h0OiBzcGFjZSgwLjMpO1xufVxuXG4uUG9zdC1pbWFnZSB7XG5cdG1hcmdpbi1ib3R0b206IHNwYWNlKDEpO1xufVxuXG4uUG9zdC1tZXRhIHtcbiAgICBAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG5cdFx0JG1peGluU2l6ZTogdGV4dC0tc20sXG5cdFx0JG1peGluQ29sb3I6IHBhbGV0dGUobXV0ZWQpLFxuXHRcdCRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDI1ZW1cblx0KTtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcGFsZXR0ZShiYXNlKTtcblx0Ly9tYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDEvMztcblx0bWFyZ2luLXRvcDogJHBhcmFncmFwaFNwYWNlICogMS4xO1xuXHRwYWRkaW5nLXRvcDogc3BhY2UoMC41KTtcblxuICAgIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogNzUlO1xuICAgICAgICBtYXJnaW46IDAgc3BhY2UoMC4yNSk7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtM3B4KTtcbiAgICB9XG59XG5cbi5Qb3N0LXRhZ3Mge1xuXHRAaW5jbHVkZSB0ZXh0U20oKTtcblx0Y29sb3I6IHBhbGV0dGUobXV0ZWQpO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0Ly9tYXJnaW4tdG9wOiBzcGFjZSgwLjI1KTtcblxuICAgID4gYSB7XG4gICAgICAgIEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUdyZXkpO1xuICAgIH1cbn1cblxuXG5cblxuXG5cbi5Qb3N0LWhlcm8ge1xuXHRAaW5jbHVkZSBoZWFkZXJUZXh0QmxvY2soKTtcblx0QGluY2x1ZGUgY292ZXJJbWFnZSgpO1xufVxuXG4uUG9zdC1oZXJvLS1pbnZlcnNlIHtcblx0QGluY2x1ZGUgcmV2ZXJzZVRleHRCbG9jaygpO1xufVxuXG4uUG9zdC1jb250ZW50IHtcbn1cblxuXG5cblxuXG5cblxuXG4vLyBkaWZmZXJlbnQgZm9yIGJsb2Nrc1xuXG4vL0BrZXlmcmFtZXMgcG9zdFpvb20ge1xuLy9cdDAlICAgeyB0cmFuc2Zvcm06IHNjYWxlKDEpOyB9XG4vL1x0MTAwJSB7IHRyYW5zZm9ybTogc2NhbGUoMS43NSk7IH1cbi8vfVxuXG4vLyBhLlBvc3Qge1xuLy8gXHRAaW5jbHVkZSBjb21wbGV4TGluaygpO1xuLy8gXHRAaW5jbHVkZSBoZWFkZXJUZXh0QmxvY2soKTtcbi8vIFx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShuZXV0cmFsLWRhcmspO1xuLy8gXHRib3JkZXI6IDA7XG4vLyBcdGNvbnRlbnQ6ICd2aWV3cG9ydC11bml0cy1idWdneWZpbGw7IHBhZGRpbmc6IGNhbGMoNXZoKTsnO1xuLy8gXHRoZWlnaHQ6IGluaGVyaXQ7XG4vLyBcdG92ZXJmbG93OiBoaWRkZW47XG4vLyBcdHBhZGRpbmc6IDV2aDtcbi8vIFx0cG9zaXRpb246IHJlbGF0aXZlO1xuLy9cbi8vIFx0Ji0taW52ZXJzZSB7XG4vLyBcdFx0QGluY2x1ZGUgcmV2ZXJzZVRleHRCbG9jaygpO1xuLy8gXHR9XG4vL1xuLy8gXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcbi8vIFx0XHQuby1jb3ZlckltYWdlLFxuLy8gXHRcdC5Qb3N0LWNvdmVySW1hZ2Uge1xuLy8gXHRcdFx0Ly8gYW5pbWF0aW9uOiBwb3N0Wm9vbSA4MHMgaW5maW5pdGU7XG4vLyBcdFx0XHQvLyBvcGFjaXR5OiAwLjU7XG4vLyBcdFx0XHR0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XG4vLyBcdFx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGVhc2UsIHRyYW5zZm9ybSA4MHMgZWFzZTtcbi8vIFx0XHR9XG4vLyBcdH1cbi8vIH1cblxuXG5cbi8vIC5Qb3N0LWNvdmVySW1hZ2Uge1xuLy8gXHRAaW5jbHVkZSBvLXBvc0Z1bGxTY3JlZW4oYWJzb2x1dGUpO1xuLy8gXHR0cmFuc2Zvcm06IHNjYWxlKDEpO1xuLy8gXHR0cmFuc2l0aW9uOiBvcGFjaXR5IDFzIGVhc2UsIHRyYW5zZm9ybSA4MHMgZWFzZTtcbi8vIH1cbi8vXG4vLyAuUG9zdC1oZXJvSW1hZ2Uge1xuLy9cbi8vIH1cblxuXG5cbi8vIFByb2plY3QgdmFyc1xuLy8gVGhlc2UgdmFycyBhcmUgdGhlIFwiaW5kZXhzdHlsZVwiIGZpZWxkIGluIHBvc3QuX2RhdGFcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIC5Qb3N0LS1waG4ge1xuLy8gXHQvLyBAaW5jbHVkZSByZXZlcnNlVGV4dEJsb2NrKCk7XG4vLyBcdC8vIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUocHJvamVjdC1waG4pO1xuLy9cbi8vIFx0PiAuUG9zdC1jb3ZlckltYWdlIHtcbi8vIFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDExMCU7XG4vLyBcdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDcwJTsgfVxuLy8gXHR9XG4vLyB9XG4vL1xuLy8gLlBvc3QtLXdhcmQ2IHtcbi8vIFx0Ly8gQGluY2x1ZGUgcmV2ZXJzZVRleHRCbG9jaygpO1xuLy8gXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCAjMDE0YjU2LCAwLjI1KSAhaW1wb3J0YW50O1xuLy9cbi8vIFx0PiAuUG9zdC1jb3ZlckltYWdlIHtcbi8vIFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDExMCU7XG4vLyBcdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDcwJTsgfVxuLy8gXHR9XG4vLyB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgIEJVVFRPTlNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuQG1peGluIGJ1dHRvblRoZW1lKCkge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJvcmRlci1zdHlsZTogc29saWQ7XG5cdGJvcmRlci13aWR0aDogMXB4O1xuXHRwYWRkaW5nOiAwIHNwYWNlKDAuNzUpO1xuXG4gICAgLy8gdGhlbWUgdW51c2VkXG4gICAgLy8gYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3IgY29tZXMgZnJvbSBTdWl04oCmXG4gICAgLy9ib3JkZXItY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgIC8vYm9yZGVyLXJhZGl1czogbWFwLWZldGNoKCRib3JkZXItcmFkaXVzLCBiYXNlKTtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAxICk7XG5cdC8vIHRyYW5zaXRpb246IGFsbCB0cmFuc2l0aW9uKGR1cmF0aW9uLCBzaG9ydCkgdHJhbnNpdGlvbih0eXBlLCBiYXNlKTtcblx0Ly8gdmVydGljYWwtYWxpZ246IHRvcDsgLy8gMS5cblxuXHRhIHtcblxuXHR9XG5cblx0JltkaXNhYmxlZF0ge1xuXHRcdGJvcmRlci1jb2xvcjogcGFsZXR0ZShtdXRlZCk7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShtdXRlZCk7XG5cdFx0Y3Vyc29yOiBub3QtYWxsb3dlZDtcblx0XHRvcGFjaXR5OiAwLjQ7XG5cdH1cblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdFx0b3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xuXG4gICAgICAgIC8vIHRoZW1lIHVudXNlZFxuICAgICAgICAvL29wYWNpdHk6IDAuNTtcblx0fVxufVxuXG5AbWl4aW4gYnV0dG9uVGV4dCgpIHtcbiAgICBAaW5jbHVkZSB0eXBlUmVzZXQoKTtcbiAgICBAaW5jbHVkZSB0ZXh0TGcoKTtcbiAgICBsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBsZyk7XG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcblxuICAgIC8vIHRoZW1lIHVudXNlZFxuICAgIC8vY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgIC8vZm9udC1mYW1pbHk6ICRmb250LWJ1dHRvbjtcbiAgICAvL2ZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHhzKTtcbiAgICAvL2xldHRlci1zcGFjaW5nOiAwLjA1ZW07XG5cbiAgICBAaW5jbHVkZSBvbi1ldmVudCgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgICAgIGJvcmRlci1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKHdoaXRlKTtcbiAgICB9XG59XG5cblxuLy8gUHJpbWFyeSBidXR0b25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBidXR0b24oKSB7XG5cdEBpbmNsdWRlIGJ1dHRvblRoZW1lKCk7XG5cdEBpbmNsdWRlIGJ1dHRvblRleHQoKTtcbn1cblxuLnQtYnV0dG9uIHtcblx0QGluY2x1ZGUgYnV0dG9uO1xufVxuXG4udC1idXR0b24tLWJyYW5kIHtcblx0QGluY2x1ZGUgYnV0dG9uO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcblx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbn1cblxuLnQtYnV0dG9uLS1yZXYge1xuXHRAaW5jbHVkZSBidXR0b247XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcblx0Ym9yZGVyLXdpZHRoOiAxcHg7XG59XG5cbi50LWJ1dHRvbi0tZnVsbCB7XG5cdC8vQGluY2x1ZGUgYnV0dG9uO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHdpZHRoOiAxMDAlO1xufVxuXG5cbi8vIFNlY29uZGFyeSBidXR0b25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL0BtaXhpbiB0ZXh0QnV0dG9uU20oXG4vL1x0JG1peGluQ29sb3I6IHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCksXG4vL1x0JG1peGluQm9yZGVyQ29sb3I6ICRtaXhpbkNvbG9yXG4vLykge1xuLy9cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuLy9cdGNvbG9yOiAkbWl4aW5Db2xvcjtcbi8vXHRmb250LWZhbWlseTogJGZvbnQtYnV0dG9uO1xuLy9cdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHhzKTtcbi8vXHRsZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuLy9cdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGNvbmNpc2UpO1xuLy9cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbi8vXHRcdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHJnKTtcbi8vXHR9XG4vL1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdFx0Ly8gYm9yZGVyLWNvbG9yOiByZ2JhKCAkbWl4aW5Cb3JkZXJDb2xvciwgMC41KTtcbi8vXHRcdC8vIGNvbG9yOiByZ2JhKCAkbWl4aW5Db2xvciwgMC41KTtcbi8vXHRcdGNvbG9yOiAkbWl4aW5Db2xvcjtcbi8vXHR9XG4vL31cbi8vXG4vL0BtaXhpbiBidXR0b25TZWNvbmRhcnkoKSB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uVGhlbWUoKTtcbi8vXHRAaW5jbHVkZSB0ZXh0QnV0dG9uU20oKTtcbi8vXHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHRib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcbi8vXHRib3JkZXItd2lkdGg6IDFweDtcbi8vXHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBjb25jaXNlKSAhaW1wb3J0YW50O1xuLy9cdHBhZGRpbmctdG9wOiAxcHg7XG4vL1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdH1cbi8vfVxuLy9cbi8vLnQtYnV0dG9uU2Vjb25kYXJ5IHtcbi8vXHRAaW5jbHVkZSBidXR0b25TZWNvbmRhcnkoKTtcbi8vfVxuXG5cbi8vIEludmlzaWJsZSBidXR0b24gKGZvciBob2xkaW5nIHRoZSB0b3VjaCBzcGFjZSAmIGxheW91dClcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vQG1peGluIGJ1dHRvbkludmlzaWJsZSAoKSB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uVGhlbWUoKTtcbi8vXHRAaW5jbHVkZSB0ZXh0QnV0dG9uU20oJG1peGluQ29sb3I6IHBhbGV0dGUoYnJhbmQpICk7XG4vL1x0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4vL1x0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHRwYWRkaW5nOiAwIDAgMCBzcGFjZSgwLjc1KTtcbi8vXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0XHRjb2xvcjogcGFsZXR0ZShicmFuZCk7XG4vL1x0fVxuLy99XG4vL1xuLy8udC1idXR0b25JbnZpc2libGUge1xuLy9cdEBpbmNsdWRlIGJ1dHRvbkludmlzaWJsZSgpO1xuLy99XG5cblxuLy8gQnV0dG9uIHNpemVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLy50LWJ1dHRvbiB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uO1xuLy9cbi8vXHQmLS1tZCB7XG4vL1x0XHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBiYXNlKTtcbi8vXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdHdpZHRoOiBzcGFjZSg1KTtcbi8vXG4vL1x0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhzKSB7XG4vL1x0XHRcdHdpZHRoOiBzcGFjZSg2KTtcbi8vXHRcdH1cbi8vXHR9XG4vL1xuLy9cdCYtLWxnIHtcbi8vXHRcdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGxhcmdlKTtcbi8vXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdHdpZHRoOiAxMDAlO1xuLy9cbi8vXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbi8vXHRcdFx0d2lkdGg6IHNwYWNlKDEyKTtcbi8vXHRcdH1cbi8vXHR9XG4vL1xuLy9cdCYtLWZ1bGwge1xuLy9cdFx0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGFyZ2UpO1xuLy9cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuLy9cdFx0d2lkdGg6IDEwMCU7XG4vL1x0fVxuLy99XG4vL1xuLy8udC14cy1idXR0b24ge1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcbi8vXHRcdCYtLW1kIHtcbi8vXHRcdFx0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgYmFzZSk7XG4vL1x0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdFx0d2lkdGg6IHNwYWNlKDYpO1xuLy9cdFx0fVxuLy9cdH1cbi8vfVxuXG5cbi8vIENsb3NlIGJ1dHRvbiAodGhpcyBqdXN0IHBvc2l0aW9ucyBhbiBpY29uKVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnQtYnV0dG9uQ2xvc2Uge1xuXHRjb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdHBvc2l0aW9uOiBmaXhlZDtcblx0cmlnaHQ6IHNwYWNlKDAuNSk7XG5cdHRvcDogc3BhY2UoMC41KTtcblx0ei1pbmRleDogbWFwLWZldGNoKCR6LWluZGV4LCBmaXJzdCk7XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0b3V0bGluZTogbm9uZTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcblx0XHRyaWdodDogc3BhY2UoMSk7XG5cdFx0dG9wOiAzMXB4O1xuXHR9XG59XG5cblxuXG4vLyBTdWJ0aXRsZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gdXNlIHRoaXMgdG8gdmVydGljYWxseSBhbGlnbiBlbGVtZW50cyB3aXRoIGEgYnV0dG9uXG4vLyAuQnV0dG9uTGluZUhlaWdodCB7XG4vLyAgICAgbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgYmFzZSk7XG4vLyAgICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbi8vIH1cblxuLy8gcGFkZGluZy10b3A6IDJweDsgLy8gdGhlbWUgdHlwb2dyYXBoeSBhbGlnbm1lbnRcbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRk9STVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5pbnB1dCxcbnRleHRhcmVhLFxuc2VsZWN0LFxubGFiZWwge1xuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRvdXRsaW5lOiAwO1xuXHR9XG59XG5cbi8vaW5wdXQ6bm90KFt0eXBlPVwicmFkaW9cIl0pLFxuLy9pbnB1dDpub3QoW3R5cGU9XCJzdWJtaXRcIl0pLFxuLy9pbnB1dDpub3QoXCIuQnV0dG9uXCIpLFxuaW5wdXRbdHlwZT1cInRleHRcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwidGVsXCJdLFxudGV4dGFyZWEge1xuXHRiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHJlc2l6ZTogbm9uZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG5cbiAgICAvLyB0aGVtZVxuICAgIEBpbmNsdWRlIHRleHRMZygpO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC40ICk7XG4gICAgbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGcpO1xuXHRwYWRkaW5nOiAwIDAgM3B4IDA7XG5cdHRyYW5zaXRpb246IGFsbCBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBsb25nKSBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIHR5cGUsIGJhc2UpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAwLjQgKTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIFx0cGFkZGluZy1sZWZ0OiBzcGFjZSgwLjUpO1xuICAgIH1cblxuICAgIC8vIHRoZW1lIHVudXNlZFxuICAgIC8vYm9yZGVyLXJhZGl1czogbWFwLWZldGNoKCRib3JkZXItcmFkaXVzLCBiYXNlKTtcbiAgICAvL3BhZGRpbmc6IDAgc3BhY2UoMi8zKTtcblxuXHQvL0BpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHQvL1x0b3V0bGluZTogMDtcblx0Ly99XG5cbiAgICAvLyBmaWxsZWQtaW4gZm9ybSBzdHlsaW5nXG5cdCY6LXdlYmtpdC1hdXRvZmlsbCB7XG5cdFx0LXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCByZW0oMTAwKSBwYWxldHRlKGZhaW50KSBpbnNldDtcblx0XHQtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdFx0YmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcblx0fVxuXG5cdCRjb2xvci1wbGFjZWhvbGRlcjogcGFsZXR0ZShicmFuZCk7XG5cblx0Jjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cblx0JjotbW96LXBsYWNlaG9sZGVyICAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cblx0Jjo6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cblx0JjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbn1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBpbnB1dCxcbi8vIHRleHRhcmVhIHtcbi8vIFx0Ym9yZGVyOiAxcHggc29saWQgcGFsZXR0ZShiYXNlKTtcbi8vIFx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMC41KTtcbi8vIH1cbi8vXG4vLyB0ZXh0YXJlYSB7XG4vLyBcdGxpbmUtaGVpZ2h0OiAxLjU7XG4vLyBcdHBhZGRpbmctdG9wOiBzcGFjZSgwLjUpO1xuLy8gfVxuXG5cblxuXG5cbi8vIFJFRkFDVE9SOiB0ZXh0IGlucHV0cyBvbmx5IHNvIEkgZG9uJ3Qgb3ZlcnJpZGUgcmFkaW8gYnRuIGNvbXBvbmVudCBzdHlsZXPigKZcblxuLy9pbnB1dFt0eXBlPVwidGV4dFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwidGVsXCJdIHtcbi8vXHRAaW5jbHVkZSB0ZXh0UmcoKTtcbi8vXHRjb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZC1jb3VudGVyKSwgMC43ICk7XG4vL1x0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4vL1x0Ym9yZGVyOiAwO1xuLy9cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbi8vXHRib3JkZXItY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY291bnRlciksIDAuNCApO1xuLy9cdC8vIGJvcmRlci1yYWRpdXM6IG1hcC1mZXRjaCgkYm9yZGVyLXJhZGl1cywgYmFzZSk7XG4vL1x0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuLy9cdC8vIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXI7XG4vL1x0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGcpO1xuLy9cdHBhZGRpbmc6IDA7XG4vL1x0cmVzaXplOiBub25lO1xuLy9cdHRyYW5zaXRpb246IGFsbCBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBsb25nKSBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIHR5cGUsIGJhc2UpO1xuLy9cdHdpZHRoOiAxMDAlO1xuLy9cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbi8vXG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0XHRvdXRsaW5lOiAwO1xuLy9cdH1cbi8vXG4vL1x0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4vL1x0XHQvLyBmb250LXNpemU6IDE2cHg7XG4vL1x0fVxuLy9cbi8vXHQmOi13ZWJraXQtYXV0b2ZpbGwge1xuLy9cdFx0LXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCByZW0oMTAwKSBkYXJrZW4oIHBhbGV0dGUobmV1dHJhbCksNCUpIGluc2V0O1xuLy9cdFx0LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHBhbGV0dGUobWVkaXVtKTtcbi8vXHRcdGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4vL1x0fVxuLy9cbi8vXHQkY29sb3ItcGxhY2Vob2xkZXI6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY291bnRlciksIDAuNyApO1xuLy9cbi8vXHQmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHsgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjsgfVxuLy9cdCY6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4vL1x0Jjo6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbi8vXHQmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciAgICAgIHsgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjsgfVxuLy99XG5cblxuLy8gRmxvYXRpbmcgbGFiZWwgcGF0dGVyblxuLy8gVXN1YWxseSByZXF1aXJlcyBKUyB1bmxlc3MgeW91J3JlIHVzaW5nIFJlYWN04oCmXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKiB1bmNzczppZ25vcmUgKi9cbi8vLkZvcm0tZ3JvdXAge1xuLy9cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vXG4vL1x0Ly8mOm5vdCg6bGFzdC1jaGlsZCkge1xuLy9cdC8vXHRtYXJnaW46IDAgMCBzcGFjZSgxLjEpO1xuLy9cdC8vfVxuLy9cbi8vXHRsYWJlbCB7XG4vL1x0XHRAaW5jbHVkZSB0ZXh0TGcoKTtcbi8vXHRcdGNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMSApO1xuLy9cdFx0Y3Vyc29yOiB0ZXh0O1xuLy9cdFx0bGVmdDogMDtcbi8vXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vXHRcdHRvcDogNnB4O1xuLy9cdFx0dHJhbnNpdGlvbjogYWxsIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGZhc3QpIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgZmluZSk7XG4vL1x0XHR6LWluZGV4OiA5OTtcbi8vXHR9XG4vL1xuLy9cdGlucHV0LkZvcm0tY29udHJvbCxcbi8vXHR0ZXh0YXJlYS5Gb3JtLWNvbnRyb2wge1xuLy9cdH1cbi8vXG4vL1x0Ji0tc20ge1xuLy9cdFx0Ly8gbGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgbGcpO1xuLy9cdFx0bGluZS1oZWlnaHQ6IDM4cHg7XG4vL1xuLy9cdFx0bGFiZWwge1xuLy9cdFx0XHRAaW5jbHVkZSB0ZXh0UmcoKTtcbi8vXHRcdFx0Y29sb3I6IHBhbGV0dGUoYnJhbmQtY291bnRlcik7XG4vL1x0XHR9XG4vL1xuLy9cdFx0aW5wdXQuRm9ybS1jb250cm9sIHtcbi8vXHRcdFx0bGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4vL1x0XHR9XG4vL1x0fVxuLy9cbi8vXHQvLyByZXRhaW4gdGhlbWUgdHlwb2dyYXBoeSBhbGlnbm1lbnRcbi8vXHQvLyBpbnB1dC5CdXR0b24ge1xuLy9cdC8vICAgICBwYWRkaW5nLXRvcDogMnB4O1xuLy9cdC8vIH1cbi8vXG4vL1x0Ly8gLyogdW5jc3M6aWdub3JlICovXG4vL1x0Ly8gJi5pcy1hY3RpdmUgPiBsYWJlbDpub3QoLmhhcy1lcnJvcikge1xuLy9cdC8vICAgICAvLyBjb2xvcjogcGFsZXR0ZShjaGFyY29hbCk7XG4vL1x0Ly8gICAgIC8vIGZvbnQtc2l6ZTogcmVtKCRzaXplVGV4dFNtICogMC42NSk7XG4vL1x0Ly8gICAgIG9wYWNpdHk6IDA7XG4vL1x0Ly8gICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWShyZW0oLTEwKSk7XG4vL1x0Ly8gfVxuLy99XG4vL1xuLy8uRm9ybS1ncm91cC5pcy1hY3RpdmUge1xuLy9cdGxhYmVsIHtcbi8vXHRcdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dC0tc20sIHNtKTtcbi8vXHRcdG9wYWNpdHk6IDE7XG4vL1x0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxcHgsIC0xNnB4KTtcbi8vXHR9XG4vL1xuLy9cdGlucHV0LkZvcm0tY29udHJvbCB7XG4vL1x0XHRib3JkZXItY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY29tcGxlbWVudCksIDEgKTtcbi8vXHRcdGNvbG9yOiBwYWxldHRlKGJyYW5kLWNvbXBsZW1lbnQpO1xuLy9cdH1cbi8vfVxuLy9cbi8vLkZvcm0tZ3JvdXAuaGFzLWVycm9yIHtcbi8vXHRsYWJlbCB7XG4vL1x0XHRjb2xvcjogcGFsZXR0ZShiYWQtbmV3cyk7XG4vL1x0fVxuLy9cbi8vXHRpbnB1dC5Gb3JtLWNvbnRyb2wge1xuLy9cdFx0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJhZC1uZXdzKTtcbi8vXHR9XG4vL31cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
